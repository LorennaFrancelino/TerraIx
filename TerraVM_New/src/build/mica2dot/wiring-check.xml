<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:TerraVMAppC.nc">
      <from><interface-ref name="BSBoot" scoped="" ref="0x40417370"/></from>
      <to><interface-ref name="BSBoot" scoped="" ref="0x405228e8"/></to>
    </wire>
    <wire loc="31:BasicServicesC.nc">
      <from><interface-ref name="BSBoot" scoped="" ref="0x405228e8"/></from>
      <to><interface-ref name="BSBoot" scoped="" ref="0x405b4310"/></to>
    </wire>
    <wire loc="21:TerraVMAppC.nc">
      <from><interface-ref name="BSUpload" scoped="" ref="0x40423cf8"/></from>
      <to><interface-ref name="BSUpload" scoped="" ref="0x405b7c08"/></to>
    </wire>
    <wire loc="34:BasicServicesC.nc">
      <from><interface-ref name="BSUpload" scoped="" ref="0x405b7c08"/></from>
      <to><interface-ref name="BSUpload" scoped="" ref="0x407165f8"/></to>
    </wire>
    <wire loc="22:TerraVMAppC.nc">
      <from><interface-ref name="BSTimerVM" scoped="" ref="0x4043a610"/></from>
      <to><interface-ref name="BSTimerVM" scoped="" ref="0x40522ce8"/></to>
    </wire>
    <wire loc="32:BasicServicesC.nc">
      <from><interface-ref name="BSTimerVM" scoped="" ref="0x40522ce8"/></from>
      <to><interface-ref name="BSTimerVM" scoped="" ref="0x405b4710"/></to>
    </wire>
    <wire loc="23:TerraVMAppC.nc">
      <from><interface-ref name="BSTimerAsync" scoped="" ref="0x4043adb0"/></from>
      <to><interface-ref name="BSTimerAsync" scoped="" ref="0x405b74f8"/></to>
    </wire>
    <wire loc="33:BasicServicesC.nc">
      <from><interface-ref name="BSTimerAsync" scoped="" ref="0x405b74f8"/></from>
      <to><interface-ref name="BSTimerAsync" scoped="" ref="0x405b4eb0"/></to>
    </wire>
    <wire loc="26:TerraVMAppC.nc">
      <from><interface-ref name="VMCustom" scoped="" ref="0x4042f1a0"/></from>
      <to><interface-ref name="VMCustom" scoped="" ref="0x40cf88d8"/></to>
    </wire>
    <wire loc="14:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="VMCustom" scoped="" ref="0x40cf88d8"/></from>
      <to><interface-ref name="VM" scoped="" ref="0x40d15560"/></to>
    </wire>
    <wire loc="29:TerraVMAppC.nc">
      <from><interface-ref name="evtQ" scoped="" ref="0x404332e8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40dc2058"/></to>
    </wire>
    <wire loc="60:TerraVMC.nc">
      <from><interface-ref name="procEvent" scoped="" ref="0x40437a90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:BasicServicesC.nc">
      <from><interface-ref name="BSRadio" scoped="" ref="0x405c0b38"/></from>
      <to><interface-ref name="BSRadio" scoped="" ref="0x40716eb8"/></to>
    </wire>
    <wire loc="24:BasicServicesC.nc">
      <from><interface-ref name="TOSBoot" scoped="" ref="0x4072b718"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405b58a0"/></to>
    </wire>
    <wire loc="72:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x405b58a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40709418"/></to>
    </wire>
    <wire loc="38:BasicServicesC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4072a010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407eec48"/></to>
    </wire>
    <wire loc="23:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407eec48"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40800d00"/></to>
    </wire>
    <wire loc="39:BasicServicesC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x407351f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40801040"/></to>
    </wire>
    <wire loc="29:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40801040"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407fa1a8"/></to>
    </wire>
    <wire loc="40:BasicServicesC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407413c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40802920"/></to>
    </wire>
    <wire loc="28:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40802920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407fba00"/></to>
    </wire>
    <wire loc="41:BasicServicesC.nc">
      <from><interface-ref name="RadioAck" scoped="" ref="0x40729088"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40801cf8"/></to>
    </wire>
    <wire loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40801cf8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407fae60"/></to>
    </wire>
    <wire loc="42:BasicServicesC.nc">
      <from><interface-ref name="RadioSender" scoped="" ref="0x40739b50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40803550"/></to>
    </wire>
    <wire loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40803550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407fc630"/></to>
    </wire>
    <wire loc="43:BasicServicesC.nc">
      <from><interface-ref name="AMAux" scoped="" ref="0x4074a420"/></from>
      <to><interface-ref name="AMAux" scoped="" ref="0x40800268"/></to>
    </wire>
    <wire loc="33:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="AMAux" scoped="" ref="0x40800268"/></from>
      <to><interface-ref name="AMAux" scoped="" ref="0x40ca5108"/></to>
    </wire>
    <wire loc="47:BasicServicesC.nc">
      <from><interface-ref name="RadioReceiver" scoped="" ref="0x4073f100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40803f10"/></to>
    </wire>
    <wire loc="26:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40803f10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407fb010"/></to>
    </wire>
    <wire loc="67:BasicServicesC.nc">
      <from><interface-ref name="BM" scoped="" ref="0x407459f0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x40c9e010"/></to>
    </wire>
    <wire loc="74:BasicServicesC.nc">
      <from><interface-ref name="inQ" scoped="" ref="0x407568e0"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x40caf978"/></to>
    </wire>
    <wire loc="18:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <from><interface-ref name="dataQueue" scoped="" ref="0x40caf978"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x4102fb48"/></to>
    </wire>
    <wire loc="75:BasicServicesC.nc">
      <from><interface-ref name="outQ" scoped="" ref="0x4074c4a0"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x40cec9b8"/></to>
    </wire>
    <wire loc="18:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <from><interface-ref name="dataQueue" scoped="" ref="0x40cec9b8"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x41021b48"/></to>
    </wire>
    <wire loc="85:BasicServicesC.nc">
      <from><interface-ref name="TimerVM" scoped="" ref="0x4074fc10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40cea470"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40cea470"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:BasicServicesC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4074d010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ce62c0"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ce62c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:BasicServicesC.nc">
      <from><interface-ref name="sendTimer" scoped="" ref="0x407613a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ce30a0"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ce30a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:BasicServicesC.nc">
      <from><interface-ref name="ProgReqTimer" scoped="" ref="0x4075e720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ce0e40"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ce0e40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:BasicServicesC.nc">
      <from><interface-ref name="SendDataFullTimer" scoped="" ref="0x4075cae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40cddc70"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40cddc70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:BasicServicesC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4076ca50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40ad3560"/></to>
    </wire>
    <wire loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40ad3560"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40acd010"/></to>
    </wire>
    <wire loc="53:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405cc4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ae2620"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405cc4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40acf1c8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405cc4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f98340"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405cc4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408724e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405cc4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409717a8"/></to>
    </wire>
    <wire loc="67:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x407097b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40368010"/></to>
    </wire>
    <wire loc="53:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40368010"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403deb70"/></to>
    </wire>
    <wire loc="68:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40709d78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405ccde8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405ccde8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405c9968"/></to>
    </wire>
    <wire loc="71:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4071c240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x405cc4f0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x405d6ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c66040"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x405d6ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409f3260"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x405d6740"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40706d90"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x405d4168"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407069e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x405c9d48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dcd010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x405c9d48"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x405d1220"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2/tos/platforms/mica2dot/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405d1220"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x405de010"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica2dot/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405d1220"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x405d15f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x405d15f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x405d6ea0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405de010"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40606130"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405de010"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4061c3e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="CHP_OUT" scoped="" ref="0x40604030"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x406560a0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x406560a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x406a44f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PALE" scoped="" ref="0x40604a18"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x4064ba98"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x4064ba98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4069a790"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PCLK" scoped="" ref="0x406124a0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x4064a4b0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x4064a4b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40699170"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PDATA" scoped="" ref="0x40612e90"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x4064aea8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x4064aea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40699ac8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiSck" scoped="" ref="0x4061b410"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x40647c08"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x40647c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40689d30"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMiso" scoped="" ref="0x4061be10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x406450a0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x406450a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40687030"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMosi" scoped="" ref="0x4062c838"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40646670"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40646670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x406886b0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="OC1C" scoped="" ref="0x406272e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40643a08"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40643a08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x406966b0"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x40651c08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406d9ee0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4064d210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4069c090"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4069c090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea87f8"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40659750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x406a8d68"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x406a8d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed97f8"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x406548e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x406b36b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x406b36b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f3d538"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x40637ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4068d4f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4068d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e1d9e8"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x406554b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x406b4330"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x406b4330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f0c010"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40647210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x406893d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x406893d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e515c0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x406408e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40691170"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40691170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e797f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4064b0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4069bd68"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4069bd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea26c0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40657670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x406a5ac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x406a5ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f086c0"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x4063aa68"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4067f410"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4067f410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40df26c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40687030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e4c538"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x40650750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40690e48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40690e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e746c0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40699ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ed1538"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40652750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x406b1330"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x406b1330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f38538"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40661ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e5dd8"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x406482f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x406a9a80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x406a9a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40edc3b0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x406388e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4068e170"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4068e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e20538"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40643010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40698c88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40698c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e46538"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40662830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406d63e8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x406424b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40693dc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40693dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e7c418"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4064dc08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4069c9e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4069c9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea6228"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40658210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x406a6790"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x406a6790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f0b228"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x406532f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x406b2030"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x406b2030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f3b010"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40636750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4068de48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4068de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e1b538"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40689d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e4f010"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4063f2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40691ac8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40691ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e77228"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4069a790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea00b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x406a44f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f060b0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x406394b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4067fd68"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4067fd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40df00b0"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40645a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40687988"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40687988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e4a010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4064f210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x406a27d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x406a27d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e720b0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40651210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x406b1c88"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x406b1c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f36010"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4064e670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4069d6f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4069d6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eadde8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x40648ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x406a8410"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x406a8410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40edbd70"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40655ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x406b4c88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x406b4c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f3f9e8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40660750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e23b0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x406372f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4068eac8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4068eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e1e010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x406966b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e44010"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40656a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x406b59c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x406b59c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f0e538"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x40642ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40692790"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40692790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e7bde0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4064c670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4069b410"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4069b410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ea5c08"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x40658c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x406a5170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x406a5170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f0ac08"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x40653ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x406b2988"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x406b2988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f3a9e8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4063a070"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40680a28"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40680a28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40df4bb0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x406886b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e4e9e8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4063fce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x406904f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x406904f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e76c08"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40699170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e9fa88"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x406612f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e88f0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x406498e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x406a9128"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x406a9128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ede938"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4064fc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x406a1170"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x406a1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e71a88"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40639ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4068f790"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4068f790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40defa88"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40644590"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40698330"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40698330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e489e8"/></to>
    </wire>
    <wire loc="54:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403e43d0"/></to>
    </wire>
    <wire loc="55:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403e1068"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403678e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403f8670"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40b52010"/></to>
    </wire>
    <wire loc="141:BasicServicesP.nc">
      <from><interface-ref name="ProgReqTimerTask" scoped="" ref="0x40765c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="1055:BasicServicesP.nc">
      <from><interface-ref name="sendNextMsg" scoped="" ref="0x407e1c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="902:BasicServicesP.nc">
      <from><interface-ref name="procInputEvent" scoped="" ref="0x407c4e08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="1008:BasicServicesP.nc">
      <from><interface-ref name="sendMessage" scoped="" ref="0x407cd010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40800d00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4081bdf0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407fc630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40819710"/></to>
    </wire>
    <wire loc="27:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408025c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x407fb6a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x407fb6a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40818798"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407fba00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408177b0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407fb010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40818100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407fae60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40817f28"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407fa1a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40818b08"/></to>
    </wire>
    <wire loc="57:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="RadioAux" scoped="" ref="0x40ca5630"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x4098f3f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4081bdf0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408278e8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40819710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40828a78"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40818798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40821b10"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408177b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4085a920"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x4080a1a0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40812980"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40812980"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40854100"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4081b068"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40822890"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40822890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40857790"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40818100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40821478"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40817f28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40855d90"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40818b08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40821e80"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4080b7c0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408143a0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408143a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40853af8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408278e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40872878"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40853af8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408de488"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4085a920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408e2870"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40854100"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408e0a20"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40822228"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4086a308"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4086a308"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x408dcc38"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40857790"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408717f8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40855d90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e1da8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40812328"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408573c8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408573c8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408e03c8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40835a18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40827ed0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40827ed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408e3d98"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4081f220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4085a5c8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4085a5c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408e2518"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x4081ff20"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x40bd2bd8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4081f5d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4085a920"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaControl" scoped="" ref="0x40859ce8"/></from>
      <to><interface-ref name="CsmaControl" scoped="" ref="0x40872ea0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x408558b8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x40871350"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x4087a1c0"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x4098f3f8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40892890"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40ad3560"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x40892378"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x40971b48"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="WakeupTimer" scoped="" ref="0x40892e20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4097cb60"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4097cb60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadio" scoped="" ref="0x40881af8"/></from>
      <to><interface-ref name="ByteRadio" scoped="" ref="0x408e1010"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioInit" scoped="" ref="0x40871ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408e35f0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioControl" scoped="" ref="0x4086c2f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x408e3970"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x408db308"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x4098f3f8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x408da250"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x409cf2b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x409cf2b0"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x40629860"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x408d8330"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x40bd2bd8"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiRx" scoped="" ref="0x408d94a0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x4096e028"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x408dad70"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x40971b48"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiNoiseFloor" scoped="" ref="0x4088b3d0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x4096e028"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiCheckChannel" scoped="" ref="0x4088e178"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x4096e028"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiPulseCheck" scoped="" ref="0x4088eef0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x4096e028"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="cancelRssi" scoped="" ref="0x4088ad40"/></from>
      <to><function-ref name="cancel" scoped="" ref="0x4096ee10"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x4088d300"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bd7d00"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ActualRssi" scoped="" ref="0x409868b8"/></from>
      <to><interface-ref name="RssiAdc" scoped="" ref="0x409d1e98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiAdc" scoped="" ref="0x409d1e98"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x409ccc70"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40986068"/></from>
      <to><interface-ref name="RssiResource" scoped="" ref="0x409d0b40"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x409d0b40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409cc548"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC" scoped="" ref="0x4098e388"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x409cfd28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000" scoped="" ref="0x409cfd28"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x40603e98"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x4098eb50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bd7d00"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bea870"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40becd40"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40becd40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c750c0"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x408f13c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bebec0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x408f1df8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40adc130"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40adc130"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bba940"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="setWakeupTask" scoped="" ref="0x40887968"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="startStopDone" scoped="" ref="0x40893648"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="sleepCheck" scoped="" ref="0x408a2240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="327:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="adjustSquelch" scoped="" ref="0x408bbb98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="417:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketSent" scoped="" ref="0x4092ab08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="594:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketReceived" scoped="" ref="0x40947010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x409ccc70"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x409e49b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409cc548"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409dd178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409cb868"/></from>
      <to><interface-ref name="RssiConfig" scoped="" ref="0x406118d0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e1940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409cb868"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x409db618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409cbd40"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x409e2a10"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40a96750"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x409e49b0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40a94390"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ab60a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409e01b8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a928b8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e1940"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40ab7470"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40a953d8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40a92040"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x409d9bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x409d9bd8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x409f0aa0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x409f5db0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x409f2040"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409dd178"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a07910"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a07910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f977f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40a87010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409db618"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x409e7850"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x409d7e78"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x409d7e78"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40a09aa8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x409efce8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x405d6740"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40a86bb0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x409f0610"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a85328"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a88470"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a88470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f96418"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a06ec0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403f1680"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40a88068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f96010"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a88b08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f96ab0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f95010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40a87010"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40f95438"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40f98678"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f936d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40fb1248"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40a86bb0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x40fb1640"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40a85010"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fb1958"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a85328"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40fb0010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40a859c0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40aab010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40ad1c88"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40acf6e8"/></to>
    </wire>
    <wire loc="54:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4096fa60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40acf1c8"/></to>
    </wire>
    <wire loc="54:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ae2dd0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40ae2dd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b98f00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ae2620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40adb7d8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40adb7d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40af0c78"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40bbf338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ad9f08"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b9c248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40ad81c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40ad81c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b6b0c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bb9360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40af2da0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40af2da0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b6ab70"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b6ab70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40fd96a0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40af0c78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fdc7f8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b6b0c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40fdcc30"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40fd8868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b3ecb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b3ecb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b357e0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40fd6a28"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b38010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b38010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b30af0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40fd42e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b38970"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b38970"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b2f4f8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40fd3ce8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40b364f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40b364f8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40b52470"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40b9bbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40bbc560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40c90380"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40be8728"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40be8728"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c5bd48"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c7a010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40be1068"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40be1068"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40bf6650"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40bde010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40bf3930"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40bfce68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40bf26c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40bfa028"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40c176c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40bfa028"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40c15340"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40bfa028"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40c13f28"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x40c11b00"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b38010"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c66428"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40be1068"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c8cce0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <from><interface-ref name="dataReady" scoped="" ref="0x4102d6d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <from><interface-ref name="dataReady" scoped="" ref="0x4101f6d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40cd9ac8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="BSRadio" scoped="" ref="0x40d14298"/></from>
      <to><interface-ref name="BSRadio" scoped="" ref="0x405c0b38"/></to>
    </wire>
    <wire loc="17:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40d137e8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40ad3560"/></to>
    </wire>
    <wire loc="20:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="SA" scoped="" ref="0x40d13010"/></from>
      <to><interface-ref name="SAinterface" scoped="" ref="0x40d49368"/></to>
    </wire>
    <wire loc="68:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="SAinterface" scoped="" ref="0x40d49368"/></from>
      <to><interface-ref name="SA" scoped="" ref="0x40d720e0"/></to>
    </wire>
    <wire loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="usrDataQ" scoped="" ref="0x40d13ce8"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x40d75910"/></to>
    </wire>
    <wire loc="18:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <from><interface-ref name="dataQueue" scoped="" ref="0x40d75910"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x4105f3d8"/></to>
    </wire>
    <wire loc="315:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <from><interface-ref name="BCRadio_receive" scoped="" ref="0x40d58400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="S_TEMP" scoped="" ref="0x40d71748"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d98eb0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40d98eb0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4103f010"/></to>
    </wire>
    <wire loc="53:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="S_PHOTO" scoped="" ref="0x40d6f488"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40da30a0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40da30a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41073858"/></to>
    </wire>
    <wire loc="54:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="S_VOLT" scoped="" ref="0x40d6e1a8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d955c8"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40d955c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4106cec8"/></to>
    </wire>
    <wire loc="69:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="A_LEDS" scoped="" ref="0x40d72908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40db8eb8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40db8eb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40db1568"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4103f010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x409e2a10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4103fb98"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40d9a9d0"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40d9a9d0"/></from>
      <to><interface-ref name="TempConfig" scoped="" ref="0x40d97eb8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4103e150"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d97010"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40d97010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d979a0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e1940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4103fb98"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409e01b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x409dd178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x409db618"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4103e150"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempDeviceP.nc">
      <from><interface-ref name="BatMon" scoped="" ref="0x40d944c0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x4064f210"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempDeviceP.nc">
      <from><interface-ref name="BatMonRef" scoped="" ref="0x40d94ed8"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x4064fc08"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x41073858"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41071058"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x41071058"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x409e2a10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41071be0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40d9a9d0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41070150"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d97010"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e1940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41071be0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409e01b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x409dd178"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x409db618"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41070150"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4106cec8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4106a718"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4106a718"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x409e2a10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41068318"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40d9a9d0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410687f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d97010"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e1940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41068318"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409e01b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x409dd178"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x409db618"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x410687f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40dcd010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40db1220"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40db0248"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40dcf188"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40dcf188"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x406394b0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40db0c30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40dcfb90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40dcfb90"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40dcc1d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40daf660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40dce5a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40dce5a8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40dcc1d8"/></to>
    </wire>
    <wire loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <from><interface-ref name="dataReady" scoped="" ref="0x4105ff10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="TerraVMC" loc="14:TerraVMC.nc" safe="">
      <module/>
    </component>
    <component qname="BasicServicesC" loc="15:BasicServicesC.nc">
      <documentation loc="1:BasicServices.h">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="MainC" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <documentation loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="17:/opt/tinyos-2.1.2/tos/platforms/mica2dot/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2dot/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; For the mica2dot, we leave everything as inputs except as explicitly&#10; configured otherwise by other components.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000InitP" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
        <short>&#10; Hardware initialisation for the CC1000 radio.</short>
        <long>&#10; Hardware initialisation for the CC1000 radio. This component is always&#10; included even if the radio is not used.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000P" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC1000SpiP" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc" safe="">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
        <short>&#10; Low-level functions to access the CC1000 bus.</short>
        <long>&#10; Low-level functions to access the CC1000 bus. Built using the mica2&#10; hardware SPI.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/branco/gitspace/Terra/TerraVM/src/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BasicServicesP" loc="14:BasicServicesP.nc">
      <documentation loc="1:BasicServices.h">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="TerraActiveMessageC" loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="57:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the mica2 platform.</short>
        <long>&#10; The Active Message layer on the mica2 platform. This is a naming wrapper&#10; around the CC1000 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer for the CC1000 radio.</short>
        <long>&#10;&#10; The Active Message layer for the CC1000 radio. This configuration&#10; just layers the AM dispatch (CC1000ActiveMessageM) on top of the&#10; underlying CC1000 radio packet (CC1000CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group).&#10; &#10; @author Philip Levis&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageP" loc="49:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc" safe="">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
        <short>&#10; Implementation component for CC1000ActiveMessageC.</short>
        <long>&#10; Implementation component for CC1000ActiveMessageC.&#10;&#10; @author Philip Levis&#10; @date June 19 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC" loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
        <short>&#10; A low-power-listening CC1000 radio stack.</short>
        <long>&#10; A low-power-listening CC1000 radio stack.&#10;&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). &#10;&#10; CC1000RssiP (RSSI sharing), CC1000SquelchP (noise-floor estimation)&#10; and CC1000ControlP (radio configuration) provide supporting roles.&#10;&#10; This code has some degree of platform-independence, via the HplCC1000,&#10; RssiAdc and HplCC1000Spi interfaces which must be provided by the&#10; platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000CsmaP" loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the CSMA and low-power listening logic. Actual&#10; packet transmission and reception is in SendReceive.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SendReceiveP" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the send and receive logic for the CC1000 radio.&#10; It does not do any media-access control. It requests the channel&#10; via the ready-to-send event (rts) and starts transmission on reception&#10; of the clear-to-send command (cts). It listens for packets if the&#10; listen() command is called, and stops listening when off() is called.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000RssiP" loc="55:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc">
        <short>&#10;   RSSI fun.</short>
        <long>&#10;   RSSI fun. It's used for lots of things, and a request to read it&#10;   for one purpose may have to be discarded if conditions change. For&#10;   example, if we've initiated a noise-floor measure, but start &#10;   receiving a packet, we have to:&#60;ul>&#10;   &#60;li>cancel the noise-floor measure (we don't know if the value will&#10;     reflect the received packet or the previous idle state)&#10;   &#60;li>start an RSSI measurement so that we can report signal strength&#10;     to the application&#10;   &#60;/ul>&#60;p>&#10;   This module hides the complexities of cancellation from the rest of&#10;   the stack.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SquelchP" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SquelchP.nc" safe="">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SquelchP.nc">
        <short>&#10; Clear threshold estimation based on RSSI measurements.</short>
        <long>&#10; Clear threshold estimation based on RSSI measurements.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000ControlP" loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc" safe="">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc">
        <short>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.</short>
        <long>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.  It exports a custom interface to control CC1000&#10; operation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000C" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
        <short>&#10; HPL for the CC1000 radio, for the mica2 platform.</short>
        <long>&#10; HPL for the CC1000 radio, for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000C.RssiChannel" loc="21(HplCC1000C.RssiChannel):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.TimerMilliC" loc="44(CC1000CsmaRadioC.TimerMilliC):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40af48f8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x403dbef8"/>
            <typename><typedef-ref name="TOne" ref="0x403dabe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x403dbef8"/>
            <typename><typedef-ref name="TOne" ref="0x403dabe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x403e0148"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.CounterToLocalTimeC" loc="46(CC1000CsmaRadioC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.DummyTimer" loc="44(CC1000CsmaRadioC.DummyTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AMAuxC" loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/AMAuxC.nc">
      <module/>
    </component>
    <component qname="BasicServicesC.Bitmap" loc="37(BasicServicesC.Bitmap):/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
      <documentation loc="32:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
        <short>&#10; WDVM project: Adapted to check if all bits are set&#10; </short>
        <long>&#10; WDVM project: Adapted to check if all bits are set&#10; @author A.Branco &#60;branco@inf.puc-rio.br>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="vmBitVectorC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BasicServicesC.inQueue" loc="12(BasicServicesC.inQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
        <short>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.</short>
        <long>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.&#10; &#10; @param dataType - Data structure type&#10; @param qLength  - Queue length&#10; @param qId      - Unique identifier (suggest to use '(char)unique(&#34;dataQueueC&#34;)' &#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="dataQueueC"/>
        <arguments>
          <type-tag size="I:34" alignment="I:1"><nx_struct-ref name="GenericData" ref="0x40426010"/>
            <typename><typedef-ref name="GenericData_t" ref="0x40426d30"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.inQueue.dQueue" loc="4(BasicServicesC.inQueue.dQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <instance number="0">
        <component-ref qname="dataQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40c9dea8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BasicServicesC.outQueue" loc="12(BasicServicesC.outQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
        <short>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.</short>
        <long>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.&#10; &#10; @param dataType - Data structure type&#10; @param qLength  - Queue length&#10; @param qId      - Unique identifier (suggest to use '(char)unique(&#34;dataQueueC&#34;)' &#10; &#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="dataQueueC"/>
        <arguments>
          <type-tag size="I:34" alignment="I:1"><nx_struct-ref name="GenericData" ref="0x40426010"/>
            <typename><typedef-ref name="GenericData_t" ref="0x40426d30"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.outQueue.dQueue" loc="4(BasicServicesC.outQueue.dQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <instance number="1">
        <component-ref qname="dataQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40c9dea8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BasicServicesC.TimerVM" loc="44(BasicServicesC.TimerVM):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.TimerAsync" loc="44(BasicServicesC.TimerAsync):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.sendTimer" loc="44(BasicServicesC.sendTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.ProgReqTimer" loc="44(BasicServicesC.ProgReqTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.SendDataFullTimer" loc="44(BasicServicesC.SendDataFullTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.DataReqTimer" loc="44(BasicServicesC.DataReqTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VMCustomC" loc="8:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <configuration/>
    </component>
    <component qname="VMCustomP" loc="12:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <documentation loc="1:./BasicServices.h">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="SensActC" loc="14:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <documentation loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
        <short>*********************************************&#10; wdvm - WSNDyn virtual machine project&#10; July, 2012&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="SensActP" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <documentation loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
        <short>*********************************************&#10; wdvm - WSNDyn virtual machine project&#10; July, 2012&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="SensActC.S_TEMP" loc="18(SensActC.S_TEMP):/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
        <short>&#10; Temp sensor.</short>
        <long>&#10; Temp sensor.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensActC.S_TEMP.AdcReadClientC" loc="21(SensActC.S_TEMP.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempDeviceP" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempDeviceP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempDeviceP.nc">
        <short>&#10; Internal component for temp sensor.</short>
        <long>&#10; Internal component for temp sensor. Arbitrates access to the temp&#10; sensor and automatically turns it on or off based on user requests.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TempP" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempP.nc">
        <short>&#10; Internal component for temp sensor reading.</short>
        <long>&#10; Internal component for temp sensor reading.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensActC.S_PHOTO" loc="16(SensActC.S_PHOTO):/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc">
        <short>&#10; Demo sensor for the mica2 platform.</short>
        <long>&#10; Demo sensor for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensActC.S_PHOTO.Sensor" loc="18(SensActC.S_PHOTO.Sensor):/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
        <short>&#10; Temp sensor.</short>
        <long>&#10; Temp sensor.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensActC.S_PHOTO.Sensor.AdcReadClientC" loc="21(SensActC.S_PHOTO.Sensor.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensActC.S_VOLT" loc="16(SensActC.S_VOLT):/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc">
        <short>&#10; Demo sensor for the mica2 platform.</short>
        <long>&#10; Demo sensor for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensActC.S_VOLT.Sensor" loc="18(SensActC.S_VOLT.Sensor):/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
        <short>&#10; Temp sensor.</short>
        <long>&#10; Temp sensor.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensActC.S_VOLT.Sensor.AdcReadClientC" loc="21(SensActC.S_VOLT.Sensor.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>, David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.NoPinC" loc="16(PlatformLedsC.NoPinC):/opt/tinyos-2.1.2/tos/system/NoPinC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="VMCustomC.usrDataQ" loc="12(VMCustomC.usrDataQ):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
        <short>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.</short>
        <long>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.&#10; &#10; @param dataType - Data structure type&#10; @param qLength  - Queue length&#10; @param qId      - Unique identifier (suggest to use '(char)unique(&#34;dataQueueC&#34;)' &#10; &#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="dataQueueC"/>
        <arguments>
          <type-tag size="I:18" alignment="I:1"><nx_struct-ref name="qData" ref="0x40d181d8"/>
            <typename><typedef-ref name="qData_t" ref="0x40d18938"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="VMCustomC.usrDataQ.dQueue" loc="4(VMCustomC.usrDataQ.dQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <instance number="2">
        <component-ref qname="dataQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40c9dea8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TerraVMAppC.evtQ" loc="42(TerraVMAppC.evtQ):/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="evtData" ref="0x40412010"/>
            <typename><typedef-ref name="evtData_t" ref="0x40412638"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4065d5d8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4065d7f0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4065da08" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x406679e0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40667c08" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40667e30" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40664030" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x406add58" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x406bd010" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x406bd238" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x406bd428" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40a2a0a8" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40a405b0" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40a41cb0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40a97bb0" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40a97bb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40af48f8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40af48f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40af4ab8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40aebbf8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40aebbf8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40aebdb8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40adaab8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40adaab8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b96010" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b96010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b961f0" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40bbb8e8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40bbb8e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40c677c0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40c677c0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40c679e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40c59318" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40c59318"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40c59760" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40c59760"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40be6830" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40be6830"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40be6c90" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40be6c90"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40be6ef8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40be6ef8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40c74390" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40c74390"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40c745f8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40c74a80" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40c74a80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="vmBitVectorC" loc="37:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc" abstract="">
      <documentation loc="32:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
        <short>&#10; WDVM project: Adapted to check if all bits are set&#10; </short>
        <long>&#10; WDVM project: Adapted to check if all bits are set&#10; @author A.Branco &#60;branco@inf.puc-rio.br>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x40c9f320" loc="37:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
          <component-ref qname="vmBitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="dataQueueC" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc" abstract="">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
        <short>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.</short>
        <long>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.&#10; &#10; @param dataType - Data structure type&#10; @param qLength  - Queue length&#10; @param qId      - Unique identifier (suggest to use '(char)unique(&#34;dataQueueC&#34;)' &#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="dataType" ref="0x40c9dea8" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
          <component-ref qname="dataQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40c9dea8"/></type-var>
        </typedef>
        <constant name="qLength" ref="0x40cad0d0" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
          <component-ref qname="dataQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="qId" ref="0x40cad2b0" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
          <component-ref qname="dataQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="dataQueueP" loc="4:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc" abstract="">
      <parameters>
        <typedef name="dataType" ref="0x40cd8820" loc="4:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
          <component-ref qname="dataQueueP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40cd8820"/></type-var>
        </typedef>
        <constant name="qLenth" ref="0x40cd8a20" loc="4:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
          <component-ref qname="dataQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
        <constant name="qId" ref="0x40cd8c00" loc="4:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
          <component-ref qname="dataQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TempC" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
        <short>&#10; Temp sensor.</short>
        <long>&#10; Temp sensor.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DemoSensorC" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc">
        <short>&#10; Demo sensor for the mica2 platform.</short>
        <long>&#10; Demo sensor for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NoPinC" loc="16:/opt/tinyos-2.1.2/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40dc0058" loc="42:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40dc0058"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40dc0280" loc="42:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="procEvent" ref="0x40437a90" loc="60:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="procEvent" scoped="" ref="0x40437a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40437c68"/>
        <function-ref name="runTask" scoped="" ref="0x40437d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VMCustom" ref="0x4042f1a0" loc="19:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VMCustom" scoped="" ref="0x4042f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VMCustom"/>
      </instance>
      <interface-functions>
        <function-ref name="evtError" scoped="" ref="0x4042f378"/>
        <function-ref name="procOutEvt" scoped="" ref="0x4042f458"/>
        <function-ref name="setMVal" scoped="" ref="0x4042f538"/>
        <function-ref name="getTime" scoped="" ref="0x4042f618"/>
        <function-ref name="getRealAddr" scoped="" ref="0x4042f6f8"/>
        <function-ref name="callFunction" scoped="" ref="0x4042f7d8"/>
        <function-ref name="reset" scoped="" ref="0x4042f8b8"/>
        <function-ref name="push" scoped="" ref="0x4042f998"/>
        <function-ref name="pop" scoped="" ref="0x4042fa78"/>
        <function-ref name="queueEvt" scoped="" ref="0x4042fb58"/>
        <function-ref name="getMVal" scoped="" ref="0x4042fc38"/>
        <function-ref name="getHaltedFlag" scoped="" ref="0x4042fd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSTimerAsync" ref="0x4043adb0" loc="23:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerAsync" scoped="" ref="0x4043adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40434390"/>
        <function-ref name="fired" scoped="" ref="0x404340f0"/>
        <function-ref name="isRunning" scoped="" ref="0x404341d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x404342b0"/>
        <function-ref name="stop" scoped="" ref="0x40434010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSUpload" ref="0x40423cf8" loc="18:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSUpload" scoped="" ref="0x40423cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSUpload"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40411470"/>
        <function-ref name="setEnv" scoped="" ref="0x40411010"/>
        <function-ref name="loadSection" scoped="" ref="0x404110f0"/>
        <function-ref name="getSection" scoped="" ref="0x404111d0"/>
        <function-ref name="resetMemory" scoped="" ref="0x404112b0"/>
        <function-ref name="start" scoped="" ref="0x40411390"/>
        <function-ref name="getEnv" scoped="" ref="0x40423ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSBoot" ref="0x40417370" loc="17:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSBoot" scoped="" ref="0x40417370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40417548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="evtQ" ref="0x404332e8" loc="21:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="evtQ" scoped="" ref="0x404332e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="evtData" ref="0x40412010"/>
            <typename><typedef-ref name="evtData_t" ref="0x40412638"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4042b048"/>
        <function-ref name="enqueue" scoped="" ref="0x4042b728"/>
        <function-ref name="element" scoped="" ref="0x4042ba78"/>
        <function-ref name="maxSize" scoped="" ref="0x40433dc0"/>
        <function-ref name="dequeue" scoped="" ref="0x4042b3b8"/>
        <function-ref name="empty" scoped="" ref="0x40433910"/>
        <function-ref name="size" scoped="" ref="0x40433b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSTimerVM" ref="0x4043a610" loc="22:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerVM" scoped="" ref="0x4043a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4043ab68"/>
        <function-ref name="fired" scoped="" ref="0x4043a8c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4043a9a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4043aa88"/>
        <function-ref name="stop" scoped="" ref="0x4043a7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSRadio" ref="0x405c0b38" loc="20:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSRadio" scoped="" ref="0x405c0b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405c0d10"/>
        <function-ref name="receive" scoped="" ref="0x405c0df0"/>
        <function-ref name="sendDoneAck" scoped="" ref="0x405c0ed0"/>
        <function-ref name="source" scoped="" ref="0x405b5010"/>
        <function-ref name="sendDone" scoped="" ref="0x405b50f0"/>
        <function-ref name="setRFPower" scoped="" ref="0x405b51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSTimerAsync" ref="0x405b74f8" loc="18:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerAsync" scoped="" ref="0x405b74f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405b7a50"/>
        <function-ref name="fired" scoped="" ref="0x405b77b0"/>
        <function-ref name="isRunning" scoped="" ref="0x405b7890"/>
        <function-ref name="startOneShot" scoped="" ref="0x405b7970"/>
        <function-ref name="stop" scoped="" ref="0x405b76d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSUpload" ref="0x405b7c08" loc="19:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSUpload" scoped="" ref="0x405b7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSUpload"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x405b6390"/>
        <function-ref name="setEnv" scoped="" ref="0x405b7ec0"/>
        <function-ref name="loadSection" scoped="" ref="0x405b6010"/>
        <function-ref name="getSection" scoped="" ref="0x405b60f0"/>
        <function-ref name="resetMemory" scoped="" ref="0x405b61d0"/>
        <function-ref name="start" scoped="" ref="0x405b62b0"/>
        <function-ref name="getEnv" scoped="" ref="0x405b7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSBoot" ref="0x405228e8" loc="16:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSBoot" scoped="" ref="0x405228e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40522ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSTimerVM" ref="0x40522ce8" loc="17:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerVM" scoped="" ref="0x40522ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405b72b0"/>
        <function-ref name="fired" scoped="" ref="0x405b7010"/>
        <function-ref name="isRunning" scoped="" ref="0x405b70f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x405b71d0"/>
        <function-ref name="stop" scoped="" ref="0x40522ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x405cc4f0" loc="58:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x405cc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405cc6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x405b58a0" loc="57:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405b58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405b5a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x405d6ea0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x405d6ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405c90c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405ccde8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405ccde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x405d6740" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x405d6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x405d6918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x405d69f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x405d6ad8"/>
        <function-ref name="actualMicro" scoped="" ref="0x405d6bb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x405d6c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x405c9d48" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x405c9d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405c9f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405c9968" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405c9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405c9b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x405d4168" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x405d4168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x405d15f0" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica2dot/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x405d15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x405d1220" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica2dot/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x405d1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d13f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x405de010" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica2dot/chips/cc1000/HplCC1000InitP.nc">
      <component-ref qname="HplCC1000InitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x405de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405de1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PCLK" ref="0x406124a0" loc="62:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PCLK" scoped="" ref="0x406124a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40612678"/>
        <function-ref name="isInput" scoped="" ref="0x40612758"/>
        <function-ref name="toggle" scoped="" ref="0x40612838"/>
        <function-ref name="isOutput" scoped="" ref="0x40612918"/>
        <function-ref name="get" scoped="" ref="0x406129f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40612ad8"/>
        <function-ref name="set" scoped="" ref="0x40612bb8"/>
        <function-ref name="clr" scoped="" ref="0x40612c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CHP_OUT" ref="0x40604030" loc="60:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CHP_OUT" scoped="" ref="0x40604030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40604208"/>
        <function-ref name="isInput" scoped="" ref="0x406042e8"/>
        <function-ref name="toggle" scoped="" ref="0x406043c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406044a8"/>
        <function-ref name="get" scoped="" ref="0x40604588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40604668"/>
        <function-ref name="set" scoped="" ref="0x40604748"/>
        <function-ref name="clr" scoped="" ref="0x40604828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiConfig" ref="0x406118d0" loc="56:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiConfig" scoped="" ref="0x406118d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40611aa8"/>
        <function-ref name="getChannel" scoped="" ref="0x40611b88"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40611c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PALE" ref="0x40604a18" loc="61:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PALE" scoped="" ref="0x40604a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40604bf0"/>
        <function-ref name="isInput" scoped="" ref="0x40604cd0"/>
        <function-ref name="toggle" scoped="" ref="0x40604db0"/>
        <function-ref name="isOutput" scoped="" ref="0x40604e90"/>
        <function-ref name="get" scoped="" ref="0x40612010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406120f0"/>
        <function-ref name="set" scoped="" ref="0x406121d0"/>
        <function-ref name="clr" scoped="" ref="0x406122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40606130" loc="54:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40606130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40606308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PDATA" ref="0x40612e90" loc="63:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PDATA" scoped="" ref="0x40612e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4060d080"/>
        <function-ref name="isInput" scoped="" ref="0x4060d160"/>
        <function-ref name="toggle" scoped="" ref="0x4060d240"/>
        <function-ref name="isOutput" scoped="" ref="0x4060d320"/>
        <function-ref name="get" scoped="" ref="0x4060d400"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060d4e0"/>
        <function-ref name="set" scoped="" ref="0x4060d5c0"/>
        <function-ref name="clr" scoped="" ref="0x4060d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x40603e98" loc="55:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x40603e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406050c0"/>
        <function-ref name="read" scoped="" ref="0x406051a0"/>
        <function-ref name="write" scoped="" ref="0x40605280"/>
        <function-ref name="getLOCK" scoped="" ref="0x40605360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x40629860" loc="53:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x40629860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x40629a38"/>
        <function-ref name="initSlave" scoped="" ref="0x40629b18"/>
        <function-ref name="disableIntr" scoped="" ref="0x40629bf8"/>
        <function-ref name="writeByte" scoped="" ref="0x40629cd8"/>
        <function-ref name="enableIntr" scoped="" ref="0x40629db8"/>
        <function-ref name="txMode" scoped="" ref="0x40629e98"/>
        <function-ref name="readByte" scoped="" ref="0x4061b010"/>
        <function-ref name="rxMode" scoped="" ref="0x4061b0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x4061b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiSck" ref="0x4061b410" loc="56:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiSck" scoped="" ref="0x4061b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061b5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4061b6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4061b7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4061b888"/>
        <function-ref name="get" scoped="" ref="0x4061b968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061ba48"/>
        <function-ref name="set" scoped="" ref="0x4061bb28"/>
        <function-ref name="clr" scoped="" ref="0x4061bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4061c3e0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4061c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4061c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMiso" ref="0x4061be10" loc="57:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMiso" scoped="" ref="0x4061be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062c010"/>
        <function-ref name="isInput" scoped="" ref="0x4062c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4062c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062c2b0"/>
        <function-ref name="get" scoped="" ref="0x4062c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062c470"/>
        <function-ref name="set" scoped="" ref="0x4062c550"/>
        <function-ref name="clr" scoped="" ref="0x4062c630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMosi" ref="0x4062c838" loc="58:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMosi" scoped="" ref="0x4062c838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062ca10"/>
        <function-ref name="isInput" scoped="" ref="0x4062caf0"/>
        <function-ref name="toggle" scoped="" ref="0x4062cbd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062ccb0"/>
        <function-ref name="get" scoped="" ref="0x4062cd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062ce70"/>
        <function-ref name="set" scoped="" ref="0x40627010"/>
        <function-ref name="clr" scoped="" ref="0x406270f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OC1C" ref="0x406272e0" loc="59:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OC1C" scoped="" ref="0x406272e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406274b8"/>
        <function-ref name="isInput" scoped="" ref="0x40627598"/>
        <function-ref name="toggle" scoped="" ref="0x40627678"/>
        <function-ref name="isOutput" scoped="" ref="0x40627758"/>
        <function-ref name="get" scoped="" ref="0x40627838"/>
        <function-ref name="makeOutput" scoped="" ref="0x40627918"/>
        <function-ref name="set" scoped="" ref="0x406279f8"/>
        <function-ref name="clr" scoped="" ref="0x40627ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x40651c08" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x40651c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40662010"/>
        <function-ref name="isInput" scoped="" ref="0x406620f0"/>
        <function-ref name="toggle" scoped="" ref="0x406621d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406622b0"/>
        <function-ref name="get" scoped="" ref="0x40662390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40662470"/>
        <function-ref name="set" scoped="" ref="0x40662550"/>
        <function-ref name="clr" scoped="" ref="0x40662630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4064d210" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4064d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064d3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4064d4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4064d5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4064d688"/>
        <function-ref name="get" scoped="" ref="0x4064d768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064d848"/>
        <function-ref name="set" scoped="" ref="0x4064d928"/>
        <function-ref name="clr" scoped="" ref="0x4064da08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40659750" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40659750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40659928"/>
        <function-ref name="isInput" scoped="" ref="0x40659a08"/>
        <function-ref name="toggle" scoped="" ref="0x40659ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40659bc8"/>
        <function-ref name="get" scoped="" ref="0x40659ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40659d88"/>
        <function-ref name="set" scoped="" ref="0x40659e68"/>
        <function-ref name="clr" scoped="" ref="0x40658010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x406548e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x406548e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40654ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40654b98"/>
        <function-ref name="toggle" scoped="" ref="0x40654c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40654d58"/>
        <function-ref name="get" scoped="" ref="0x40654e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40654f18"/>
        <function-ref name="set" scoped="" ref="0x40653010"/>
        <function-ref name="clr" scoped="" ref="0x406530f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x40637ce8" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x40637ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40637ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40636010"/>
        <function-ref name="toggle" scoped="" ref="0x406360f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406361d0"/>
        <function-ref name="get" scoped="" ref="0x406362b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40636390"/>
        <function-ref name="set" scoped="" ref="0x40636470"/>
        <function-ref name="clr" scoped="" ref="0x40636550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x406554b0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x406554b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40655688"/>
        <function-ref name="isInput" scoped="" ref="0x40655768"/>
        <function-ref name="toggle" scoped="" ref="0x40655848"/>
        <function-ref name="isOutput" scoped="" ref="0x40655928"/>
        <function-ref name="get" scoped="" ref="0x40655a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40655ae8"/>
        <function-ref name="set" scoped="" ref="0x40655bc8"/>
        <function-ref name="clr" scoped="" ref="0x40655ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40647210" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40647210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406473e8"/>
        <function-ref name="isInput" scoped="" ref="0x406474c8"/>
        <function-ref name="toggle" scoped="" ref="0x406475a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40647688"/>
        <function-ref name="get" scoped="" ref="0x40647768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40647848"/>
        <function-ref name="set" scoped="" ref="0x40647928"/>
        <function-ref name="clr" scoped="" ref="0x40647a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x406408e0" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x406408e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40640ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40640b98"/>
        <function-ref name="toggle" scoped="" ref="0x40640c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40640d58"/>
        <function-ref name="get" scoped="" ref="0x40640e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40640f18"/>
        <function-ref name="set" scoped="" ref="0x4063f010"/>
        <function-ref name="clr" scoped="" ref="0x4063f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4064b0a0" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4064b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064b278"/>
        <function-ref name="isInput" scoped="" ref="0x4064b358"/>
        <function-ref name="toggle" scoped="" ref="0x4064b438"/>
        <function-ref name="isOutput" scoped="" ref="0x4064b518"/>
        <function-ref name="get" scoped="" ref="0x4064b5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064b6d8"/>
        <function-ref name="set" scoped="" ref="0x4064b7b8"/>
        <function-ref name="clr" scoped="" ref="0x4064b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40657670" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40657670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40657848"/>
        <function-ref name="isInput" scoped="" ref="0x40657928"/>
        <function-ref name="toggle" scoped="" ref="0x40657a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40657ae8"/>
        <function-ref name="get" scoped="" ref="0x40657bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40657ca8"/>
        <function-ref name="set" scoped="" ref="0x40657d88"/>
        <function-ref name="clr" scoped="" ref="0x40657e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x4063aa68" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x4063aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063ac40"/>
        <function-ref name="isInput" scoped="" ref="0x4063ad20"/>
        <function-ref name="toggle" scoped="" ref="0x4063ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x4063aee0"/>
        <function-ref name="get" scoped="" ref="0x40639010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406390f0"/>
        <function-ref name="set" scoped="" ref="0x406391d0"/>
        <function-ref name="clr" scoped="" ref="0x406392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x406450a0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x406450a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40645278"/>
        <function-ref name="isInput" scoped="" ref="0x40645358"/>
        <function-ref name="toggle" scoped="" ref="0x40645438"/>
        <function-ref name="isOutput" scoped="" ref="0x40645518"/>
        <function-ref name="get" scoped="" ref="0x406455f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406456d8"/>
        <function-ref name="set" scoped="" ref="0x406457b8"/>
        <function-ref name="clr" scoped="" ref="0x40645898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x40650750" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x40650750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40650928"/>
        <function-ref name="isInput" scoped="" ref="0x40650a08"/>
        <function-ref name="toggle" scoped="" ref="0x40650ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40650bc8"/>
        <function-ref name="get" scoped="" ref="0x40650ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40650d88"/>
        <function-ref name="set" scoped="" ref="0x40650e68"/>
        <function-ref name="clr" scoped="" ref="0x4064f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x4064aea8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x4064aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406490c0"/>
        <function-ref name="isInput" scoped="" ref="0x406491a0"/>
        <function-ref name="toggle" scoped="" ref="0x40649280"/>
        <function-ref name="isOutput" scoped="" ref="0x40649360"/>
        <function-ref name="get" scoped="" ref="0x40649440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40649520"/>
        <function-ref name="set" scoped="" ref="0x40649600"/>
        <function-ref name="clr" scoped="" ref="0x406496e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40652750" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40652750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40652928"/>
        <function-ref name="isInput" scoped="" ref="0x40652a08"/>
        <function-ref name="toggle" scoped="" ref="0x40652ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40652bc8"/>
        <function-ref name="get" scoped="" ref="0x40652ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40652d88"/>
        <function-ref name="set" scoped="" ref="0x40652e68"/>
        <function-ref name="clr" scoped="" ref="0x40651010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40661ce8" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40661ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40661ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40660010"/>
        <function-ref name="toggle" scoped="" ref="0x406600f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406601d0"/>
        <function-ref name="get" scoped="" ref="0x406602b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40660390"/>
        <function-ref name="set" scoped="" ref="0x40660470"/>
        <function-ref name="clr" scoped="" ref="0x40660550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x406482f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x406482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406484c8"/>
        <function-ref name="isInput" scoped="" ref="0x406485a8"/>
        <function-ref name="toggle" scoped="" ref="0x40648688"/>
        <function-ref name="isOutput" scoped="" ref="0x40648768"/>
        <function-ref name="get" scoped="" ref="0x40648848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40648928"/>
        <function-ref name="set" scoped="" ref="0x40648a08"/>
        <function-ref name="clr" scoped="" ref="0x40648ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x406388e0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x406388e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40638ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40638b98"/>
        <function-ref name="toggle" scoped="" ref="0x40638c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40638d58"/>
        <function-ref name="get" scoped="" ref="0x40638e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40638f18"/>
        <function-ref name="set" scoped="" ref="0x40637010"/>
        <function-ref name="clr" scoped="" ref="0x406370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40643010" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40643010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406431e8"/>
        <function-ref name="isInput" scoped="" ref="0x406432c8"/>
        <function-ref name="toggle" scoped="" ref="0x406433a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40643488"/>
        <function-ref name="get" scoped="" ref="0x40643568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40643648"/>
        <function-ref name="set" scoped="" ref="0x40643728"/>
        <function-ref name="clr" scoped="" ref="0x40643808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40662830" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40662830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40662a08"/>
        <function-ref name="isInput" scoped="" ref="0x40662ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40662bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40662ca8"/>
        <function-ref name="get" scoped="" ref="0x40662d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40662e68"/>
        <function-ref name="set" scoped="" ref="0x40661010"/>
        <function-ref name="clr" scoped="" ref="0x406610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x406424b0" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x406424b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40642688"/>
        <function-ref name="isInput" scoped="" ref="0x40642768"/>
        <function-ref name="toggle" scoped="" ref="0x40642848"/>
        <function-ref name="isOutput" scoped="" ref="0x40642928"/>
        <function-ref name="get" scoped="" ref="0x40642a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40642ae8"/>
        <function-ref name="set" scoped="" ref="0x40642bc8"/>
        <function-ref name="clr" scoped="" ref="0x40642ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4064dc08" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4064dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4064dec0"/>
        <function-ref name="toggle" scoped="" ref="0x4064c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4064c0f0"/>
        <function-ref name="get" scoped="" ref="0x4064c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064c2b0"/>
        <function-ref name="set" scoped="" ref="0x4064c390"/>
        <function-ref name="clr" scoped="" ref="0x4064c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40658210" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40658210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406583e8"/>
        <function-ref name="isInput" scoped="" ref="0x406584c8"/>
        <function-ref name="toggle" scoped="" ref="0x406585a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40658688"/>
        <function-ref name="get" scoped="" ref="0x40658768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40658848"/>
        <function-ref name="set" scoped="" ref="0x40658928"/>
        <function-ref name="clr" scoped="" ref="0x40658a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x406532f0" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x406532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406534c8"/>
        <function-ref name="isInput" scoped="" ref="0x406535a8"/>
        <function-ref name="toggle" scoped="" ref="0x40653688"/>
        <function-ref name="isOutput" scoped="" ref="0x40653768"/>
        <function-ref name="get" scoped="" ref="0x40653848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40653928"/>
        <function-ref name="set" scoped="" ref="0x40653a08"/>
        <function-ref name="clr" scoped="" ref="0x40653ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40636750" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40636750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40636928"/>
        <function-ref name="isInput" scoped="" ref="0x40636a08"/>
        <function-ref name="toggle" scoped="" ref="0x40636ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40636bc8"/>
        <function-ref name="get" scoped="" ref="0x40636ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40636d88"/>
        <function-ref name="set" scoped="" ref="0x40636e68"/>
        <function-ref name="clr" scoped="" ref="0x40647010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x40647c08" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x40647c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40647de0"/>
        <function-ref name="isInput" scoped="" ref="0x40647ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40646010"/>
        <function-ref name="isOutput" scoped="" ref="0x406460f0"/>
        <function-ref name="get" scoped="" ref="0x406461d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406462b0"/>
        <function-ref name="set" scoped="" ref="0x40646390"/>
        <function-ref name="clr" scoped="" ref="0x40646470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4063f2f0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4063f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4063f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4063f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4063f768"/>
        <function-ref name="get" scoped="" ref="0x4063f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063f928"/>
        <function-ref name="set" scoped="" ref="0x4063fa08"/>
        <function-ref name="clr" scoped="" ref="0x4063fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x4064ba98" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x4064ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064bc70"/>
        <function-ref name="isInput" scoped="" ref="0x4064bd50"/>
        <function-ref name="toggle" scoped="" ref="0x4064be30"/>
        <function-ref name="isOutput" scoped="" ref="0x4064bf10"/>
        <function-ref name="get" scoped="" ref="0x4064a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064a0f0"/>
        <function-ref name="set" scoped="" ref="0x4064a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4064a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x406560a0" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x406560a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40656278"/>
        <function-ref name="isInput" scoped="" ref="0x40656358"/>
        <function-ref name="toggle" scoped="" ref="0x40656438"/>
        <function-ref name="isOutput" scoped="" ref="0x40656518"/>
        <function-ref name="get" scoped="" ref="0x406565f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406566d8"/>
        <function-ref name="set" scoped="" ref="0x406567b8"/>
        <function-ref name="clr" scoped="" ref="0x40656898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x406394b0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x406394b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40639688"/>
        <function-ref name="isInput" scoped="" ref="0x40639768"/>
        <function-ref name="toggle" scoped="" ref="0x40639848"/>
        <function-ref name="isOutput" scoped="" ref="0x40639928"/>
        <function-ref name="get" scoped="" ref="0x40639a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40639ae8"/>
        <function-ref name="set" scoped="" ref="0x40639bc8"/>
        <function-ref name="clr" scoped="" ref="0x40639ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40645a98" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40645a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40645cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40645dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40645eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40644010"/>
        <function-ref name="get" scoped="" ref="0x406440f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406441d0"/>
        <function-ref name="set" scoped="" ref="0x406442b0"/>
        <function-ref name="clr" scoped="" ref="0x40644390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4064f210" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4064f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4064f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4064f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4064f688"/>
        <function-ref name="get" scoped="" ref="0x4064f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064f848"/>
        <function-ref name="set" scoped="" ref="0x4064f928"/>
        <function-ref name="clr" scoped="" ref="0x4064fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40651210" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40651210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406513e8"/>
        <function-ref name="isInput" scoped="" ref="0x406514c8"/>
        <function-ref name="toggle" scoped="" ref="0x406515a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40651688"/>
        <function-ref name="get" scoped="" ref="0x40651768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40651848"/>
        <function-ref name="set" scoped="" ref="0x40651928"/>
        <function-ref name="clr" scoped="" ref="0x40651a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4064e670" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4064e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064e948"/>
        <function-ref name="isInput" scoped="" ref="0x4064ea28"/>
        <function-ref name="toggle" scoped="" ref="0x4064eb08"/>
        <function-ref name="isOutput" scoped="" ref="0x4064ebe8"/>
        <function-ref name="get" scoped="" ref="0x4064ecc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064eda8"/>
        <function-ref name="set" scoped="" ref="0x4064ee88"/>
        <function-ref name="clr" scoped="" ref="0x4064d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x40648ce8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x40648ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40648ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40659010"/>
        <function-ref name="toggle" scoped="" ref="0x406590f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406591d0"/>
        <function-ref name="get" scoped="" ref="0x406592b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40659390"/>
        <function-ref name="set" scoped="" ref="0x40659470"/>
        <function-ref name="clr" scoped="" ref="0x40659550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40655ea8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40655ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406540c0"/>
        <function-ref name="isInput" scoped="" ref="0x406541a0"/>
        <function-ref name="toggle" scoped="" ref="0x40654280"/>
        <function-ref name="isOutput" scoped="" ref="0x40654360"/>
        <function-ref name="get" scoped="" ref="0x40654440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40654520"/>
        <function-ref name="set" scoped="" ref="0x40654600"/>
        <function-ref name="clr" scoped="" ref="0x406546e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40660750" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40660750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40660928"/>
        <function-ref name="isInput" scoped="" ref="0x40660a08"/>
        <function-ref name="toggle" scoped="" ref="0x40660ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40660bc8"/>
        <function-ref name="get" scoped="" ref="0x40660ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40660d88"/>
        <function-ref name="set" scoped="" ref="0x40660e68"/>
        <function-ref name="clr" scoped="" ref="0x4065f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x406372f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x406372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406374c8"/>
        <function-ref name="isInput" scoped="" ref="0x406375a8"/>
        <function-ref name="toggle" scoped="" ref="0x40637688"/>
        <function-ref name="isOutput" scoped="" ref="0x40637768"/>
        <function-ref name="get" scoped="" ref="0x40637848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40637928"/>
        <function-ref name="set" scoped="" ref="0x40637a08"/>
        <function-ref name="clr" scoped="" ref="0x40637ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40643a08" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40643a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40643be0"/>
        <function-ref name="isInput" scoped="" ref="0x40643cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40643da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40643e80"/>
        <function-ref name="get" scoped="" ref="0x40642010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406420f0"/>
        <function-ref name="set" scoped="" ref="0x406421d0"/>
        <function-ref name="clr" scoped="" ref="0x406422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40656a98" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40656a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40656c70"/>
        <function-ref name="isInput" scoped="" ref="0x40656d50"/>
        <function-ref name="toggle" scoped="" ref="0x40656e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40656f10"/>
        <function-ref name="get" scoped="" ref="0x40655010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406550f0"/>
        <function-ref name="set" scoped="" ref="0x406551d0"/>
        <function-ref name="clr" scoped="" ref="0x406552b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x40642ea8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x40642ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406400c0"/>
        <function-ref name="isInput" scoped="" ref="0x406401a0"/>
        <function-ref name="toggle" scoped="" ref="0x40640280"/>
        <function-ref name="isOutput" scoped="" ref="0x40640360"/>
        <function-ref name="get" scoped="" ref="0x40640440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40640520"/>
        <function-ref name="set" scoped="" ref="0x40640600"/>
        <function-ref name="clr" scoped="" ref="0x406406e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4064c670" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4064c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064c848"/>
        <function-ref name="isInput" scoped="" ref="0x4064c928"/>
        <function-ref name="toggle" scoped="" ref="0x4064ca08"/>
        <function-ref name="isOutput" scoped="" ref="0x4064cae8"/>
        <function-ref name="get" scoped="" ref="0x4064cbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064cca8"/>
        <function-ref name="set" scoped="" ref="0x4064cd88"/>
        <function-ref name="clr" scoped="" ref="0x4064ce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x40658c08" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x40658c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40658de0"/>
        <function-ref name="isInput" scoped="" ref="0x40658ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40657010"/>
        <function-ref name="isOutput" scoped="" ref="0x406570f0"/>
        <function-ref name="get" scoped="" ref="0x406571d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406572b0"/>
        <function-ref name="set" scoped="" ref="0x40657390"/>
        <function-ref name="clr" scoped="" ref="0x40657470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x40653ce8" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x40653ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40653ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40652010"/>
        <function-ref name="toggle" scoped="" ref="0x406520f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406521d0"/>
        <function-ref name="get" scoped="" ref="0x406522b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40652390"/>
        <function-ref name="set" scoped="" ref="0x40652470"/>
        <function-ref name="clr" scoped="" ref="0x40652550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4063a070" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4063a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063a248"/>
        <function-ref name="isInput" scoped="" ref="0x4063a328"/>
        <function-ref name="toggle" scoped="" ref="0x4063a408"/>
        <function-ref name="isOutput" scoped="" ref="0x4063a4e8"/>
        <function-ref name="get" scoped="" ref="0x4063a5c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063a6a8"/>
        <function-ref name="set" scoped="" ref="0x4063a788"/>
        <function-ref name="clr" scoped="" ref="0x4063a868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40646670" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40646670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40646848"/>
        <function-ref name="isInput" scoped="" ref="0x40646928"/>
        <function-ref name="toggle" scoped="" ref="0x40646a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40646ae8"/>
        <function-ref name="get" scoped="" ref="0x40646bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40646ca8"/>
        <function-ref name="set" scoped="" ref="0x40646d88"/>
        <function-ref name="clr" scoped="" ref="0x40646e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4063fce8" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4063fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063fec0"/>
        <function-ref name="isInput" scoped="" ref="0x40650010"/>
        <function-ref name="toggle" scoped="" ref="0x406500f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406501d0"/>
        <function-ref name="get" scoped="" ref="0x406502b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40650390"/>
        <function-ref name="set" scoped="" ref="0x40650470"/>
        <function-ref name="clr" scoped="" ref="0x40650550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x4064a4b0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x4064a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064a688"/>
        <function-ref name="isInput" scoped="" ref="0x4064a768"/>
        <function-ref name="toggle" scoped="" ref="0x4064a848"/>
        <function-ref name="isOutput" scoped="" ref="0x4064a928"/>
        <function-ref name="get" scoped="" ref="0x4064aa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064aae8"/>
        <function-ref name="set" scoped="" ref="0x4064abc8"/>
        <function-ref name="clr" scoped="" ref="0x4064aca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x406612f0" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x406612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406614c8"/>
        <function-ref name="isInput" scoped="" ref="0x406615a8"/>
        <function-ref name="toggle" scoped="" ref="0x40661688"/>
        <function-ref name="isOutput" scoped="" ref="0x40661768"/>
        <function-ref name="get" scoped="" ref="0x40661848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40661928"/>
        <function-ref name="set" scoped="" ref="0x40661a08"/>
        <function-ref name="clr" scoped="" ref="0x40661ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x406498e0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x406498e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40649ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40649b98"/>
        <function-ref name="toggle" scoped="" ref="0x40649c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40649d58"/>
        <function-ref name="get" scoped="" ref="0x40649e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40649f18"/>
        <function-ref name="set" scoped="" ref="0x40648010"/>
        <function-ref name="clr" scoped="" ref="0x406480f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4064fc08" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4064fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4064fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4064e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4064e0f0"/>
        <function-ref name="get" scoped="" ref="0x4064e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064e2b0"/>
        <function-ref name="set" scoped="" ref="0x4064e390"/>
        <function-ref name="clr" scoped="" ref="0x4064e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40639ea8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40639ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406380c0"/>
        <function-ref name="isInput" scoped="" ref="0x406381a0"/>
        <function-ref name="toggle" scoped="" ref="0x40638280"/>
        <function-ref name="isOutput" scoped="" ref="0x40638360"/>
        <function-ref name="get" scoped="" ref="0x40638440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40638520"/>
        <function-ref name="set" scoped="" ref="0x40638600"/>
        <function-ref name="clr" scoped="" ref="0x406386e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40644590" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40644590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40644768"/>
        <function-ref name="isInput" scoped="" ref="0x40644848"/>
        <function-ref name="toggle" scoped="" ref="0x40644928"/>
        <function-ref name="isOutput" scoped="" ref="0x40644a08"/>
        <function-ref name="get" scoped="" ref="0x40644ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40644bc8"/>
        <function-ref name="set" scoped="" ref="0x40644ca8"/>
        <function-ref name="clr" scoped="" ref="0x40644d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4067fd68" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4067fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068f010"/>
        <function-ref name="isInput" scoped="" ref="0x4068f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4068f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4068f2b0"/>
        <function-ref name="get" scoped="" ref="0x4068f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068f470"/>
        <function-ref name="set" scoped="" ref="0x4068f550"/>
        <function-ref name="clr" scoped="" ref="0x4068f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4068eac8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4068eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4068ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4068ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4068d010"/>
        <function-ref name="get" scoped="" ref="0x4068d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068d1d0"/>
        <function-ref name="set" scoped="" ref="0x4068d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4068d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40680a28" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40680a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40680c00"/>
        <function-ref name="isInput" scoped="" ref="0x40680ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40680dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40680ea0"/>
        <function-ref name="get" scoped="" ref="0x4067f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067f0f0"/>
        <function-ref name="set" scoped="" ref="0x4067f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4067f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4068f790" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4068f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068f968"/>
        <function-ref name="isInput" scoped="" ref="0x4068fa48"/>
        <function-ref name="toggle" scoped="" ref="0x4068fb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4068fc08"/>
        <function-ref name="get" scoped="" ref="0x4068fce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068fdc8"/>
        <function-ref name="set" scoped="" ref="0x4068fea8"/>
        <function-ref name="clr" scoped="" ref="0x4068e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4068d4f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4068d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4068d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4068d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4068d968"/>
        <function-ref name="get" scoped="" ref="0x4068da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068db28"/>
        <function-ref name="set" scoped="" ref="0x4068dc08"/>
        <function-ref name="clr" scoped="" ref="0x4068dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4067f410" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4067f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4067f5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4067f6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4067f7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4067f888"/>
        <function-ref name="get" scoped="" ref="0x4067f968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067fa48"/>
        <function-ref name="set" scoped="" ref="0x4067fb28"/>
        <function-ref name="clr" scoped="" ref="0x4067fc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4068e170" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4068e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068e348"/>
        <function-ref name="isInput" scoped="" ref="0x4068e428"/>
        <function-ref name="toggle" scoped="" ref="0x4068e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4068e5e8"/>
        <function-ref name="get" scoped="" ref="0x4068e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068e7a8"/>
        <function-ref name="set" scoped="" ref="0x4068e888"/>
        <function-ref name="clr" scoped="" ref="0x4068e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4068de48" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4068de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068c050"/>
        <function-ref name="isInput" scoped="" ref="0x4068c130"/>
        <function-ref name="toggle" scoped="" ref="0x4068c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4068c2f0"/>
        <function-ref name="get" scoped="" ref="0x4068c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068c4b0"/>
        <function-ref name="set" scoped="" ref="0x4068c590"/>
        <function-ref name="clr" scoped="" ref="0x4068c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40df4bb0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40df4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40df4d88"/>
        <function-ref name="isInput" scoped="" ref="0x40df4e68"/>
        <function-ref name="toggle" scoped="" ref="0x40df3010"/>
        <function-ref name="isOutput" scoped="" ref="0x40df30f0"/>
        <function-ref name="get" scoped="" ref="0x40df31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40df32b0"/>
        <function-ref name="set" scoped="" ref="0x40df3390"/>
        <function-ref name="clr" scoped="" ref="0x40df3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40df26c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40df26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40df2898"/>
        <function-ref name="isInput" scoped="" ref="0x40df2978"/>
        <function-ref name="toggle" scoped="" ref="0x40df2a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40df2b38"/>
        <function-ref name="get" scoped="" ref="0x40df2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40df2cf8"/>
        <function-ref name="set" scoped="" ref="0x40df2dd8"/>
        <function-ref name="clr" scoped="" ref="0x40df2eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40df00b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40df00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40df0288"/>
        <function-ref name="isInput" scoped="" ref="0x40df0368"/>
        <function-ref name="toggle" scoped="" ref="0x40df0448"/>
        <function-ref name="isOutput" scoped="" ref="0x40df0528"/>
        <function-ref name="get" scoped="" ref="0x40df0608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40df06e8"/>
        <function-ref name="set" scoped="" ref="0x40df07c8"/>
        <function-ref name="clr" scoped="" ref="0x40df08a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40defa88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40defa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40defc60"/>
        <function-ref name="isInput" scoped="" ref="0x40defd40"/>
        <function-ref name="toggle" scoped="" ref="0x40defe20"/>
        <function-ref name="isOutput" scoped="" ref="0x40deff00"/>
        <function-ref name="get" scoped="" ref="0x40e21010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e210f0"/>
        <function-ref name="set" scoped="" ref="0x40e211d0"/>
        <function-ref name="clr" scoped="" ref="0x40e212b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e20538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e20538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e20710"/>
        <function-ref name="isInput" scoped="" ref="0x40e207f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e208d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e209b0"/>
        <function-ref name="get" scoped="" ref="0x40e20a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e20b70"/>
        <function-ref name="set" scoped="" ref="0x40e20c50"/>
        <function-ref name="clr" scoped="" ref="0x40e20d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e1e010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e1e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e1e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e1e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e1e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e1e488"/>
        <function-ref name="get" scoped="" ref="0x40e1e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e1e648"/>
        <function-ref name="set" scoped="" ref="0x40e1e728"/>
        <function-ref name="clr" scoped="" ref="0x40e1e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e1d9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e1d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e1dbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e1dca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e1dd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e1de60"/>
        <function-ref name="get" scoped="" ref="0x40e1c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e1c0f0"/>
        <function-ref name="set" scoped="" ref="0x40e1c1d0"/>
        <function-ref name="clr" scoped="" ref="0x40e1c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e1b538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e1b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e1b710"/>
        <function-ref name="isInput" scoped="" ref="0x40e1b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e1b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e1b9b0"/>
        <function-ref name="get" scoped="" ref="0x40e1ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e1bb70"/>
        <function-ref name="set" scoped="" ref="0x40e1bc50"/>
        <function-ref name="clr" scoped="" ref="0x40e1bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x406886b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x406886b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40688888"/>
        <function-ref name="isInput" scoped="" ref="0x40688968"/>
        <function-ref name="toggle" scoped="" ref="0x40688a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40688b28"/>
        <function-ref name="get" scoped="" ref="0x40688c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40688ce8"/>
        <function-ref name="set" scoped="" ref="0x40688dc8"/>
        <function-ref name="clr" scoped="" ref="0x40688ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40698330" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40698330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40698508"/>
        <function-ref name="isInput" scoped="" ref="0x406985e8"/>
        <function-ref name="toggle" scoped="" ref="0x406986c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406987a8"/>
        <function-ref name="get" scoped="" ref="0x40698888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40698968"/>
        <function-ref name="set" scoped="" ref="0x40698a48"/>
        <function-ref name="clr" scoped="" ref="0x40698b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x406893d8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x406893d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406895b0"/>
        <function-ref name="isInput" scoped="" ref="0x40689690"/>
        <function-ref name="toggle" scoped="" ref="0x40689770"/>
        <function-ref name="isOutput" scoped="" ref="0x40689850"/>
        <function-ref name="get" scoped="" ref="0x40689930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40689a10"/>
        <function-ref name="set" scoped="" ref="0x40689af0"/>
        <function-ref name="clr" scoped="" ref="0x40689bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40687030" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40687030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40687208"/>
        <function-ref name="isInput" scoped="" ref="0x406872e8"/>
        <function-ref name="toggle" scoped="" ref="0x406873c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406874a8"/>
        <function-ref name="get" scoped="" ref="0x40687588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40687668"/>
        <function-ref name="set" scoped="" ref="0x40687748"/>
        <function-ref name="clr" scoped="" ref="0x40687828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40698c88" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40698c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40698e60"/>
        <function-ref name="isInput" scoped="" ref="0x40696010"/>
        <function-ref name="toggle" scoped="" ref="0x406960f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406961d0"/>
        <function-ref name="get" scoped="" ref="0x406962b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40696390"/>
        <function-ref name="set" scoped="" ref="0x40696470"/>
        <function-ref name="clr" scoped="" ref="0x40696550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40689d30" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40689d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40689f08"/>
        <function-ref name="isInput" scoped="" ref="0x40688010"/>
        <function-ref name="toggle" scoped="" ref="0x406880f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406881d0"/>
        <function-ref name="get" scoped="" ref="0x406882b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40688390"/>
        <function-ref name="set" scoped="" ref="0x40688470"/>
        <function-ref name="clr" scoped="" ref="0x40688550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40687988" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40687988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40687b60"/>
        <function-ref name="isInput" scoped="" ref="0x40687c40"/>
        <function-ref name="toggle" scoped="" ref="0x40687d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40687e00"/>
        <function-ref name="get" scoped="" ref="0x40687ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40698010"/>
        <function-ref name="set" scoped="" ref="0x406980f0"/>
        <function-ref name="clr" scoped="" ref="0x406981d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x406966b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x406966b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40696888"/>
        <function-ref name="isInput" scoped="" ref="0x40696968"/>
        <function-ref name="toggle" scoped="" ref="0x40696a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40696b28"/>
        <function-ref name="get" scoped="" ref="0x40696c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40696ce8"/>
        <function-ref name="set" scoped="" ref="0x40696dc8"/>
        <function-ref name="clr" scoped="" ref="0x40696ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e515c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e515c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e51798"/>
        <function-ref name="isInput" scoped="" ref="0x40e51878"/>
        <function-ref name="toggle" scoped="" ref="0x40e51958"/>
        <function-ref name="isOutput" scoped="" ref="0x40e51a38"/>
        <function-ref name="get" scoped="" ref="0x40e51b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e51bf8"/>
        <function-ref name="set" scoped="" ref="0x40e51cd8"/>
        <function-ref name="clr" scoped="" ref="0x40e51db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e4f010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e4f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e4f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e4f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e4f488"/>
        <function-ref name="get" scoped="" ref="0x40e4f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e4f648"/>
        <function-ref name="set" scoped="" ref="0x40e4f728"/>
        <function-ref name="clr" scoped="" ref="0x40e4f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e4e9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e4e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e4ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e4eca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e4ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e4ee60"/>
        <function-ref name="get" scoped="" ref="0x40e4d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e4d0f0"/>
        <function-ref name="set" scoped="" ref="0x40e4d1d0"/>
        <function-ref name="clr" scoped="" ref="0x40e4d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e4c538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e4c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e4c710"/>
        <function-ref name="isInput" scoped="" ref="0x40e4c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e4c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e4c9b0"/>
        <function-ref name="get" scoped="" ref="0x40e4ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e4cb70"/>
        <function-ref name="set" scoped="" ref="0x40e4cc50"/>
        <function-ref name="clr" scoped="" ref="0x40e4cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e4a010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e4a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e4a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e4a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e4a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e4a488"/>
        <function-ref name="get" scoped="" ref="0x40e4a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e4a648"/>
        <function-ref name="set" scoped="" ref="0x40e4a728"/>
        <function-ref name="clr" scoped="" ref="0x40e4a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e489e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e489e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e48bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e48ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e48d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e48e60"/>
        <function-ref name="get" scoped="" ref="0x40e47010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e470f0"/>
        <function-ref name="set" scoped="" ref="0x40e471d0"/>
        <function-ref name="clr" scoped="" ref="0x40e472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e46538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e46538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e46710"/>
        <function-ref name="isInput" scoped="" ref="0x40e467f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e468d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e469b0"/>
        <function-ref name="get" scoped="" ref="0x40e46a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e46b70"/>
        <function-ref name="set" scoped="" ref="0x40e46c50"/>
        <function-ref name="clr" scoped="" ref="0x40e46d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e44010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e44010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e441e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e442c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e443a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e44488"/>
        <function-ref name="get" scoped="" ref="0x40e44568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e44648"/>
        <function-ref name="set" scoped="" ref="0x40e44728"/>
        <function-ref name="clr" scoped="" ref="0x40e44808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40691170" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40691170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40691348"/>
        <function-ref name="isInput" scoped="" ref="0x40691428"/>
        <function-ref name="toggle" scoped="" ref="0x40691508"/>
        <function-ref name="isOutput" scoped="" ref="0x406915e8"/>
        <function-ref name="get" scoped="" ref="0x406916c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406917a8"/>
        <function-ref name="set" scoped="" ref="0x40691888"/>
        <function-ref name="clr" scoped="" ref="0x40691968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40690e48" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40690e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a2050"/>
        <function-ref name="isInput" scoped="" ref="0x406a2130"/>
        <function-ref name="toggle" scoped="" ref="0x406a2210"/>
        <function-ref name="isOutput" scoped="" ref="0x406a22f0"/>
        <function-ref name="get" scoped="" ref="0x406a23d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a24b0"/>
        <function-ref name="set" scoped="" ref="0x406a2590"/>
        <function-ref name="clr" scoped="" ref="0x406a2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40693dc8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40693dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40692010"/>
        <function-ref name="isInput" scoped="" ref="0x406920f0"/>
        <function-ref name="toggle" scoped="" ref="0x406921d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406922b0"/>
        <function-ref name="get" scoped="" ref="0x40692390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40692470"/>
        <function-ref name="set" scoped="" ref="0x40692550"/>
        <function-ref name="clr" scoped="" ref="0x40692630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40691ac8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40691ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40691ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40691d80"/>
        <function-ref name="toggle" scoped="" ref="0x40691e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40690010"/>
        <function-ref name="get" scoped="" ref="0x406900f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406901d0"/>
        <function-ref name="set" scoped="" ref="0x406902b0"/>
        <function-ref name="clr" scoped="" ref="0x40690390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x406a27d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x406a27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a29a8"/>
        <function-ref name="isInput" scoped="" ref="0x406a2a88"/>
        <function-ref name="toggle" scoped="" ref="0x406a2b68"/>
        <function-ref name="isOutput" scoped="" ref="0x406a2c48"/>
        <function-ref name="get" scoped="" ref="0x406a2d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a2e08"/>
        <function-ref name="set" scoped="" ref="0x406a2ee8"/>
        <function-ref name="clr" scoped="" ref="0x406a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40692790" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40692790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40692968"/>
        <function-ref name="isInput" scoped="" ref="0x40692a48"/>
        <function-ref name="toggle" scoped="" ref="0x40692b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40692c08"/>
        <function-ref name="get" scoped="" ref="0x40692ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40692dc8"/>
        <function-ref name="set" scoped="" ref="0x40692ea8"/>
        <function-ref name="clr" scoped="" ref="0x40691010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x406904f0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x406904f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406906c8"/>
        <function-ref name="isInput" scoped="" ref="0x406907a8"/>
        <function-ref name="toggle" scoped="" ref="0x40690888"/>
        <function-ref name="isOutput" scoped="" ref="0x40690968"/>
        <function-ref name="get" scoped="" ref="0x40690a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40690b28"/>
        <function-ref name="set" scoped="" ref="0x40690c08"/>
        <function-ref name="clr" scoped="" ref="0x40690ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x406a1170" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x406a1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a1348"/>
        <function-ref name="isInput" scoped="" ref="0x406a1428"/>
        <function-ref name="toggle" scoped="" ref="0x406a1508"/>
        <function-ref name="isOutput" scoped="" ref="0x406a15e8"/>
        <function-ref name="get" scoped="" ref="0x406a16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a17a8"/>
        <function-ref name="set" scoped="" ref="0x406a1888"/>
        <function-ref name="clr" scoped="" ref="0x406a1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e7c418" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e7c418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e7c5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40e7c6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40e7c7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e7c890"/>
        <function-ref name="get" scoped="" ref="0x40e7c970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e7ca50"/>
        <function-ref name="set" scoped="" ref="0x40e7cb30"/>
        <function-ref name="clr" scoped="" ref="0x40e7cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e7bde0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e7bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e7a010"/>
        <function-ref name="isInput" scoped="" ref="0x40e7a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e7a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e7a2b0"/>
        <function-ref name="get" scoped="" ref="0x40e7a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e7a470"/>
        <function-ref name="set" scoped="" ref="0x40e7a550"/>
        <function-ref name="clr" scoped="" ref="0x40e7a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e797f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e797f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e799d0"/>
        <function-ref name="isInput" scoped="" ref="0x40e79ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40e79b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40e79c70"/>
        <function-ref name="get" scoped="" ref="0x40e79d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e79e30"/>
        <function-ref name="set" scoped="" ref="0x40e79f10"/>
        <function-ref name="clr" scoped="" ref="0x40e78010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e77228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e77228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e77400"/>
        <function-ref name="isInput" scoped="" ref="0x40e774e0"/>
        <function-ref name="toggle" scoped="" ref="0x40e775c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e776a0"/>
        <function-ref name="get" scoped="" ref="0x40e77780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e77860"/>
        <function-ref name="set" scoped="" ref="0x40e77940"/>
        <function-ref name="clr" scoped="" ref="0x40e77a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e76c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e76c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e76de0"/>
        <function-ref name="isInput" scoped="" ref="0x40e76ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40e75010"/>
        <function-ref name="isOutput" scoped="" ref="0x40e750f0"/>
        <function-ref name="get" scoped="" ref="0x40e751d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e752b0"/>
        <function-ref name="set" scoped="" ref="0x40e75390"/>
        <function-ref name="clr" scoped="" ref="0x40e75470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e746c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e746c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e74898"/>
        <function-ref name="isInput" scoped="" ref="0x40e74978"/>
        <function-ref name="toggle" scoped="" ref="0x40e74a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e74b38"/>
        <function-ref name="get" scoped="" ref="0x40e74c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e74cf8"/>
        <function-ref name="set" scoped="" ref="0x40e74dd8"/>
        <function-ref name="clr" scoped="" ref="0x40e74eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e720b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e720b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e72288"/>
        <function-ref name="isInput" scoped="" ref="0x40e72368"/>
        <function-ref name="toggle" scoped="" ref="0x40e72448"/>
        <function-ref name="isOutput" scoped="" ref="0x40e72528"/>
        <function-ref name="get" scoped="" ref="0x40e72608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e726e8"/>
        <function-ref name="set" scoped="" ref="0x40e727c8"/>
        <function-ref name="clr" scoped="" ref="0x40e728a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e71a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e71a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e71c60"/>
        <function-ref name="isInput" scoped="" ref="0x40e71d40"/>
        <function-ref name="toggle" scoped="" ref="0x40e71e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40e71f00"/>
        <function-ref name="get" scoped="" ref="0x40e70010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e700f0"/>
        <function-ref name="set" scoped="" ref="0x40e701d0"/>
        <function-ref name="clr" scoped="" ref="0x40e702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4069c9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4069c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4069cca0"/>
        <function-ref name="toggle" scoped="" ref="0x4069cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4069ce60"/>
        <function-ref name="get" scoped="" ref="0x4069b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069b0f0"/>
        <function-ref name="set" scoped="" ref="0x4069b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4069b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4069a790" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4069a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069a968"/>
        <function-ref name="isInput" scoped="" ref="0x4069aa48"/>
        <function-ref name="toggle" scoped="" ref="0x4069ab28"/>
        <function-ref name="isOutput" scoped="" ref="0x4069ac08"/>
        <function-ref name="get" scoped="" ref="0x4069ace8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069adc8"/>
        <function-ref name="set" scoped="" ref="0x4069aea8"/>
        <function-ref name="clr" scoped="" ref="0x40699010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4069d6f8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4069d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069d8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4069d9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4069da90"/>
        <function-ref name="isOutput" scoped="" ref="0x4069db70"/>
        <function-ref name="get" scoped="" ref="0x4069dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069dd30"/>
        <function-ref name="set" scoped="" ref="0x4069de10"/>
        <function-ref name="clr" scoped="" ref="0x4069def0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4069b410" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4069b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069b5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4069b6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4069b7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4069b888"/>
        <function-ref name="get" scoped="" ref="0x4069b968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069ba48"/>
        <function-ref name="set" scoped="" ref="0x4069bb28"/>
        <function-ref name="clr" scoped="" ref="0x4069bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40699170" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40699170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40699348"/>
        <function-ref name="isInput" scoped="" ref="0x40699428"/>
        <function-ref name="toggle" scoped="" ref="0x40699508"/>
        <function-ref name="isOutput" scoped="" ref="0x406995e8"/>
        <function-ref name="get" scoped="" ref="0x406996c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406997a8"/>
        <function-ref name="set" scoped="" ref="0x40699888"/>
        <function-ref name="clr" scoped="" ref="0x40699968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4069c090" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4069c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069c268"/>
        <function-ref name="isInput" scoped="" ref="0x4069c348"/>
        <function-ref name="toggle" scoped="" ref="0x4069c428"/>
        <function-ref name="isOutput" scoped="" ref="0x4069c508"/>
        <function-ref name="get" scoped="" ref="0x4069c5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069c6c8"/>
        <function-ref name="set" scoped="" ref="0x4069c7a8"/>
        <function-ref name="clr" scoped="" ref="0x4069c888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4069bd68" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4069bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069a010"/>
        <function-ref name="isInput" scoped="" ref="0x4069a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4069a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4069a2b0"/>
        <function-ref name="get" scoped="" ref="0x4069a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069a470"/>
        <function-ref name="set" scoped="" ref="0x4069a550"/>
        <function-ref name="clr" scoped="" ref="0x4069a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40699ac8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40699ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40699ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40699d80"/>
        <function-ref name="toggle" scoped="" ref="0x40699e60"/>
        <function-ref name="isOutput" scoped="" ref="0x406ac010"/>
        <function-ref name="get" scoped="" ref="0x406ac0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ac1d0"/>
        <function-ref name="set" scoped="" ref="0x406ac2b0"/>
        <function-ref name="clr" scoped="" ref="0x406ac390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eadde8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eadde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea9010"/>
        <function-ref name="isInput" scoped="" ref="0x40ea90f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea92b0"/>
        <function-ref name="get" scoped="" ref="0x40ea9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea9470"/>
        <function-ref name="set" scoped="" ref="0x40ea9550"/>
        <function-ref name="clr" scoped="" ref="0x40ea9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea87f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea87f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea89d0"/>
        <function-ref name="isInput" scoped="" ref="0x40ea8ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea8b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea8c70"/>
        <function-ref name="get" scoped="" ref="0x40ea8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea8e30"/>
        <function-ref name="set" scoped="" ref="0x40ea8f10"/>
        <function-ref name="clr" scoped="" ref="0x40ea7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea6228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea6228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea6400"/>
        <function-ref name="isInput" scoped="" ref="0x40ea64e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea65c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea66a0"/>
        <function-ref name="get" scoped="" ref="0x40ea6780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea6860"/>
        <function-ref name="set" scoped="" ref="0x40ea6940"/>
        <function-ref name="clr" scoped="" ref="0x40ea6a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea5c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea5de0"/>
        <function-ref name="isInput" scoped="" ref="0x40ea5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40ea3010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea30f0"/>
        <function-ref name="get" scoped="" ref="0x40ea31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea32b0"/>
        <function-ref name="set" scoped="" ref="0x40ea3390"/>
        <function-ref name="clr" scoped="" ref="0x40ea3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea26c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea2898"/>
        <function-ref name="isInput" scoped="" ref="0x40ea2978"/>
        <function-ref name="toggle" scoped="" ref="0x40ea2a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea2b38"/>
        <function-ref name="get" scoped="" ref="0x40ea2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea2cf8"/>
        <function-ref name="set" scoped="" ref="0x40ea2dd8"/>
        <function-ref name="clr" scoped="" ref="0x40ea2eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ea00b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ea00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ea0288"/>
        <function-ref name="isInput" scoped="" ref="0x40ea0368"/>
        <function-ref name="toggle" scoped="" ref="0x40ea0448"/>
        <function-ref name="isOutput" scoped="" ref="0x40ea0528"/>
        <function-ref name="get" scoped="" ref="0x40ea0608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ea06e8"/>
        <function-ref name="set" scoped="" ref="0x40ea07c8"/>
        <function-ref name="clr" scoped="" ref="0x40ea08a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e9fa88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e9fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e9fc60"/>
        <function-ref name="isInput" scoped="" ref="0x40e9fd40"/>
        <function-ref name="toggle" scoped="" ref="0x40e9fe20"/>
        <function-ref name="isOutput" scoped="" ref="0x40e9ff00"/>
        <function-ref name="get" scoped="" ref="0x40ed2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed20f0"/>
        <function-ref name="set" scoped="" ref="0x40ed21d0"/>
        <function-ref name="clr" scoped="" ref="0x40ed22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed1538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed1710"/>
        <function-ref name="isInput" scoped="" ref="0x40ed17f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed18d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed19b0"/>
        <function-ref name="get" scoped="" ref="0x40ed1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed1b70"/>
        <function-ref name="set" scoped="" ref="0x40ed1c50"/>
        <function-ref name="clr" scoped="" ref="0x40ed1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x406a8410" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x406a8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a85e8"/>
        <function-ref name="isInput" scoped="" ref="0x406a86c8"/>
        <function-ref name="toggle" scoped="" ref="0x406a87a8"/>
        <function-ref name="isOutput" scoped="" ref="0x406a8888"/>
        <function-ref name="get" scoped="" ref="0x406a8968"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a8a48"/>
        <function-ref name="set" scoped="" ref="0x406a8b28"/>
        <function-ref name="clr" scoped="" ref="0x406a8c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x406a5170" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x406a5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a5348"/>
        <function-ref name="isInput" scoped="" ref="0x406a5428"/>
        <function-ref name="toggle" scoped="" ref="0x406a5508"/>
        <function-ref name="isOutput" scoped="" ref="0x406a55e8"/>
        <function-ref name="get" scoped="" ref="0x406a56c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a57a8"/>
        <function-ref name="set" scoped="" ref="0x406a5888"/>
        <function-ref name="clr" scoped="" ref="0x406a5968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x406a9128" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x406a9128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a9300"/>
        <function-ref name="isInput" scoped="" ref="0x406a93e0"/>
        <function-ref name="toggle" scoped="" ref="0x406a94c0"/>
        <function-ref name="isOutput" scoped="" ref="0x406a95a0"/>
        <function-ref name="get" scoped="" ref="0x406a9680"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a9760"/>
        <function-ref name="set" scoped="" ref="0x406a9840"/>
        <function-ref name="clr" scoped="" ref="0x406a9920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x406a8d68" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x406a8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a6010"/>
        <function-ref name="isInput" scoped="" ref="0x406a60f0"/>
        <function-ref name="toggle" scoped="" ref="0x406a61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406a62b0"/>
        <function-ref name="get" scoped="" ref="0x406a6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a6470"/>
        <function-ref name="set" scoped="" ref="0x406a6550"/>
        <function-ref name="clr" scoped="" ref="0x406a6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x406a5ac8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x406a5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a5ca0"/>
        <function-ref name="isInput" scoped="" ref="0x406a5d80"/>
        <function-ref name="toggle" scoped="" ref="0x406a5e60"/>
        <function-ref name="isOutput" scoped="" ref="0x406a4010"/>
        <function-ref name="get" scoped="" ref="0x406a40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a41d0"/>
        <function-ref name="set" scoped="" ref="0x406a42b0"/>
        <function-ref name="clr" scoped="" ref="0x406a4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x406a9a80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x406a9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a9c58"/>
        <function-ref name="isInput" scoped="" ref="0x406a9d38"/>
        <function-ref name="toggle" scoped="" ref="0x406a9e18"/>
        <function-ref name="isOutput" scoped="" ref="0x406a9ef8"/>
        <function-ref name="get" scoped="" ref="0x406a8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a80f0"/>
        <function-ref name="set" scoped="" ref="0x406a81d0"/>
        <function-ref name="clr" scoped="" ref="0x406a82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x406a6790" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x406a6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a6968"/>
        <function-ref name="isInput" scoped="" ref="0x406a6a48"/>
        <function-ref name="toggle" scoped="" ref="0x406a6b28"/>
        <function-ref name="isOutput" scoped="" ref="0x406a6c08"/>
        <function-ref name="get" scoped="" ref="0x406a6ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a6dc8"/>
        <function-ref name="set" scoped="" ref="0x406a6ea8"/>
        <function-ref name="clr" scoped="" ref="0x406a5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x406a44f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x406a44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a46c8"/>
        <function-ref name="isInput" scoped="" ref="0x406a47a8"/>
        <function-ref name="toggle" scoped="" ref="0x406a4888"/>
        <function-ref name="isOutput" scoped="" ref="0x406a4968"/>
        <function-ref name="get" scoped="" ref="0x406a4a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a4b28"/>
        <function-ref name="set" scoped="" ref="0x406a4c08"/>
        <function-ref name="clr" scoped="" ref="0x406a4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ede938" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ede938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40edeb10"/>
        <function-ref name="isInput" scoped="" ref="0x40edebf0"/>
        <function-ref name="toggle" scoped="" ref="0x40edecd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ededb0"/>
        <function-ref name="get" scoped="" ref="0x40edee90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40edd010"/>
        <function-ref name="set" scoped="" ref="0x40edd0f0"/>
        <function-ref name="clr" scoped="" ref="0x40edd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40edc3b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40edc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40edc588"/>
        <function-ref name="isInput" scoped="" ref="0x40edc668"/>
        <function-ref name="toggle" scoped="" ref="0x40edc748"/>
        <function-ref name="isOutput" scoped="" ref="0x40edc828"/>
        <function-ref name="get" scoped="" ref="0x40edc908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40edc9e8"/>
        <function-ref name="set" scoped="" ref="0x40edcac8"/>
        <function-ref name="clr" scoped="" ref="0x40edcba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40edbd70" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40edbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eda010"/>
        <function-ref name="isInput" scoped="" ref="0x40eda0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40eda1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eda2b0"/>
        <function-ref name="get" scoped="" ref="0x40eda390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eda470"/>
        <function-ref name="set" scoped="" ref="0x40eda550"/>
        <function-ref name="clr" scoped="" ref="0x40eda630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ed97f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ed97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ed99d0"/>
        <function-ref name="isInput" scoped="" ref="0x40ed9ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40ed9b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40ed9c70"/>
        <function-ref name="get" scoped="" ref="0x40ed9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ed9e30"/>
        <function-ref name="set" scoped="" ref="0x40ed9f10"/>
        <function-ref name="clr" scoped="" ref="0x40ed8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f0b228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f0b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f0b400"/>
        <function-ref name="isInput" scoped="" ref="0x40f0b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f0b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f0b6a0"/>
        <function-ref name="get" scoped="" ref="0x40f0b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f0b860"/>
        <function-ref name="set" scoped="" ref="0x40f0b940"/>
        <function-ref name="clr" scoped="" ref="0x40f0ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f0ac08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f0ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f0ade0"/>
        <function-ref name="isInput" scoped="" ref="0x40f0aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f09010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f090f0"/>
        <function-ref name="get" scoped="" ref="0x40f091d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f092b0"/>
        <function-ref name="set" scoped="" ref="0x40f09390"/>
        <function-ref name="clr" scoped="" ref="0x40f09470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f086c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f086c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f08898"/>
        <function-ref name="isInput" scoped="" ref="0x40f08978"/>
        <function-ref name="toggle" scoped="" ref="0x40f08a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f08b38"/>
        <function-ref name="get" scoped="" ref="0x40f08c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f08cf8"/>
        <function-ref name="set" scoped="" ref="0x40f08dd8"/>
        <function-ref name="clr" scoped="" ref="0x40f08eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f060b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f060b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f06288"/>
        <function-ref name="isInput" scoped="" ref="0x40f06368"/>
        <function-ref name="toggle" scoped="" ref="0x40f06448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f06528"/>
        <function-ref name="get" scoped="" ref="0x40f06608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f066e8"/>
        <function-ref name="set" scoped="" ref="0x40f067c8"/>
        <function-ref name="clr" scoped="" ref="0x40f068a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x406b4c88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x406b4c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b4e60"/>
        <function-ref name="isInput" scoped="" ref="0x406b3010"/>
        <function-ref name="toggle" scoped="" ref="0x406b30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406b31d0"/>
        <function-ref name="get" scoped="" ref="0x406b32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b3390"/>
        <function-ref name="set" scoped="" ref="0x406b3470"/>
        <function-ref name="clr" scoped="" ref="0x406b3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x406b2988" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x406b2988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b2b60"/>
        <function-ref name="isInput" scoped="" ref="0x406b2c40"/>
        <function-ref name="toggle" scoped="" ref="0x406b2d20"/>
        <function-ref name="isOutput" scoped="" ref="0x406b2e00"/>
        <function-ref name="get" scoped="" ref="0x406b2ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b1010"/>
        <function-ref name="set" scoped="" ref="0x406b10f0"/>
        <function-ref name="clr" scoped="" ref="0x406b11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x406b59c0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x406b59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b5b98"/>
        <function-ref name="isInput" scoped="" ref="0x406b5c78"/>
        <function-ref name="toggle" scoped="" ref="0x406b5d58"/>
        <function-ref name="isOutput" scoped="" ref="0x406b5e38"/>
        <function-ref name="get" scoped="" ref="0x406b5f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b4010"/>
        <function-ref name="set" scoped="" ref="0x406b40f0"/>
        <function-ref name="clr" scoped="" ref="0x406b41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x406b36b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x406b36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b3888"/>
        <function-ref name="isInput" scoped="" ref="0x406b3968"/>
        <function-ref name="toggle" scoped="" ref="0x406b3a48"/>
        <function-ref name="isOutput" scoped="" ref="0x406b3b28"/>
        <function-ref name="get" scoped="" ref="0x406b3c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b3ce8"/>
        <function-ref name="set" scoped="" ref="0x406b3dc8"/>
        <function-ref name="clr" scoped="" ref="0x406b3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x406b1330" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x406b1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b1508"/>
        <function-ref name="isInput" scoped="" ref="0x406b15e8"/>
        <function-ref name="toggle" scoped="" ref="0x406b16c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406b17a8"/>
        <function-ref name="get" scoped="" ref="0x406b1888"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b1968"/>
        <function-ref name="set" scoped="" ref="0x406b1a48"/>
        <function-ref name="clr" scoped="" ref="0x406b1b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x406b4330" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x406b4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b4508"/>
        <function-ref name="isInput" scoped="" ref="0x406b45e8"/>
        <function-ref name="toggle" scoped="" ref="0x406b46c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406b47a8"/>
        <function-ref name="get" scoped="" ref="0x406b4888"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b4968"/>
        <function-ref name="set" scoped="" ref="0x406b4a48"/>
        <function-ref name="clr" scoped="" ref="0x406b4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x406b2030" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x406b2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b2208"/>
        <function-ref name="isInput" scoped="" ref="0x406b22e8"/>
        <function-ref name="toggle" scoped="" ref="0x406b23c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406b24a8"/>
        <function-ref name="get" scoped="" ref="0x406b2588"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b2668"/>
        <function-ref name="set" scoped="" ref="0x406b2748"/>
        <function-ref name="clr" scoped="" ref="0x406b2828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x406b1c88" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x406b1c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b1e60"/>
        <function-ref name="isInput" scoped="" ref="0x406af010"/>
        <function-ref name="toggle" scoped="" ref="0x406af0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406af1d0"/>
        <function-ref name="get" scoped="" ref="0x406af2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406af390"/>
        <function-ref name="set" scoped="" ref="0x406af470"/>
        <function-ref name="clr" scoped="" ref="0x406af550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f0e538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f0e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f0e710"/>
        <function-ref name="isInput" scoped="" ref="0x40f0e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f0e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f0e9b0"/>
        <function-ref name="get" scoped="" ref="0x40f0ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f0eb70"/>
        <function-ref name="set" scoped="" ref="0x40f0ec50"/>
        <function-ref name="clr" scoped="" ref="0x40f0ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f0c010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f0c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f0c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f0c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f0c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f0c488"/>
        <function-ref name="get" scoped="" ref="0x40f0c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f0c648"/>
        <function-ref name="set" scoped="" ref="0x40f0c728"/>
        <function-ref name="clr" scoped="" ref="0x40f0c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f3f9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f3f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f3fca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f3fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3fe60"/>
        <function-ref name="get" scoped="" ref="0x40f3e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3e0f0"/>
        <function-ref name="set" scoped="" ref="0x40f3e1d0"/>
        <function-ref name="clr" scoped="" ref="0x40f3e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f3d538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f3d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3d710"/>
        <function-ref name="isInput" scoped="" ref="0x40f3d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f3d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3d9b0"/>
        <function-ref name="get" scoped="" ref="0x40f3da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3db70"/>
        <function-ref name="set" scoped="" ref="0x40f3dc50"/>
        <function-ref name="clr" scoped="" ref="0x40f3dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f3b010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f3b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f3b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f3b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3b488"/>
        <function-ref name="get" scoped="" ref="0x40f3b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f3b648"/>
        <function-ref name="set" scoped="" ref="0x40f3b728"/>
        <function-ref name="clr" scoped="" ref="0x40f3b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f3a9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f3a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f3abc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f3aca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f3ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f3ae60"/>
        <function-ref name="get" scoped="" ref="0x40f39010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f390f0"/>
        <function-ref name="set" scoped="" ref="0x40f391d0"/>
        <function-ref name="clr" scoped="" ref="0x40f392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f38538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f38538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f38710"/>
        <function-ref name="isInput" scoped="" ref="0x40f387f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f388d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f389b0"/>
        <function-ref name="get" scoped="" ref="0x40f38a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f38b70"/>
        <function-ref name="set" scoped="" ref="0x40f38c50"/>
        <function-ref name="clr" scoped="" ref="0x40f38d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f36010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f36010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f361e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f362c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f363a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f36488"/>
        <function-ref name="get" scoped="" ref="0x40f36568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f36648"/>
        <function-ref name="set" scoped="" ref="0x40f36728"/>
        <function-ref name="clr" scoped="" ref="0x40f36808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c0ca0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406c0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c0e78"/>
        <function-ref name="isInput" scoped="" ref="0x406be010"/>
        <function-ref name="toggle" scoped="" ref="0x406be0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406be1d0"/>
        <function-ref name="get" scoped="" ref="0x406be2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406be390"/>
        <function-ref name="set" scoped="" ref="0x406be470"/>
        <function-ref name="clr" scoped="" ref="0x406be550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c43b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406c43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c4588"/>
        <function-ref name="isInput" scoped="" ref="0x406c4668"/>
        <function-ref name="toggle" scoped="" ref="0x406c4748"/>
        <function-ref name="isOutput" scoped="" ref="0x406c4828"/>
        <function-ref name="get" scoped="" ref="0x406c4908"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c49e8"/>
        <function-ref name="set" scoped="" ref="0x406c4ac8"/>
        <function-ref name="clr" scoped="" ref="0x406c4ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c2978" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406c2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c2b50"/>
        <function-ref name="isInput" scoped="" ref="0x406c2c30"/>
        <function-ref name="toggle" scoped="" ref="0x406c2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x406c2df0"/>
        <function-ref name="get" scoped="" ref="0x406c2ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c1010"/>
        <function-ref name="set" scoped="" ref="0x406c10f0"/>
        <function-ref name="clr" scoped="" ref="0x406c11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406d2010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d21e8"/>
        <function-ref name="isInput" scoped="" ref="0x406d22c8"/>
        <function-ref name="toggle" scoped="" ref="0x406d23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x406d2488"/>
        <function-ref name="get" scoped="" ref="0x406d2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d2648"/>
        <function-ref name="set" scoped="" ref="0x406d2728"/>
        <function-ref name="clr" scoped="" ref="0x406d2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406d05e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406d05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d07c0"/>
        <function-ref name="isInput" scoped="" ref="0x406d08a0"/>
        <function-ref name="toggle" scoped="" ref="0x406d0980"/>
        <function-ref name="isOutput" scoped="" ref="0x406d0a60"/>
        <function-ref name="get" scoped="" ref="0x406d0b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d0c20"/>
        <function-ref name="set" scoped="" ref="0x406d0d00"/>
        <function-ref name="clr" scoped="" ref="0x406d0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406cdcb8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406cdcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406cde90"/>
        <function-ref name="isInput" scoped="" ref="0x406cc010"/>
        <function-ref name="toggle" scoped="" ref="0x406cc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406cc1d0"/>
        <function-ref name="get" scoped="" ref="0x406cc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406cc390"/>
        <function-ref name="set" scoped="" ref="0x406cc470"/>
        <function-ref name="clr" scoped="" ref="0x406cc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406de3b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406de3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406de588"/>
        <function-ref name="isInput" scoped="" ref="0x406de668"/>
        <function-ref name="toggle" scoped="" ref="0x406de748"/>
        <function-ref name="isOutput" scoped="" ref="0x406de828"/>
        <function-ref name="get" scoped="" ref="0x406de908"/>
        <function-ref name="makeOutput" scoped="" ref="0x406de9e8"/>
        <function-ref name="set" scoped="" ref="0x406deac8"/>
        <function-ref name="clr" scoped="" ref="0x406deba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406dc978" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406dc978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406dcb50"/>
        <function-ref name="isInput" scoped="" ref="0x406dcc30"/>
        <function-ref name="toggle" scoped="" ref="0x406dcd10"/>
        <function-ref name="isOutput" scoped="" ref="0x406dcdf0"/>
        <function-ref name="get" scoped="" ref="0x406dced0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406db010"/>
        <function-ref name="set" scoped="" ref="0x406db0f0"/>
        <function-ref name="clr" scoped="" ref="0x406db1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406d9ee0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406d9ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d80e0"/>
        <function-ref name="isInput" scoped="" ref="0x406d81c0"/>
        <function-ref name="toggle" scoped="" ref="0x406d82a0"/>
        <function-ref name="isOutput" scoped="" ref="0x406d8380"/>
        <function-ref name="get" scoped="" ref="0x406d8460"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d8540"/>
        <function-ref name="set" scoped="" ref="0x406d8620"/>
        <function-ref name="clr" scoped="" ref="0x406d8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406d63e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406d63e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d65c0"/>
        <function-ref name="isInput" scoped="" ref="0x406d66a0"/>
        <function-ref name="toggle" scoped="" ref="0x406d6780"/>
        <function-ref name="isOutput" scoped="" ref="0x406d6860"/>
        <function-ref name="get" scoped="" ref="0x406d6940"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d6a20"/>
        <function-ref name="set" scoped="" ref="0x406d6b00"/>
        <function-ref name="clr" scoped="" ref="0x406d6be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406e88f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406e88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e8ac8"/>
        <function-ref name="isInput" scoped="" ref="0x406e8ba8"/>
        <function-ref name="toggle" scoped="" ref="0x406e8c88"/>
        <function-ref name="isOutput" scoped="" ref="0x406e8d68"/>
        <function-ref name="get" scoped="" ref="0x406e8e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e8f28"/>
        <function-ref name="set" scoped="" ref="0x406e6018"/>
        <function-ref name="clr" scoped="" ref="0x406e60f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406e5dd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406e5dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e4010"/>
        <function-ref name="isInput" scoped="" ref="0x406e40f0"/>
        <function-ref name="toggle" scoped="" ref="0x406e41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e42b0"/>
        <function-ref name="get" scoped="" ref="0x406e4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e4470"/>
        <function-ref name="set" scoped="" ref="0x406e4550"/>
        <function-ref name="clr" scoped="" ref="0x406e4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406e23b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406e23b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e2588"/>
        <function-ref name="isInput" scoped="" ref="0x406e2668"/>
        <function-ref name="toggle" scoped="" ref="0x406e2748"/>
        <function-ref name="isOutput" scoped="" ref="0x406e2828"/>
        <function-ref name="get" scoped="" ref="0x406e2908"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e29e8"/>
        <function-ref name="set" scoped="" ref="0x406e2ac8"/>
        <function-ref name="clr" scoped="" ref="0x406e2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407069e0" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407069e0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403697d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403697d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40706bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40706d90" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40706d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40705010"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x407050f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x407051d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x407052b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40705390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4071c240" loc="60:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4071c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4071c418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40709418" loc="57:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40709418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x407095f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40709d78" loc="59:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40709d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4071c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x407097b0" loc="58:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x407097b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40709988"/>
        <function-ref name="taskLoop" scoped="" ref="0x40709a68"/>
        <function-ref name="runNextTask" scoped="" ref="0x40709b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40372718" loc="48:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40372718"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403728f0"/>
        <function-ref name="runTask" scoped="" ref="0x403729d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40368010" loc="47:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40368010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403681e8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403682c8"/>
        <function-ref name="runNextTask" scoped="" ref="0x403683a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403e43d0" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403e43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403e45a8"/>
        <function-ref name="runTask" scoped="" ref="0x403e4688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403e1068" loc="57:/home/branco/gitspace/Terra/TerraVM/src/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403e1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403e1240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403deb70" loc="55:/home/branco/gitspace/Terra/TerraVM/src/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403deb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ded48"/>
        <function-ref name="taskLoop" scoped="" ref="0x403dee28"/>
        <function-ref name="runNextTask" scoped="" ref="0x403def08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403f8670" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403f8848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403678e0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403678e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40367ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403f1680" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403f1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403f1858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProgReqTimerTask" ref="0x40765c20" loc="141:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProgReqTimerTask" scoped="" ref="0x40765c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40765df8"/>
        <function-ref name="runTask" scoped="" ref="0x40765ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSRadio" ref="0x40716eb8" loc="19:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSRadio" scoped="" ref="0x40716eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072b0c0"/>
        <function-ref name="receive" scoped="" ref="0x4072b1a0"/>
        <function-ref name="sendDoneAck" scoped="" ref="0x4072b280"/>
        <function-ref name="source" scoped="" ref="0x4072b360"/>
        <function-ref name="sendDone" scoped="" ref="0x4072b440"/>
        <function-ref name="setRFPower" scoped="" ref="0x4072b520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataFullTimer" ref="0x4075cae0" loc="50:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataFullTimer" scoped="" ref="0x4075cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407596a8"/>
        <function-ref name="fired" scoped="" ref="0x4075a938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40759068"/>
        <function-ref name="isOneShot" scoped="" ref="0x4075ade8"/>
        <function-ref name="getdt" scoped="" ref="0x40759b58"/>
        <function-ref name="gett0" scoped="" ref="0x40759900"/>
        <function-ref name="isRunning" scoped="" ref="0x4075ab90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4075a1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40759388"/>
        <function-ref name="startOneShot" scoped="" ref="0x4075a460"/>
        <function-ref name="stop" scoped="" ref="0x4075a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x407351f8" loc="23:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x407351f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407353d0"/>
        <function-ref name="source" scoped="" ref="0x407354b0"/>
        <function-ref name="address" scoped="" ref="0x40735590"/>
        <function-ref name="destination" scoped="" ref="0x40735670"/>
        <function-ref name="setSource" scoped="" ref="0x40735750"/>
        <function-ref name="setDestination" scoped="" ref="0x40735830"/>
        <function-ref name="type" scoped="" ref="0x40735910"/>
        <function-ref name="setType" scoped="" ref="0x407359f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40735ad0"/>
        <function-ref name="setGroup" scoped="" ref="0x40735bb0"/>
        <function-ref name="localGroup" scoped="" ref="0x40735c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMAux" ref="0x4074a420" loc="29:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMAux" scoped="" ref="0x4074a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMAux"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4074a678"/>
        <function-ref name="getPower" scoped="" ref="0x4074a758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNextMsg" ref="0x407e1c20" loc="1055:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNextMsg" scoped="" ref="0x407e1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407e1df8"/>
        <function-ref name="runTask" scoped="" ref="0x407e1ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSender" ref="0x40739b50" loc="27:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSender" scoped="" ref="0x40739b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40739d28"/>
        <function-ref name="getPayload" scoped="" ref="0x40739e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40739ee8"/>
        <function-ref name="cancel" scoped="" ref="0x40731010"/>
        <function-ref name="sendDone" scoped="" ref="0x407310f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x4072a010" loc="24:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x4072a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4072a1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x4072a2c8"/>
        <function-ref name="start" scoped="" ref="0x4072a3a8"/>
        <function-ref name="stop" scoped="" ref="0x4072a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSTimerAsync" ref="0x405b4eb0" loc="17:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerAsync" scoped="" ref="0x405b4eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40716440"/>
        <function-ref name="fired" scoped="" ref="0x407161a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40716280"/>
        <function-ref name="startOneShot" scoped="" ref="0x40716360"/>
        <function-ref name="stop" scoped="" ref="0x407160c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x407413c8" loc="25:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407413c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407415a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40741680"/>
        <function-ref name="getPayload" scoped="" ref="0x40741760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40741840"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40741920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4076ca50" loc="54:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4076ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4076cc28"/>
        <function-ref name="rand32" scoped="" ref="0x4076cd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceiver" ref="0x4073f100" loc="28:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceiver" scoped="" ref="0x4073f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4073f2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="outQ" ref="0x4074c4a0" loc="43:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="outQ" scoped="" ref="0x4074c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4074c758"/>
        <function-ref name="size" scoped="" ref="0x4074ce58"/>
        <function-ref name="element" scoped="" ref="0x4074c838"/>
        <function-ref name="get" scoped="" ref="0x4074c918"/>
        <function-ref name="read" scoped="" ref="0x4074c9f8"/>
        <function-ref name="remove" scoped="" ref="0x4074cad8"/>
        <function-ref name="maxSize" scoped="" ref="0x4074cbb8"/>
        <function-ref name="put" scoped="" ref="0x4074cc98"/>
        <function-ref name="isFree" scoped="" ref="0x4074cd78"/>
        <function-ref name="dataReady" scoped="" ref="0x4074c678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="procInputEvent" ref="0x407c4e08" loc="902:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="procInputEvent" scoped="" ref="0x407c4e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407c2010"/>
        <function-ref name="runTask" scoped="" ref="0x407c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TOSBoot" ref="0x4072b718" loc="21:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TOSBoot" scoped="" ref="0x4072b718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4072b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4074d010" loc="47:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4074d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40762b00"/>
        <function-ref name="fired" scoped="" ref="0x4074dd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407624c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40762268"/>
        <function-ref name="getdt" scoped="" ref="0x40761010"/>
        <function-ref name="gett0" scoped="" ref="0x40762d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40762010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4074d638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407627e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4074d8b8"/>
        <function-ref name="stop" scoped="" ref="0x4074db38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAck" ref="0x40729088" loc="26:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAck" scoped="" ref="0x40729088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40729260"/>
        <function-ref name="noAck" scoped="" ref="0x40729340"/>
        <function-ref name="wasAcked" scoped="" ref="0x40729420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMessage" ref="0x407cd010" loc="1008:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMessage" scoped="" ref="0x407cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407cd2e8"/>
        <function-ref name="runTask" scoped="" ref="0x407cd3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSUpload" ref="0x407165f8" loc="18:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSUpload" scoped="" ref="0x407165f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSUpload"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40716d10"/>
        <function-ref name="setEnv" scoped="" ref="0x407168b0"/>
        <function-ref name="loadSection" scoped="" ref="0x40716990"/>
        <function-ref name="getSection" scoped="" ref="0x40716a70"/>
        <function-ref name="resetMemory" scoped="" ref="0x40716b50"/>
        <function-ref name="start" scoped="" ref="0x40716c30"/>
        <function-ref name="getEnv" scoped="" ref="0x407167d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProgReqTimer" ref="0x4075e720" loc="49:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProgReqTimer" scoped="" ref="0x4075e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4075c248"/>
        <function-ref name="fired" scoped="" ref="0x4075d4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4075dbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4075d998"/>
        <function-ref name="getdt" scoped="" ref="0x4075c6f8"/>
        <function-ref name="gett0" scoped="" ref="0x4075c4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4075d740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4075ed48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4075df10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4075d010"/>
        <function-ref name="stop" scoped="" ref="0x4075d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSBoot" ref="0x405b4310" loc="15:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSBoot" scoped="" ref="0x405b4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405b44e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerVM" ref="0x4074fc10" loc="46:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerVM" scoped="" ref="0x4074fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40754730"/>
        <function-ref name="fired" scoped="" ref="0x407559b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407540f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40755e60"/>
        <function-ref name="getdt" scoped="" ref="0x40754be0"/>
        <function-ref name="gett0" scoped="" ref="0x40754988"/>
        <function-ref name="isRunning" scoped="" ref="0x40755c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40755258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40754410"/>
        <function-ref name="startOneShot" scoped="" ref="0x407554d8"/>
        <function-ref name="stop" scoped="" ref="0x40755758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inQ" ref="0x407568e0" loc="42:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inQ" scoped="" ref="0x407568e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40756b98"/>
        <function-ref name="size" scoped="" ref="0x4074c2b0"/>
        <function-ref name="element" scoped="" ref="0x40756c78"/>
        <function-ref name="get" scoped="" ref="0x40756d58"/>
        <function-ref name="read" scoped="" ref="0x40756e38"/>
        <function-ref name="remove" scoped="" ref="0x40756f18"/>
        <function-ref name="maxSize" scoped="" ref="0x4074c010"/>
        <function-ref name="put" scoped="" ref="0x4074c0f0"/>
        <function-ref name="isFree" scoped="" ref="0x4074c1d0"/>
        <function-ref name="dataReady" scoped="" ref="0x40756ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BM" ref="0x407459f0" loc="40:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BM" scoped="" ref="0x407459f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="vmBitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40745bc8"/>
        <function-ref name="clear" scoped="" ref="0x40745ca8"/>
        <function-ref name="toggle" scoped="" ref="0x40745d88"/>
        <function-ref name="resetRange" scoped="" ref="0x40745e68"/>
        <function-ref name="get" scoped="" ref="0x40738010"/>
        <function-ref name="countPend" scoped="" ref="0x407380f0"/>
        <function-ref name="assign" scoped="" ref="0x407381d0"/>
        <function-ref name="setAll" scoped="" ref="0x407382b0"/>
        <function-ref name="set" scoped="" ref="0x40738390"/>
        <function-ref name="isAllBitSet" scoped="" ref="0x40738470"/>
        <function-ref name="size" scoped="" ref="0x40738550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTimer" ref="0x407613a8" loc="48:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTimer" scoped="" ref="0x407613a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4075fe98"/>
        <function-ref name="fired" scoped="" ref="0x4075f150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4075f858"/>
        <function-ref name="isOneShot" scoped="" ref="0x4075f600"/>
        <function-ref name="getdt" scoped="" ref="0x4075e368"/>
        <function-ref name="gett0" scoped="" ref="0x4075e110"/>
        <function-ref name="isRunning" scoped="" ref="0x4075f3a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407619d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4075fb78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40761c50"/>
        <function-ref name="stop" scoped="" ref="0x40761ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSTimerVM" ref="0x405b4710" loc="16:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerVM" scoped="" ref="0x405b4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405b4c68"/>
        <function-ref name="fired" scoped="" ref="0x405b49c8"/>
        <function-ref name="isRunning" scoped="" ref="0x405b4aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x405b4b88"/>
        <function-ref name="stop" scoped="" ref="0x405b48e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407eec48" loc="4:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407eec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407eee20"/>
        <function-ref name="stopDone" scoped="" ref="0x407eef00"/>
        <function-ref name="start" scoped="" ref="0x40803010"/>
        <function-ref name="stop" scoped="" ref="0x408030f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMAux" ref="0x40800268" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMAux" scoped="" ref="0x40800268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMAux"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40800440"/>
        <function-ref name="getPower" scoped="" ref="0x40800520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40803550" loc="6:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40803550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40803728"/>
        <function-ref name="getPayload" scoped="" ref="0x40803808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408038e8"/>
        <function-ref name="cancel" scoped="" ref="0x408039c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40803aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408025c8" loc="8:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408025c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408027a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40802920" loc="10:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40802920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40802af8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40802bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40802cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40802d98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40802e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40803f10" loc="7:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40803f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40802108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40801cf8" loc="12:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40801cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40801ed0"/>
        <function-ref name="noAck" scoped="" ref="0x40800010"/>
        <function-ref name="wasAcked" scoped="" ref="0x408000f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40801040" loc="11:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40801040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40801218"/>
        <function-ref name="source" scoped="" ref="0x408012f8"/>
        <function-ref name="address" scoped="" ref="0x408013d8"/>
        <function-ref name="destination" scoped="" ref="0x408014b8"/>
        <function-ref name="setSource" scoped="" ref="0x40801598"/>
        <function-ref name="setDestination" scoped="" ref="0x40801678"/>
        <function-ref name="type" scoped="" ref="0x40801758"/>
        <function-ref name="setType" scoped="" ref="0x40801838"/>
        <function-ref name="isForMe" scoped="" ref="0x40801918"/>
        <function-ref name="setGroup" scoped="" ref="0x408019f8"/>
        <function-ref name="localGroup" scoped="" ref="0x40801ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40800d00" loc="59:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40800d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40800ed8"/>
        <function-ref name="stopDone" scoped="" ref="0x407fc010"/>
        <function-ref name="start" scoped="" ref="0x407fc0f0"/>
        <function-ref name="stop" scoped="" ref="0x407fc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407fc630" loc="61:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407fc630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407fc808"/>
        <function-ref name="getPayload" scoped="" ref="0x407fc8e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407fc9c8"/>
        <function-ref name="cancel" scoped="" ref="0x407fcaa8"/>
        <function-ref name="sendDone" scoped="" ref="0x407fcb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x407fb6a8" loc="63:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x407fb6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407fb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407fba00" loc="65:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407fba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407fbbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x407fbcb8"/>
        <function-ref name="getPayload" scoped="" ref="0x407fbd98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407fbe78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x4080a1a0" loc="69:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x4080a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4080aca0"/>
        <function-ref name="clear" scoped="" ref="0x40809068"/>
        <function-ref name="isValid" scoped="" ref="0x4080a8f0"/>
        <function-ref name="set" scoped="" ref="0x40809418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4081b068" loc="70:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4081b068"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4081b240"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4081b320"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4081b400"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4081b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407fb010" loc="62:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407fb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x407fae60" loc="67:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407fae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40811050"/>
        <function-ref name="noAck" scoped="" ref="0x40811130"/>
        <function-ref name="wasAcked" scoped="" ref="0x40811210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407fa1a8" loc="66:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407fa1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407fa380"/>
        <function-ref name="source" scoped="" ref="0x407fa460"/>
        <function-ref name="address" scoped="" ref="0x407fa540"/>
        <function-ref name="destination" scoped="" ref="0x407fa620"/>
        <function-ref name="setSource" scoped="" ref="0x407fa700"/>
        <function-ref name="setDestination" scoped="" ref="0x407fa7e0"/>
        <function-ref name="type" scoped="" ref="0x407fa8c0"/>
        <function-ref name="setType" scoped="" ref="0x407fa9a0"/>
        <function-ref name="isForMe" scoped="" ref="0x407faa80"/>
        <function-ref name="setGroup" scoped="" ref="0x407fab60"/>
        <function-ref name="localGroup" scoped="" ref="0x407fac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4080b7c0" loc="68:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4080b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408102d8"/>
        <function-ref name="clear" scoped="" ref="0x40810688"/>
        <function-ref name="isValid" scoped="" ref="0x4080bf10"/>
        <function-ref name="set" scoped="" ref="0x40810a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4081bdf0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4081bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40819010"/>
        <function-ref name="stopDone" scoped="" ref="0x408190f0"/>
        <function-ref name="start" scoped="" ref="0x408191d0"/>
        <function-ref name="stop" scoped="" ref="0x408192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408143a0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408143a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40814ea0"/>
        <function-ref name="clear" scoped="" ref="0x40813280"/>
        <function-ref name="isValid" scoped="" ref="0x40814af0"/>
        <function-ref name="set" scoped="" ref="0x40813630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40819710" loc="56:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40819710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408198e8"/>
        <function-ref name="getPayload" scoped="" ref="0x408199c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40819aa8"/>
        <function-ref name="cancel" scoped="" ref="0x40819b88"/>
        <function-ref name="sendDone" scoped="" ref="0x40819c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40818798" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40818798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40818970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408177b0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408177b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40817988"/>
        <function-ref name="payloadLength" scoped="" ref="0x40817a68"/>
        <function-ref name="getPayload" scoped="" ref="0x40817b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40817c28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40817d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40812980" loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40812980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408154a8"/>
        <function-ref name="clear" scoped="" ref="0x40815858"/>
        <function-ref name="isValid" scoped="" ref="0x408150f8"/>
        <function-ref name="set" scoped="" ref="0x40815c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40822228" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40822228"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40822400"/>
        <function-ref name="isSet" scoped="" ref="0x408224e0"/>
        <function-ref name="cancel" scoped="" ref="0x408225c0"/>
        <function-ref name="set" scoped="" ref="0x408226a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40818100" loc="57:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40818100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408182d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40822890" loc="67:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40822890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40822a68"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40822b48"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40822c28"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40822d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40817f28" loc="61:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40817f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40816110"/>
        <function-ref name="noAck" scoped="" ref="0x408161f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408162d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40818b08" loc="59:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40818b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40818ce0"/>
        <function-ref name="source" scoped="" ref="0x40818dc0"/>
        <function-ref name="address" scoped="" ref="0x40818ea0"/>
        <function-ref name="destination" scoped="" ref="0x40817010"/>
        <function-ref name="setSource" scoped="" ref="0x408170f0"/>
        <function-ref name="setDestination" scoped="" ref="0x408171d0"/>
        <function-ref name="type" scoped="" ref="0x408172b0"/>
        <function-ref name="setType" scoped="" ref="0x40817390"/>
        <function-ref name="isForMe" scoped="" ref="0x40817470"/>
        <function-ref name="setGroup" scoped="" ref="0x40817550"/>
        <function-ref name="localGroup" scoped="" ref="0x40817630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40812328" loc="62:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40812328"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40812500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40835a18" loc="57:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40835a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40835bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x40835cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40835db0"/>
        <function-ref name="cancel" scoped="" ref="0x40835e90"/>
        <function-ref name="sendDone" scoped="" ref="0x4081f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4081f220" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4081f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4081f3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40828a78" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40828a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40828c50"/>
        <function-ref name="getPayload" scoped="" ref="0x40828d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40828e10"/>
        <function-ref name="cancel" scoped="" ref="0x40828ef0"/>
        <function-ref name="sendDone" scoped="" ref="0x40821010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40821b10" loc="53:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40821b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40821ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4081f5d8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4081f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081f7b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4081f890"/>
        <function-ref name="getPayload" scoped="" ref="0x4081f970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4081fa50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4081fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40821478" loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40821478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40821650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40821e80" loc="54:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40821e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40820070"/>
        <function-ref name="source" scoped="" ref="0x40820150"/>
        <function-ref name="address" scoped="" ref="0x40820230"/>
        <function-ref name="destination" scoped="" ref="0x40820310"/>
        <function-ref name="setSource" scoped="" ref="0x408203f0"/>
        <function-ref name="setDestination" scoped="" ref="0x408204d0"/>
        <function-ref name="type" scoped="" ref="0x408205b0"/>
        <function-ref name="setType" scoped="" ref="0x40820690"/>
        <function-ref name="isForMe" scoped="" ref="0x40820770"/>
        <function-ref name="setGroup" scoped="" ref="0x40820850"/>
        <function-ref name="localGroup" scoped="" ref="0x40820930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408278e8" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408278e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40827ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x40827ba0"/>
        <function-ref name="start" scoped="" ref="0x40827c80"/>
        <function-ref name="stop" scoped="" ref="0x40827d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4085a920" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4085a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085aaf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4085abd8"/>
        <function-ref name="getPayload" scoped="" ref="0x4085acb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4085ad98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4085ae78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40827ed0" loc="67:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40827ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4085a0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4085a1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4085a280"/>
        <function-ref name="cancel" scoped="" ref="0x4085a360"/>
        <function-ref name="sendDone" scoped="" ref="0x4085a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40857790" loc="76:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40857790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40857968"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40857a48"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40857b28"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40857c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x40859ce8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x40859ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x40859ec0"/>
        <function-ref name="enableCca" scoped="" ref="0x40858010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40854100" loc="78:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40854100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40854c00"/>
        <function-ref name="clear" scoped="" ref="0x40853010"/>
        <function-ref name="isValid" scoped="" ref="0x40854850"/>
        <function-ref name="set" scoped="" ref="0x408533c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4085a5c8" loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4085a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4085a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x4086a308" loc="80:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4086a308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4086a4e0"/>
        <function-ref name="isSet" scoped="" ref="0x4086a5c0"/>
        <function-ref name="cancel" scoped="" ref="0x4086a6a0"/>
        <function-ref name="set" scoped="" ref="0x4086a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40855d90" loc="73:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40855d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40857010"/>
        <function-ref name="noAck" scoped="" ref="0x408570f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408571d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x408558b8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x408558b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x40855a90"/>
        <function-ref name="initial" scoped="" ref="0x40855b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40853af8" loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40853af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408526b8"/>
        <function-ref name="clear" scoped="" ref="0x40852a68"/>
        <function-ref name="isValid" scoped="" ref="0x40852308"/>
        <function-ref name="set" scoped="" ref="0x40852e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x408573c8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408573c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x408575a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40872878" loc="67:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40872878"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40872a50"/>
        <function-ref name="stopDone" scoped="" ref="0x40872b30"/>
        <function-ref name="start" scoped="" ref="0x40872c10"/>
        <function-ref name="stop" scoped="" ref="0x40872cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x4088d300" loc="82:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x4088d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b94e0"/>
            <typename><typedef-ref name="TMicro" ref="0x403b96a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x4088dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setWakeupTask" ref="0x40887968" loc="119:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setWakeupTask" scoped="" ref="0x40887968"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40887b40"/>
        <function-ref name="runTask" scoped="" ref="0x40887c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopDone" ref="0x40893648" loc="186:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopDone" scoped="" ref="0x40893648"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40893820"/>
        <function-ref name="runTask" scoped="" ref="0x40893900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiNoiseFloor" ref="0x4088b3d0" loc="84:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiNoiseFloor" scoped="" ref="0x4088b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088ba18"/>
        <function-ref name="readDone" scoped="" ref="0x4088bc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40892890" loc="80:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40892890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40892a68"/>
        <function-ref name="rand32" scoped="" ref="0x40892b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408717f8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408717f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408719d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40871ab0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40871b90"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40871c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x40872ea0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x40872ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x408710c0"/>
        <function-ref name="enableCca" scoped="" ref="0x408711a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408724e0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408724e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408726b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiCheckChannel" ref="0x4088e178" loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiCheckChannel" scoped="" ref="0x4088e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088e7c0"/>
        <function-ref name="readDone" scoped="" ref="0x4088ea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x40892378" loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x40892378"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40892550"/>
        <function-ref name="settled" scoped="" ref="0x40892630"/>
        <function-ref name="adjust" scoped="" ref="0x40892710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepCheck" ref="0x408a2240" loc="304:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sleepCheck" scoped="" ref="0x408a2240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408a2418"/>
        <function-ref name="runTask" scoped="" ref="0x408a24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WakeupTimer" ref="0x40892e20" loc="81:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WakeupTimer" scoped="" ref="0x40892e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40879920"/>
        <function-ref name="fired" scoped="" ref="0x40880bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408792e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40879088"/>
        <function-ref name="getdt" scoped="" ref="0x40879dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40879b78"/>
        <function-ref name="isRunning" scoped="" ref="0x40880e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40880468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40879600"/>
        <function-ref name="startOneShot" scoped="" ref="0x408806e8"/>
        <function-ref name="stop" scoped="" ref="0x40880968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioInit" ref="0x40871ec8" loc="73:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioInit" scoped="" ref="0x40871ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408700c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adjustSquelch" ref="0x408bbb98" loc="327:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adjustSquelch" scoped="" ref="0x408bbb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408bbd70"/>
        <function-ref name="runTask" scoped="" ref="0x408bbe50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x4087a1c0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x4087a1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x4087a398"/>
        <function-ref name="biasOn" scoped="" ref="0x4087a478"/>
        <function-ref name="getRFPower" scoped="" ref="0x4087a558"/>
        <function-ref name="tuneManual" scoped="" ref="0x4087a638"/>
        <function-ref name="selectLock" scoped="" ref="0x4087a718"/>
        <function-ref name="init" scoped="" ref="0x4087a7f8"/>
        <function-ref name="getLock" scoped="" ref="0x4087a8d8"/>
        <function-ref name="coreOn" scoped="" ref="0x4087a9b8"/>
        <function-ref name="txMode" scoped="" ref="0x4087aa98"/>
        <function-ref name="getLOStatus" scoped="" ref="0x4087ab78"/>
        <function-ref name="rxMode" scoped="" ref="0x4087ac58"/>
        <function-ref name="off" scoped="" ref="0x4087ad38"/>
        <function-ref name="setRFPower" scoped="" ref="0x4087ae18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioControl" ref="0x4086c2f0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioControl" scoped="" ref="0x4086c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4086c4c8"/>
        <function-ref name="stop" scoped="" ref="0x4086c5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiPulseCheck" ref="0x4088eef0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiPulseCheck" scoped="" ref="0x4088eef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088a578"/>
        <function-ref name="readDone" scoped="" ref="0x4088a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x40871350" loc="69:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x40871350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x40871528"/>
        <function-ref name="initial" scoped="" ref="0x40871608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadio" ref="0x40881af8" loc="75:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x40881af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x40881cd0"/>
        <function-ref name="listen" scoped="" ref="0x40881db0"/>
        <function-ref name="syncing" scoped="" ref="0x40881e90"/>
        <function-ref name="rxDone" scoped="" ref="0x4086f010"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x4086f0f0"/>
        <function-ref name="idleByte" scoped="" ref="0x4086f1d0"/>
        <function-ref name="cts" scoped="" ref="0x4086f2b0"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x4086f390"/>
        <function-ref name="sendDone" scoped="" ref="0x4086f470"/>
        <function-ref name="off" scoped="" ref="0x4086f550"/>
        <function-ref name="getTxMessage" scoped="" ref="0x4086f630"/>
        <function-ref name="rx" scoped="" ref="0x4086f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408e2870" loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408e2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e2a48"/>
        <function-ref name="payloadLength" scoped="" ref="0x408e2b28"/>
        <function-ref name="getPayload" scoped="" ref="0x408e2c08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e2ce8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408e2dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplCC1000Spi" ref="0x408da250" loc="84:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x408da250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x408da4a8"/>
        <function-ref name="initSlave" scoped="" ref="0x408da588"/>
        <function-ref name="disableIntr" scoped="" ref="0x408da668"/>
        <function-ref name="writeByte" scoped="" ref="0x408da748"/>
        <function-ref name="enableIntr" scoped="" ref="0x408da828"/>
        <function-ref name="txMode" scoped="" ref="0x408da908"/>
        <function-ref name="readByte" scoped="" ref="0x408da9e8"/>
        <function-ref name="rxMode" scoped="" ref="0x408daac8"/>
        <function-ref name="dataReady" scoped="" ref="0x408daba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408e3d98" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408e3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e2010"/>
        <function-ref name="getPayload" scoped="" ref="0x408e20f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e21d0"/>
        <function-ref name="cancel" scoped="" ref="0x408e22b0"/>
        <function-ref name="sendDone" scoped="" ref="0x408e2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x408e0a20" loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408e0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408df5b0"/>
        <function-ref name="clear" scoped="" ref="0x408df960"/>
        <function-ref name="isValid" scoped="" ref="0x408df200"/>
        <function-ref name="set" scoped="" ref="0x408dfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408e35f0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408e35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x408dcc38" loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x408dcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408dce10"/>
        <function-ref name="isSet" scoped="" ref="0x408dcef0"/>
        <function-ref name="cancel" scoped="" ref="0x408db010"/>
        <function-ref name="set" scoped="" ref="0x408db0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408e2518" loc="71:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408e2518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e26f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x408dad70" loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x408dad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408d9010"/>
        <function-ref name="settled" scoped="" ref="0x408d90f0"/>
        <function-ref name="adjust" scoped="" ref="0x408d91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiRx" ref="0x408d94a0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiRx" scoped="" ref="0x408d94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408d9ae8"/>
        <function-ref name="readDone" scoped="" ref="0x408d9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x408f13c0" loc="89:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x408f13c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408f1a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketSent" ref="0x4092ab08" loc="417:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketSent" scoped="" ref="0x4092ab08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4092ace0"/>
        <function-ref name="runTask" scoped="" ref="0x4092adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408e1da8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e1da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408e0010"/>
        <function-ref name="noAck" scoped="" ref="0x408e00f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408e01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x408db308" loc="83:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x408db308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x408db4e0"/>
        <function-ref name="biasOn" scoped="" ref="0x408db5c0"/>
        <function-ref name="getRFPower" scoped="" ref="0x408db6a0"/>
        <function-ref name="tuneManual" scoped="" ref="0x408db780"/>
        <function-ref name="selectLock" scoped="" ref="0x408db860"/>
        <function-ref name="init" scoped="" ref="0x408db940"/>
        <function-ref name="getLock" scoped="" ref="0x408dba20"/>
        <function-ref name="coreOn" scoped="" ref="0x408dbb00"/>
        <function-ref name="txMode" scoped="" ref="0x408dbbe0"/>
        <function-ref name="getLOStatus" scoped="" ref="0x408dbcc0"/>
        <function-ref name="rxMode" scoped="" ref="0x408dbda0"/>
        <function-ref name="off" scoped="" ref="0x408dbe80"/>
        <function-ref name="setRFPower" scoped="" ref="0x408da010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x408f1df8" loc="90:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x408f1df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408f2468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketReceived" ref="0x40947010" loc="594:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketReceived" scoped="" ref="0x40947010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409471e8"/>
        <function-ref name="runTask" scoped="" ref="0x409472c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408de488" loc="78:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408de488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408dc010"/>
        <function-ref name="clear" scoped="" ref="0x408dc3c0"/>
        <function-ref name="isValid" scoped="" ref="0x408debd8"/>
        <function-ref name="set" scoped="" ref="0x408dc770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x408e3970" loc="69:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x408e3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408e3b48"/>
        <function-ref name="stop" scoped="" ref="0x408e3c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x408e03c8" loc="75:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408e03c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x408e05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteRadio" ref="0x408e1010" loc="73:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x408e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x408e11e8"/>
        <function-ref name="listen" scoped="" ref="0x408e12c8"/>
        <function-ref name="syncing" scoped="" ref="0x408e13a8"/>
        <function-ref name="rxDone" scoped="" ref="0x408e1488"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x408e1568"/>
        <function-ref name="idleByte" scoped="" ref="0x408e1648"/>
        <function-ref name="cts" scoped="" ref="0x408e1728"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x408e1808"/>
        <function-ref name="sendDone" scoped="" ref="0x408e18e8"/>
        <function-ref name="off" scoped="" ref="0x408e19c8"/>
        <function-ref name="getTxMessage" scoped="" ref="0x408e1aa8"/>
        <function-ref name="rx" scoped="" ref="0x408e1b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRssi" ref="0x409868b8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRssi" scoped="" ref="0x409868b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40986f00"/>
        <function-ref name="readDone" scoped="" ref="0x4096b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40986068" loc="62:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40986068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40986240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40986320"/>
        <function-ref name="request" scoped="" ref="0x40986400"/>
        <function-ref name="granted" scoped="" ref="0x409864e0"/>
        <function-ref name="isOwner" scoped="" ref="0x409865c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Rssi" ref="0x4096e028" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Rssi" scoped="" ref="0x4096e028"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4096e670"/>
        <function-ref name="readDone" scoped="" ref="0x4096e8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409717a8" loc="54:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409717a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40971980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Squelch" ref="0x40971b48" loc="55:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x40971b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40971d20"/>
        <function-ref name="settled" scoped="" ref="0x40971e00"/>
        <function-ref name="adjust" scoped="" ref="0x40971ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x4098eb50" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x4098eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b94e0"/>
            <typename><typedef-ref name="TMicro" ref="0x403b96a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x4098d308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC" ref="0x4098e388" loc="57:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC" scoped="" ref="0x4098e388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4098e560"/>
        <function-ref name="read" scoped="" ref="0x4098e640"/>
        <function-ref name="write" scoped="" ref="0x4098e720"/>
        <function-ref name="getLOCK" scoped="" ref="0x4098e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Control" ref="0x4098f3f8" loc="54:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x4098f3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x4098f5d0"/>
        <function-ref name="biasOn" scoped="" ref="0x4098f6b0"/>
        <function-ref name="getRFPower" scoped="" ref="0x4098f790"/>
        <function-ref name="tuneManual" scoped="" ref="0x4098f870"/>
        <function-ref name="selectLock" scoped="" ref="0x4098f950"/>
        <function-ref name="init" scoped="" ref="0x4098fa30"/>
        <function-ref name="getLock" scoped="" ref="0x4098fb10"/>
        <function-ref name="coreOn" scoped="" ref="0x4098fbf0"/>
        <function-ref name="txMode" scoped="" ref="0x4098fcd0"/>
        <function-ref name="getLOStatus" scoped="" ref="0x4098fdb0"/>
        <function-ref name="rxMode" scoped="" ref="0x4098fe90"/>
        <function-ref name="off" scoped="" ref="0x4098e010"/>
        <function-ref name="setRFPower" scoped="" ref="0x4098e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x409cf2b0" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x409cf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x409cf488"/>
        <function-ref name="initSlave" scoped="" ref="0x409cf568"/>
        <function-ref name="disableIntr" scoped="" ref="0x409cf648"/>
        <function-ref name="writeByte" scoped="" ref="0x409cf728"/>
        <function-ref name="enableIntr" scoped="" ref="0x409cf808"/>
        <function-ref name="txMode" scoped="" ref="0x409cf8e8"/>
        <function-ref name="readByte" scoped="" ref="0x409cf9c8"/>
        <function-ref name="rxMode" scoped="" ref="0x409cfaa8"/>
        <function-ref name="dataReady" scoped="" ref="0x409cfb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiAdc" ref="0x409d1e98" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiAdc" scoped="" ref="0x409d1e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409d04f8"/>
        <function-ref name="readDone" scoped="" ref="0x409d0770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiResource" ref="0x409d0b40" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x409d0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409d0d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409d0df8"/>
        <function-ref name="request" scoped="" ref="0x409d0ed8"/>
        <function-ref name="granted" scoped="" ref="0x409cf010"/>
        <function-ref name="isOwner" scoped="" ref="0x409cf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x409cfd28" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x409cfd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409cff00"/>
        <function-ref name="read" scoped="" ref="0x409ce010"/>
        <function-ref name="write" scoped="" ref="0x409ce0f0"/>
        <function-ref name="getLOCK" scoped="" ref="0x409ce1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409cbd40" loc="28:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409cbd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409cbf18"/>
        <function-ref name="configure" scoped="" ref="0x40ab2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x409ccc70" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x409ccc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cb2e8"/>
        <function-ref name="readDone" scoped="" ref="0x409cb560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x409cb868" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409cb868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x409cba40"/>
        <function-ref name="getChannel" scoped="" ref="0x409cbb20"/>
        <function-ref name="getPrescaler" scoped="" ref="0x409cbc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409cc548" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409cc548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409cc720"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409cc800"/>
        <function-ref name="request" scoped="" ref="0x409cc8e0"/>
        <function-ref name="granted" scoped="" ref="0x409cc9c0"/>
        <function-ref name="isOwner" scoped="" ref="0x409ccaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x409e2a10" loc="18:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x409e2a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e4048"/>
        <function-ref name="readDone" scoped="" ref="0x409e42a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x409e49b0" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x409e49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e1010"/>
        <function-ref name="readDone" scoped="" ref="0x409e1288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x409e1940" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x409e1b18"/>
        <function-ref name="getChannel" scoped="" ref="0x409e1bf8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x409e1cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x409e01b8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409e01b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409e0390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409e0470"/>
        <function-ref name="request" scoped="" ref="0x409e0550"/>
        <function-ref name="granted" scoped="" ref="0x409e0630"/>
        <function-ref name="isOwner" scoped="" ref="0x409e0710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409db618" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409db618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409db7f0"/>
        <function-ref name="configure" scoped="" ref="0x409db8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x409f5db0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x409f5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x409db010"/>
        <function-ref name="dataReady" scoped="" ref="0x409db0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x409d9bd8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x409d9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x409d9db0"/>
        <function-ref name="cancel" scoped="" ref="0x409d9e90"/>
        <function-ref name="dataReady" scoped="" ref="0x409dc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409dd178" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409dd178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409dd350"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409dd430"/>
        <function-ref name="request" scoped="" ref="0x409dd510"/>
        <function-ref name="granted" scoped="" ref="0x409dd5f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409dd6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409f3260" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409f3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409f3438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x409f2040" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x409f2040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x409f2218"/>
        <function-ref name="dataReady" scoped="" ref="0x409f22f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x409f0aa0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x409f0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x409f0c78"/>
        <function-ref name="cancel" scoped="" ref="0x409f0d58"/>
        <function-ref name="dataReady" scoped="" ref="0x409f0e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x409e7850" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x409e7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x409e7a28"/>
        <function-ref name="getAdmux" scoped="" ref="0x409e7b08"/>
        <function-ref name="setPrescaler" scoped="" ref="0x409e7be8"/>
        <function-ref name="isEnabled" scoped="" ref="0x409e7cc8"/>
        <function-ref name="enableAdc" scoped="" ref="0x409e7da8"/>
        <function-ref name="setAdmux" scoped="" ref="0x409e7e88"/>
        <function-ref name="enableInterruption" scoped="" ref="0x409ef010"/>
        <function-ref name="isComplete" scoped="" ref="0x409ef0f0"/>
        <function-ref name="cancel" scoped="" ref="0x409ef1d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x409ef2b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x409ef390"/>
        <function-ref name="disableInterruption" scoped="" ref="0x409ef470"/>
        <function-ref name="startConversion" scoped="" ref="0x409ef550"/>
        <function-ref name="isStarted" scoped="" ref="0x409ef6b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x409ef790"/>
        <function-ref name="setContinuous" scoped="" ref="0x409ef870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x409ef950"/>
        <function-ref name="getValue" scoped="" ref="0x409efa30"/>
        <function-ref name="dataReady" scoped="" ref="0x409efb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x409f0610" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x409f0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409f07e8"/>
        <function-ref name="stop" scoped="" ref="0x409f08c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x409efce8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x409efce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x409efec0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x409ee010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x409ee0f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x409ee1d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x409ee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x409d7e78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x409d7e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40a0a070"/>
        <function-ref name="getAdmux" scoped="" ref="0x40a0a150"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40a0a230"/>
        <function-ref name="isEnabled" scoped="" ref="0x40a0a310"/>
        <function-ref name="enableAdc" scoped="" ref="0x40a0a3f0"/>
        <function-ref name="setAdmux" scoped="" ref="0x40a0a4d0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40a0a5b0"/>
        <function-ref name="isComplete" scoped="" ref="0x40a0a690"/>
        <function-ref name="cancel" scoped="" ref="0x40a0a770"/>
        <function-ref name="disableAdc" scoped="" ref="0x40a0a850"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40a0a930"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40a0aa10"/>
        <function-ref name="startConversion" scoped="" ref="0x40a0aaf0"/>
        <function-ref name="isStarted" scoped="" ref="0x40a0ac50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40a0ad30"/>
        <function-ref name="setContinuous" scoped="" ref="0x40a0ae10"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40a0aef0"/>
        <function-ref name="getValue" scoped="" ref="0x40a09010"/>
        <function-ref name="dataReady" scoped="" ref="0x40a090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40a09aa8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40a09aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40a09c80"/>
        <function-ref name="getAdmux" scoped="" ref="0x40a09d60"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40a09e40"/>
        <function-ref name="isEnabled" scoped="" ref="0x40a09f20"/>
        <function-ref name="enableAdc" scoped="" ref="0x40a06018"/>
        <function-ref name="setAdmux" scoped="" ref="0x40a060f8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40a061d8"/>
        <function-ref name="isComplete" scoped="" ref="0x40a062b8"/>
        <function-ref name="cancel" scoped="" ref="0x40a06398"/>
        <function-ref name="disableAdc" scoped="" ref="0x40a06478"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40a06558"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40a06638"/>
        <function-ref name="startConversion" scoped="" ref="0x40a06718"/>
        <function-ref name="isStarted" scoped="" ref="0x40a06878"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40a06958"/>
        <function-ref name="setContinuous" scoped="" ref="0x40a06a38"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40a06b18"/>
        <function-ref name="getValue" scoped="" ref="0x40a06bf8"/>
        <function-ref name="dataReady" scoped="" ref="0x40a06cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a06ec0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a06ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a250c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40a88068" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40a88068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40a88250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a88330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40a87010" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40a87010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40a871f8"/>
        <function-ref name="configure" scoped="" ref="0x40a872d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40a88470" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a88470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a88648"/>
        <function-ref name="requested" scoped="" ref="0x40a88728"/>
        <function-ref name="granted" scoped="" ref="0x40a88808"/>
        <function-ref name="isOwner" scoped="" ref="0x40a888e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a889c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a07910" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a07910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a07af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a07bd8"/>
        <function-ref name="request" scoped="" ref="0x40a07cb8"/>
        <function-ref name="granted" scoped="" ref="0x40a07d98"/>
        <function-ref name="isOwner" scoped="" ref="0x40a07e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40a88b08" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a88b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a88ce0"/>
        <function-ref name="userId" scoped="" ref="0x40a88dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f98340" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f98340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f98518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40f98678" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40f98678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f98850"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f98930"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f98a10"/>
        <function-ref name="dequeue" scoped="" ref="0x40f98af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f96010" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f96010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f961f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f962d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f95010" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f951f8"/>
        <function-ref name="configure" scoped="" ref="0x40f952d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f95438" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f95438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f95610"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f956f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f957d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f958b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40f96418" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f96418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f965f0"/>
        <function-ref name="requested" scoped="" ref="0x40f966d0"/>
        <function-ref name="granted" scoped="" ref="0x40f967b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f96890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f96970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f959f0" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f959f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f95bc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f95ca8"/>
        <function-ref name="led1On" scoped="" ref="0x40f95d88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f95e68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f93010"/>
        <function-ref name="get" scoped="" ref="0x40f930f0"/>
        <function-ref name="led1Off" scoped="" ref="0x40f931d0"/>
        <function-ref name="led0On" scoped="" ref="0x40f93550"/>
        <function-ref name="set" scoped="" ref="0x40f93390"/>
        <function-ref name="led2On" scoped="" ref="0x40f932b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40f93470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f977f0" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f977f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f979d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f97ab8"/>
        <function-ref name="request" scoped="" ref="0x40f97b98"/>
        <function-ref name="granted" scoped="" ref="0x40f97c78"/>
        <function-ref name="isOwner" scoped="" ref="0x40f97d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f96ab0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f96ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f96c88"/>
        <function-ref name="userId" scoped="" ref="0x40f96d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f936d0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f936d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f938a8"/>
        <function-ref name="runTask" scoped="" ref="0x40f93988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40a85010" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40a85010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40a851e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40a85328" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a85328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a85500"/>
        <function-ref name="requested" scoped="" ref="0x40a855e0"/>
        <function-ref name="granted" scoped="" ref="0x40a856c0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a857a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a85880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40a86bb0" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a86bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a86d88"/>
        <function-ref name="stop" scoped="" ref="0x40a86e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a859c0" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a859c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a85b98"/>
        <function-ref name="userId" scoped="" ref="0x40a85c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40fb1640" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40fb1640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40fb1818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40fb1958" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fb1958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fb1b30"/>
        <function-ref name="requested" scoped="" ref="0x40fb1c10"/>
        <function-ref name="granted" scoped="" ref="0x40fb1cf0"/>
        <function-ref name="isOwner" scoped="" ref="0x40fb1dd0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fb1eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40fb1248" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40fb1248"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fb1420"/>
        <function-ref name="stop" scoped="" ref="0x40fb1500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40fb0010" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40fb0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40fb01e8"/>
        <function-ref name="userId" scoped="" ref="0x40fb02c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40a953d8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40a953d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a95a00"/>
        <function-ref name="readDone" scoped="" ref="0x40a95c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40a94390" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40a94390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a949d8"/>
        <function-ref name="readDone" scoped="" ref="0x40a94c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40a928b8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a928b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40a92a90"/>
        <function-ref name="getChannel" scoped="" ref="0x40a92b70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40a92c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40a92040" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40a92040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40a92218"/>
        <function-ref name="cancel" scoped="" ref="0x40a922f8"/>
        <function-ref name="dataReady" scoped="" ref="0x40a923d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40aab010" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40aab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40aab1e8"/>
        <function-ref name="runTask" scoped="" ref="0x40aab2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40a96750" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40a96750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a96d88"/>
        <function-ref name="readDone" scoped="" ref="0x40ab7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40ab7470" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40ab7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab7aa8"/>
        <function-ref name="readDone" scoped="" ref="0x40ab7d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40ab60a8" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ab60a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ab6290"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ab6370"/>
        <function-ref name="request" scoped="" ref="0x40ab6450"/>
        <function-ref name="granted" scoped="" ref="0x40ab6530"/>
        <function-ref name="isOwner" scoped="" ref="0x40ab6610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40ad3560" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40ad3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40ad3738"/>
        <function-ref name="rand32" scoped="" ref="0x40ad3818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40ad1c88" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40ad1c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ad32c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4096fa60" loc="44:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4096fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4096fc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40acd010" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40acd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40acd1e8"/>
        <function-ref name="rand32" scoped="" ref="0x40acd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40acf6e8" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40acf6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40acfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40acf1c8" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40acf1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40acf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4097cb60" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4097cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ac26a8"/>
        <function-ref name="fired" scoped="" ref="0x40ab0938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ac2068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ab0de8"/>
        <function-ref name="getdt" scoped="" ref="0x40ac2b58"/>
        <function-ref name="gett0" scoped="" ref="0x40ac2900"/>
        <function-ref name="isRunning" scoped="" ref="0x40ab0b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ab01e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ac2388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ab0460"/>
        <function-ref name="stop" scoped="" ref="0x40ab06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40ac4d40" loc="49:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40ac4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ae48a8"/>
        <function-ref name="fired" scoped="" ref="0x40ae5ad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ae4268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ae4010"/>
        <function-ref name="getdt" scoped="" ref="0x40ae4d58"/>
        <function-ref name="gett0" scoped="" ref="0x40ae4b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40ae5d30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ae5380"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ae4588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ae5600"/>
        <function-ref name="stop" scoped="" ref="0x40ae5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40ae2dd0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40ae2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ade900"/>
        <function-ref name="fired" scoped="" ref="0x40adfba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ade2c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ade068"/>
        <function-ref name="getdt" scoped="" ref="0x40adedb0"/>
        <function-ref name="gett0" scoped="" ref="0x40adeb58"/>
        <function-ref name="isRunning" scoped="" ref="0x40adfdf8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40adf448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ade5e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40adf6c8"/>
        <function-ref name="stop" scoped="" ref="0x40adf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40adc130" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40adc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40adc778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ae2620" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ae2620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ae27f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40af2da0" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40af2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40af5508"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40af59f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40af5780"/>
        <function-ref name="overflow" scoped="" ref="0x40af5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40adb7d8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40adb7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40adb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40ad81c8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40ad81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ad7690"/>
        <function-ref name="fired" scoped="" ref="0x40ad8e30"/>
        <function-ref name="startAt" scoped="" ref="0x40ad7350"/>
        <function-ref name="isRunning" scoped="" ref="0x40ad70d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ad7908"/>
        <function-ref name="start" scoped="" ref="0x40ad8918"/>
        <function-ref name="stop" scoped="" ref="0x40ad8bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b6b0c0" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b6b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b6a5c8"/>
        <function-ref name="fired" scoped="" ref="0x40b6bd28"/>
        <function-ref name="startAt" scoped="" ref="0x40b6a288"/>
        <function-ref name="isRunning" scoped="" ref="0x40b6a010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b6a840"/>
        <function-ref name="start" scoped="" ref="0x40b6b810"/>
        <function-ref name="stop" scoped="" ref="0x40b6bab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40af0c78" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40af0c78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403695d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403695d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40af0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b6ab70" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b6ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b69308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b697f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b69580"/>
        <function-ref name="overflow" scoped="" ref="0x40b69a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40fd6a28" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40fd6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40fd6c00"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40fd6ce0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40fd6dc0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40fd6ea0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40fd4010"/>
        <function-ref name="setControl" scoped="" ref="0x40fd40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40fdcc30" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40fdcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fd90f8"/>
        <function-ref name="fired" scoped="" ref="0x40fdb8b8"/>
        <function-ref name="startAt" scoped="" ref="0x40fdbda8"/>
        <function-ref name="isRunning" scoped="" ref="0x40fdbb30"/>
        <function-ref name="getAlarm" scoped="" ref="0x40fd9370"/>
        <function-ref name="start" scoped="" ref="0x40fdb3a0"/>
        <function-ref name="stop" scoped="" ref="0x40fdb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fdc7f8" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fdc7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fdc9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40fd96a0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40fd96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fd9df0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40fd8300"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40fd8088"/>
        <function-ref name="overflow" scoped="" ref="0x40fd8578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40fd3ce8" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40fd3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40fd3ec0"/>
        <function-ref name="compareBusy" scoped="" ref="0x40fd2010"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40fd20f0"/>
        <function-ref name="countBusy" scoped="" ref="0x40fd21d0"/>
        <function-ref name="getAssr" scoped="" ref="0x40fd22b0"/>
        <function-ref name="setAssr" scoped="" ref="0x40fd2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40fd42e0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40fd42e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40fd3840"/>
        <function-ref name="fired" scoped="" ref="0x40fd4e40"/>
        <function-ref name="get" scoped="" ref="0x40fd4928"/>
        <function-ref name="reset" scoped="" ref="0x40fd30d8"/>
        <function-ref name="isOn" scoped="" ref="0x40fd3ab8"/>
        <function-ref name="set" scoped="" ref="0x40fd4ba0"/>
        <function-ref name="start" scoped="" ref="0x40fd3350"/>
        <function-ref name="stop" scoped="" ref="0x40fd35c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40fd8868" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40fd8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40fd62e0"/>
        <function-ref name="test" scoped="" ref="0x40fd7dd0"/>
        <function-ref name="get" scoped="" ref="0x40fd8eb0"/>
        <function-ref name="setScale" scoped="" ref="0x40fd6558"/>
        <function-ref name="getScale" scoped="" ref="0x40fd67f8"/>
        <function-ref name="reset" scoped="" ref="0x40fd7668"/>
        <function-ref name="overflow" scoped="" ref="0x40fd73f0"/>
        <function-ref name="isOn" scoped="" ref="0x40fd6068"/>
        <function-ref name="set" scoped="" ref="0x40fd7150"/>
        <function-ref name="start" scoped="" ref="0x40fd78e0"/>
        <function-ref name="stop" scoped="" ref="0x40fd7b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b38010" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b38010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40b381e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b382c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b383a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b38488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b38568"/>
        <function-ref name="setControl" scoped="" ref="0x40b38648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40b364f8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40b364f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40b366d0"/>
        <function-ref name="compareBusy" scoped="" ref="0x40b367b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40b36890"/>
        <function-ref name="countBusy" scoped="" ref="0x40b36970"/>
        <function-ref name="getAssr" scoped="" ref="0x40b36a50"/>
        <function-ref name="setAssr" scoped="" ref="0x40b36b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b38970" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b38970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b37f08"/>
        <function-ref name="fired" scoped="" ref="0x40b37528"/>
        <function-ref name="get" scoped="" ref="0x40b37010"/>
        <function-ref name="reset" scoped="" ref="0x40b377a0"/>
        <function-ref name="isOn" scoped="" ref="0x40b361a0"/>
        <function-ref name="set" scoped="" ref="0x40b37288"/>
        <function-ref name="start" scoped="" ref="0x40b37a18"/>
        <function-ref name="stop" scoped="" ref="0x40b37c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b3ecb0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b3ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b39778"/>
        <function-ref name="test" scoped="" ref="0x40b39288"/>
        <function-ref name="get" scoped="" ref="0x40b3b308"/>
        <function-ref name="setScale" scoped="" ref="0x40b399f0"/>
        <function-ref name="getScale" scoped="" ref="0x40b39c90"/>
        <function-ref name="reset" scoped="" ref="0x40b3ba98"/>
        <function-ref name="overflow" scoped="" ref="0x40b3b820"/>
        <function-ref name="isOn" scoped="" ref="0x40b39500"/>
        <function-ref name="set" scoped="" ref="0x40b3b580"/>
        <function-ref name="start" scoped="" ref="0x40b3bd10"/>
        <function-ref name="stop" scoped="" ref="0x40b39010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b30af0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b30af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40b30cc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b30da8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b30e88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b2f010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b2f0f0"/>
        <function-ref name="setControl" scoped="" ref="0x40b2f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40b52010" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40b52010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40b521e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40b52470" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40b52470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40b52648"/>
        <function-ref name="compareBusy" scoped="" ref="0x40b52728"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40b52808"/>
        <function-ref name="countBusy" scoped="" ref="0x40b528e8"/>
        <function-ref name="getAssr" scoped="" ref="0x40b529c8"/>
        <function-ref name="setAssr" scoped="" ref="0x40b52aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b2f4f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b2f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b54a48"/>
        <function-ref name="fired" scoped="" ref="0x40b54068"/>
        <function-ref name="get" scoped="" ref="0x40b2fb40"/>
        <function-ref name="reset" scoped="" ref="0x40b542e0"/>
        <function-ref name="isOn" scoped="" ref="0x40b54cc0"/>
        <function-ref name="set" scoped="" ref="0x40b2fdb8"/>
        <function-ref name="start" scoped="" ref="0x40b54558"/>
        <function-ref name="stop" scoped="" ref="0x40b547d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b357e0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b357e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b30288"/>
        <function-ref name="test" scoped="" ref="0x40b31d38"/>
        <function-ref name="get" scoped="" ref="0x40b35e28"/>
        <function-ref name="setScale" scoped="" ref="0x40b30500"/>
        <function-ref name="getScale" scoped="" ref="0x40b307a0"/>
        <function-ref name="reset" scoped="" ref="0x40b315d0"/>
        <function-ref name="overflow" scoped="" ref="0x40b31358"/>
        <function-ref name="isOn" scoped="" ref="0x40b30010"/>
        <function-ref name="set" scoped="" ref="0x40b310b8"/>
        <function-ref name="start" scoped="" ref="0x40b31848"/>
        <function-ref name="stop" scoped="" ref="0x40b31ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b9bbd0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b9bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b9bda8"/>
        <function-ref name="runTask" scoped="" ref="0x40b9be88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b9c248" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b9c248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b9b708"/>
        <function-ref name="fired" scoped="" ref="0x40b9ceb0"/>
        <function-ref name="startAt" scoped="" ref="0x40b9b3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b9b150"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b9b980"/>
        <function-ref name="start" scoped="" ref="0x40b9c998"/>
        <function-ref name="stop" scoped="" ref="0x40b9cc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ad9f08" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ad9f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b9da18"/>
        <function-ref name="fired" scoped="" ref="0x40b9ecb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b9d3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b9d180"/>
        <function-ref name="getdt" scoped="" ref="0x40b9dec8"/>
        <function-ref name="gett0" scoped="" ref="0x40b9dc70"/>
        <function-ref name="isRunning" scoped="" ref="0x40b9ef08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b9e558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b9d6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b9e7d8"/>
        <function-ref name="stop" scoped="" ref="0x40b9ea58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40bbc560" loc="71:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40bbc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bbc738"/>
        <function-ref name="runTask" scoped="" ref="0x40bbc818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40bbf338" loc="49:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40bbf338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bbde38"/>
        <function-ref name="fired" scoped="" ref="0x40bbd0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bbd7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bbd5a0"/>
        <function-ref name="getdt" scoped="" ref="0x40bbc310"/>
        <function-ref name="gett0" scoped="" ref="0x40bbc0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40bbd348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40bbf960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bbdb18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bbfbe0"/>
        <function-ref name="stop" scoped="" ref="0x40bbfe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b98f00" loc="48:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b98f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bc0b40"/>
        <function-ref name="fired" scoped="" ref="0x40b97ce0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bc04e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bc0278"/>
        <function-ref name="getdt" scoped="" ref="0x40bbf048"/>
        <function-ref name="gett0" scoped="" ref="0x40bc0da8"/>
        <function-ref name="isRunning" scoped="" ref="0x40bc0010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b97558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bc0810"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b977e8"/>
        <function-ref name="stop" scoped="" ref="0x40b97a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bba940" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bba940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40bb9360" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bb9360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb9ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bdb010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bb9d28"/>
        <function-ref name="overflow" scoped="" ref="0x40bdb288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40bd2350" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40bd2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40bd2528"/>
        <function-ref name="changed" scoped="" ref="0x40bd2608"/>
        <function-ref name="amGroup" scoped="" ref="0x40bd26e8"/>
        <function-ref name="setAddress" scoped="" ref="0x40bd27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40bd7d00" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40bd7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b94e0"/>
            <typename><typedef-ref name="TMicro" ref="0x403b96a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40bca478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40becd40" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40becd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be94a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be9998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be9720"/>
        <function-ref name="overflow" scoped="" ref="0x40be9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40be8728" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40be8728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x403dbef8"/>
            <typename><typedef-ref name="TOne" ref="0x403dabe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be8e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be5388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be5110"/>
        <function-ref name="overflow" scoped="" ref="0x40be5600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40bde010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40bde010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40bde1e8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40bde2c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40bde3a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40bde488"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40bde568"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40bde648"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40bde728"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40bde808"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40bde8e8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40bde9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40bfce68" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40bfce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40c00908"/>
        <function-ref name="test" scoped="" ref="0x40c00418"/>
        <function-ref name="get" scoped="" ref="0x40bdd4d8"/>
        <function-ref name="captured" scoped="" ref="0x40bdd9f0"/>
        <function-ref name="reset" scoped="" ref="0x40bddc90"/>
        <function-ref name="isOn" scoped="" ref="0x40c00690"/>
        <function-ref name="set" scoped="" ref="0x40bdd750"/>
        <function-ref name="start" scoped="" ref="0x40bddf08"/>
        <function-ref name="stop" scoped="" ref="0x40c001a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40bfa028" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40bfa028"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40bf9578"/>
        <function-ref name="fired" scoped="" ref="0x40bfab88"/>
        <function-ref name="get" scoped="" ref="0x40bfa670"/>
        <function-ref name="reset" scoped="" ref="0x40bfae00"/>
        <function-ref name="isOn" scoped="" ref="0x40bf97f0"/>
        <function-ref name="set" scoped="" ref="0x40bfa8e8"/>
        <function-ref name="start" scoped="" ref="0x40bf9088"/>
        <function-ref name="stop" scoped="" ref="0x40bf9300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40be1068" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40be1068"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40be0ab8"/>
        <function-ref name="test" scoped="" ref="0x40be05c8"/>
        <function-ref name="get" scoped="" ref="0x40be16b0"/>
        <function-ref name="setScale" scoped="" ref="0x40be0d30"/>
        <function-ref name="getScale" scoped="" ref="0x40bdf010"/>
        <function-ref name="reset" scoped="" ref="0x40be1e40"/>
        <function-ref name="overflow" scoped="" ref="0x40be1bc8"/>
        <function-ref name="isOn" scoped="" ref="0x40be0840"/>
        <function-ref name="set" scoped="" ref="0x40be1928"/>
        <function-ref name="start" scoped="" ref="0x40be00d8"/>
        <function-ref name="stop" scoped="" ref="0x40be0350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40bf3930" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40bf3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40bf3b08"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40bf3be8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40bf3cc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40bf3da8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40bf3e88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40bf2010"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40bf20f0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40bf21d0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40bf22b0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40bf2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x40c11b00" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x40c11b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40c11cd8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40c11db8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40c11e98"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40c10010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40c100f0"/>
        <function-ref name="setControl" scoped="" ref="0x40c101d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40c176c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40c176c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40c16c90"/>
        <function-ref name="fired" scoped="" ref="0x40c162b0"/>
        <function-ref name="get" scoped="" ref="0x40c17d10"/>
        <function-ref name="reset" scoped="" ref="0x40c16528"/>
        <function-ref name="isOn" scoped="" ref="0x40c16f08"/>
        <function-ref name="set" scoped="" ref="0x40c16010"/>
        <function-ref name="start" scoped="" ref="0x40c167a0"/>
        <function-ref name="stop" scoped="" ref="0x40c16a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40bf26c8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40bf26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40c17288"/>
        <function-ref name="test" scoped="" ref="0x40bf1cb8"/>
        <function-ref name="get" scoped="" ref="0x40bf2d10"/>
        <function-ref name="captured" scoped="" ref="0x40bf12b0"/>
        <function-ref name="reset" scoped="" ref="0x40bf1550"/>
        <function-ref name="isOn" scoped="" ref="0x40c17010"/>
        <function-ref name="set" scoped="" ref="0x40bf1010"/>
        <function-ref name="start" scoped="" ref="0x40bf17c8"/>
        <function-ref name="stop" scoped="" ref="0x40bf1a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40c15340" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40c15340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40c13898"/>
        <function-ref name="fired" scoped="" ref="0x40c15ea0"/>
        <function-ref name="get" scoped="" ref="0x40c15988"/>
        <function-ref name="reset" scoped="" ref="0x40c13130"/>
        <function-ref name="isOn" scoped="" ref="0x40c13b10"/>
        <function-ref name="set" scoped="" ref="0x40c15c00"/>
        <function-ref name="start" scoped="" ref="0x40c133a8"/>
        <function-ref name="stop" scoped="" ref="0x40c13620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40c13f28" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40c13f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40c11500"/>
        <function-ref name="fired" scoped="" ref="0x40c12a98"/>
        <function-ref name="get" scoped="" ref="0x40c12580"/>
        <function-ref name="reset" scoped="" ref="0x40c12d10"/>
        <function-ref name="isOn" scoped="" ref="0x40c11778"/>
        <function-ref name="set" scoped="" ref="0x40c127f8"/>
        <function-ref name="start" scoped="" ref="0x40c11010"/>
        <function-ref name="stop" scoped="" ref="0x40c11288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40bf6650" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bf6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bf30b8"/>
        <function-ref name="test" scoped="" ref="0x40bf4ba8"/>
        <function-ref name="get" scoped="" ref="0x40bf6c98"/>
        <function-ref name="setScale" scoped="" ref="0x40bf3330"/>
        <function-ref name="getScale" scoped="" ref="0x40bf35d0"/>
        <function-ref name="reset" scoped="" ref="0x40bf4440"/>
        <function-ref name="overflow" scoped="" ref="0x40bf41c8"/>
        <function-ref name="isOn" scoped="" ref="0x40bf4e20"/>
        <function-ref name="set" scoped="" ref="0x40bf6f10"/>
        <function-ref name="start" scoped="" ref="0x40bf46b8"/>
        <function-ref name="stop" scoped="" ref="0x40bf4930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c66040" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c66040"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403695d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403695d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c66218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c66428" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c66428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40c64ee0"/>
        <function-ref name="test" scoped="" ref="0x40c649f0"/>
        <function-ref name="get" scoped="" ref="0x40c66a70"/>
        <function-ref name="setScale" scoped="" ref="0x40c5c170"/>
        <function-ref name="getScale" scoped="" ref="0x40c5c410"/>
        <function-ref name="reset" scoped="" ref="0x40c64288"/>
        <function-ref name="overflow" scoped="" ref="0x40c64010"/>
        <function-ref name="isOn" scoped="" ref="0x40c64c68"/>
        <function-ref name="set" scoped="" ref="0x40c66ce8"/>
        <function-ref name="start" scoped="" ref="0x40c64500"/>
        <function-ref name="stop" scoped="" ref="0x40c64778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c5bd48" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c5bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x403dbef8"/>
            <typename><typedef-ref name="TOne" ref="0x403dabe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c5a4e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c5a9d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c5a760"/>
        <function-ref name="overflow" scoped="" ref="0x40c5ac50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c7a010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c7a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40c79a68"/>
        <function-ref name="test" scoped="" ref="0x40c79578"/>
        <function-ref name="get" scoped="" ref="0x40c7a658"/>
        <function-ref name="setScale" scoped="" ref="0x40c79ce0"/>
        <function-ref name="getScale" scoped="" ref="0x40c77010"/>
        <function-ref name="reset" scoped="" ref="0x40c7ade8"/>
        <function-ref name="overflow" scoped="" ref="0x40c7ab70"/>
        <function-ref name="isOn" scoped="" ref="0x40c797f0"/>
        <function-ref name="set" scoped="" ref="0x40c7a8d0"/>
        <function-ref name="start" scoped="" ref="0x40c79088"/>
        <function-ref name="stop" scoped="" ref="0x40c79300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40c90380" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40c90380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x403dbef8"/>
            <typename><typedef-ref name="TOne" ref="0x403dabe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c90ad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c8e010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c90d48"/>
        <function-ref name="overflow" scoped="" ref="0x40c8e288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c750c0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c750c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c75810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c75d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c75a88"/>
        <function-ref name="overflow" scoped="" ref="0x40c90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bebec0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bebec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bea520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40bea870" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bea870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403b90a0"/>
            <typename><typedef-ref name="T32khz" ref="0x403b9268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c8d010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c8d500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c8d288"/>
        <function-ref name="overflow" scoped="" ref="0x40c8d778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c8cce0" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c8cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c898a8"/>
        <function-ref name="fired" scoped="" ref="0x40c8aaa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c89268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c89010"/>
        <function-ref name="getdt" scoped="" ref="0x40c89d58"/>
        <function-ref name="gett0" scoped="" ref="0x40c89b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40c8ad00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c8a350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c89588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c8a5d0"/>
        <function-ref name="stop" scoped="" ref="0x40c8a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMAux" ref="0x40ca5108" loc="2:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/AMAuxC.nc">
      <component-ref qname="AMAuxC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMAux" scoped="" ref="0x40ca5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMAux"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40ca52e0"/>
        <function-ref name="getPower" scoped="" ref="0x40ca53c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAux" ref="0x40ca5630" loc="12:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/AMAuxC.nc">
      <component-ref qname="AMAuxC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAux" scoped="" ref="0x40ca5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x40ca5808"/>
        <function-ref name="biasOn" scoped="" ref="0x40ca58e8"/>
        <function-ref name="getRFPower" scoped="" ref="0x40ca59c8"/>
        <function-ref name="tuneManual" scoped="" ref="0x40ca5aa8"/>
        <function-ref name="selectLock" scoped="" ref="0x40ca5b88"/>
        <function-ref name="init" scoped="" ref="0x40ca5c68"/>
        <function-ref name="getLock" scoped="" ref="0x40ca5d48"/>
        <function-ref name="coreOn" scoped="" ref="0x40ca5e28"/>
        <function-ref name="txMode" scoped="" ref="0x40ca5f08"/>
        <function-ref name="getLOStatus" scoped="" ref="0x40ca4010"/>
        <function-ref name="rxMode" scoped="" ref="0x40ca40f0"/>
        <function-ref name="off" scoped="" ref="0x40ca41d0"/>
        <function-ref name="setRFPower" scoped="" ref="0x40ca42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cb0c90" loc="39:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
      <component-ref qname="BasicServicesC.Bitmap"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cb0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cb0e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x40c9e010" loc="40:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
      <component-ref qname="BasicServicesC.Bitmap"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x40c9e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="vmBitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40c9e1e8"/>
        <function-ref name="clear" scoped="" ref="0x40c9e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c9e3a8"/>
        <function-ref name="resetRange" scoped="" ref="0x40c9e488"/>
        <function-ref name="get" scoped="" ref="0x40c9e568"/>
        <function-ref name="countPend" scoped="" ref="0x40c9e648"/>
        <function-ref name="assign" scoped="" ref="0x40c9e728"/>
        <function-ref name="setAll" scoped="" ref="0x40c9e808"/>
        <function-ref name="set" scoped="" ref="0x40c9e8e8"/>
        <function-ref name="isAllBitSet" scoped="" ref="0x40c9e9c8"/>
        <function-ref name="size" scoped="" ref="0x40c9eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x40caf978" loc="13:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <component-ref qname="BasicServicesC.inQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x40caf978"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40cafb50"/>
        <function-ref name="dataReady" scoped="" ref="0x40cae390"/>
        <function-ref name="element" scoped="" ref="0x40cafd10"/>
        <function-ref name="get" scoped="" ref="0x40cafdf0"/>
        <function-ref name="read" scoped="" ref="0x40cafed0"/>
        <function-ref name="remove" scoped="" ref="0x40cae010"/>
        <function-ref name="maxSize" scoped="" ref="0x40cae0f0"/>
        <function-ref name="put" scoped="" ref="0x40cae1d0"/>
        <function-ref name="isFree" scoped="" ref="0x40cae2b0"/>
        <function-ref name="size" scoped="" ref="0x40cafc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x4102fb48" loc="5:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="BasicServicesC.inQueue.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x4102fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4102fd20"/>
        <function-ref name="size" scoped="" ref="0x4102d550"/>
        <function-ref name="element" scoped="" ref="0x4102fee0"/>
        <function-ref name="get" scoped="" ref="0x4102d010"/>
        <function-ref name="read" scoped="" ref="0x4102d0f0"/>
        <function-ref name="remove" scoped="" ref="0x4102d1d0"/>
        <function-ref name="maxSize" scoped="" ref="0x4102d2b0"/>
        <function-ref name="put" scoped="" ref="0x4102d390"/>
        <function-ref name="isFree" scoped="" ref="0x4102d470"/>
        <function-ref name="dataReady" scoped="" ref="0x4102fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dataReady" ref="0x4102d6d0" loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="BasicServicesC.inQueue.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataReady" scoped="" ref="0x4102d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4102d8a8"/>
        <function-ref name="runTask" scoped="" ref="0x4102d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x40cec9b8" loc="13:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <component-ref qname="BasicServicesC.outQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x40cec9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40cecb90"/>
        <function-ref name="dataReady" scoped="" ref="0x40ceb390"/>
        <function-ref name="element" scoped="" ref="0x40cecd50"/>
        <function-ref name="get" scoped="" ref="0x40cece30"/>
        <function-ref name="read" scoped="" ref="0x40cecf10"/>
        <function-ref name="remove" scoped="" ref="0x40ceb010"/>
        <function-ref name="maxSize" scoped="" ref="0x40ceb0f0"/>
        <function-ref name="put" scoped="" ref="0x40ceb1d0"/>
        <function-ref name="isFree" scoped="" ref="0x40ceb2b0"/>
        <function-ref name="size" scoped="" ref="0x40cecc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x41021b48" loc="5:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="BasicServicesC.outQueue.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x41021b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41021d20"/>
        <function-ref name="size" scoped="" ref="0x4101f550"/>
        <function-ref name="element" scoped="" ref="0x41021ee0"/>
        <function-ref name="get" scoped="" ref="0x4101f010"/>
        <function-ref name="read" scoped="" ref="0x4101f0f0"/>
        <function-ref name="remove" scoped="" ref="0x4101f1d0"/>
        <function-ref name="maxSize" scoped="" ref="0x4101f2b0"/>
        <function-ref name="put" scoped="" ref="0x4101f390"/>
        <function-ref name="isFree" scoped="" ref="0x4101f470"/>
        <function-ref name="dataReady" scoped="" ref="0x41021e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dataReady" ref="0x4101f6d0" loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="BasicServicesC.outQueue.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataReady" scoped="" ref="0x4101f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4101f8a8"/>
        <function-ref name="runTask" scoped="" ref="0x4101f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40cea470" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.TimerVM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cea470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ce8010"/>
        <function-ref name="fired" scoped="" ref="0x40ce9268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ce9970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ce9718"/>
        <function-ref name="getdt" scoped="" ref="0x40ce84c0"/>
        <function-ref name="gett0" scoped="" ref="0x40ce8268"/>
        <function-ref name="isRunning" scoped="" ref="0x40ce94c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ceaa98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ce9c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cead18"/>
        <function-ref name="stop" scoped="" ref="0x40ce9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ce62c0" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.TimerAsync"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ce62c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ce5db0"/>
        <function-ref name="fired" scoped="" ref="0x40ce5068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ce5770"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ce5518"/>
        <function-ref name="getdt" scoped="" ref="0x40ce42a0"/>
        <function-ref name="gett0" scoped="" ref="0x40ce4048"/>
        <function-ref name="isRunning" scoped="" ref="0x40ce52c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ce68e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ce5a90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ce6b68"/>
        <function-ref name="stop" scoped="" ref="0x40ce6de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ce30a0" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.sendTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ce30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ce2b88"/>
        <function-ref name="fired" scoped="" ref="0x40ce3e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ce2548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ce22f0"/>
        <function-ref name="getdt" scoped="" ref="0x40ce0048"/>
        <function-ref name="gett0" scoped="" ref="0x40ce2de0"/>
        <function-ref name="isRunning" scoped="" ref="0x40ce2098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ce36c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ce2868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ce3948"/>
        <function-ref name="stop" scoped="" ref="0x40ce3bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ce0e40" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.ProgReqTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ce0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cde988"/>
        <function-ref name="fired" scoped="" ref="0x40cdfc10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cde348"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cde0f0"/>
        <function-ref name="getdt" scoped="" ref="0x40cdee38"/>
        <function-ref name="gett0" scoped="" ref="0x40cdebe0"/>
        <function-ref name="isRunning" scoped="" ref="0x40cdfe68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cdf4b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cde668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cdf738"/>
        <function-ref name="stop" scoped="" ref="0x40cdf9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40cddc70" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.SendDataFullTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cddc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cda790"/>
        <function-ref name="fired" scoped="" ref="0x40cdca20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cda150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cdced0"/>
        <function-ref name="getdt" scoped="" ref="0x40cdac40"/>
        <function-ref name="gett0" scoped="" ref="0x40cda9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40cdcc78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cdc2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cda470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cdc548"/>
        <function-ref name="stop" scoped="" ref="0x40cdc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40cd9ac8" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.DataReqTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cd9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403bac50"/>
            <typename><typedef-ref name="TMilli" ref="0x403bae18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d03650"/>
        <function-ref name="fired" scoped="" ref="0x40d04860"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d03010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d04d10"/>
        <function-ref name="getdt" scoped="" ref="0x40d03b00"/>
        <function-ref name="gett0" scoped="" ref="0x40d038a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40d04ab8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d04108"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d03330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d04388"/>
        <function-ref name="stop" scoped="" ref="0x40d04608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VMCustom" ref="0x40cf88d8" loc="9:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <component-ref qname="VMCustomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VMCustom" scoped="" ref="0x40cf88d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VMCustom"/>
      </instance>
      <interface-functions>
        <function-ref name="evtError" scoped="" ref="0x40cf8ab0"/>
        <function-ref name="procOutEvt" scoped="" ref="0x40cf8b90"/>
        <function-ref name="setMVal" scoped="" ref="0x40cf8c70"/>
        <function-ref name="getTime" scoped="" ref="0x40cf8d50"/>
        <function-ref name="getRealAddr" scoped="" ref="0x40cf8e30"/>
        <function-ref name="callFunction" scoped="" ref="0x40cf8f10"/>
        <function-ref name="reset" scoped="" ref="0x40cf7010"/>
        <function-ref name="push" scoped="" ref="0x40cf70f0"/>
        <function-ref name="pop" scoped="" ref="0x40cf71d0"/>
        <function-ref name="queueEvt" scoped="" ref="0x40cf72b0"/>
        <function-ref name="getMVal" scoped="" ref="0x40cf7390"/>
        <function-ref name="getHaltedFlag" scoped="" ref="0x40cf7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VM" ref="0x40d15560" loc="13:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VM" scoped="" ref="0x40d15560"/></type-interface>
      <instance>
        <interfacedef-ref qname="VMCustom"/>
      </instance>
      <interface-functions>
        <function-ref name="evtError" scoped="" ref="0x40d15738"/>
        <function-ref name="procOutEvt" scoped="" ref="0x40d15818"/>
        <function-ref name="setMVal" scoped="" ref="0x40d158f8"/>
        <function-ref name="getTime" scoped="" ref="0x40d159d8"/>
        <function-ref name="getRealAddr" scoped="" ref="0x40d15ab8"/>
        <function-ref name="callFunction" scoped="" ref="0x40d15b98"/>
        <function-ref name="reset" scoped="" ref="0x40d15c78"/>
        <function-ref name="push" scoped="" ref="0x40d15d58"/>
        <function-ref name="pop" scoped="" ref="0x40d15e38"/>
        <function-ref name="queueEvt" scoped="" ref="0x40d15f18"/>
        <function-ref name="getMVal" scoped="" ref="0x40d14010"/>
        <function-ref name="getHaltedFlag" scoped="" ref="0x40d140f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSRadio" ref="0x40d14298" loc="14:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSRadio" scoped="" ref="0x40d14298"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d14470"/>
        <function-ref name="receive" scoped="" ref="0x40d14550"/>
        <function-ref name="sendDoneAck" scoped="" ref="0x40d14630"/>
        <function-ref name="source" scoped="" ref="0x40d14710"/>
        <function-ref name="sendDone" scoped="" ref="0x40d147f0"/>
        <function-ref name="setRFPower" scoped="" ref="0x40d148d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="usrDataQ" ref="0x40d13ce8" loc="19:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="usrDataQ" scoped="" ref="0x40d13ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40d12010"/>
        <function-ref name="size" scoped="" ref="0x40d12710"/>
        <function-ref name="element" scoped="" ref="0x40d120f0"/>
        <function-ref name="get" scoped="" ref="0x40d121d0"/>
        <function-ref name="read" scoped="" ref="0x40d122b0"/>
        <function-ref name="remove" scoped="" ref="0x40d12390"/>
        <function-ref name="maxSize" scoped="" ref="0x40d12470"/>
        <function-ref name="put" scoped="" ref="0x40d12550"/>
        <function-ref name="isFree" scoped="" ref="0x40d12630"/>
        <function-ref name="dataReady" scoped="" ref="0x40d13ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40d137e8" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40d137e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40d139c0"/>
        <function-ref name="rand32" scoped="" ref="0x40d13aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BCRadio_receive" ref="0x40d58400" loc="315:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BCRadio_receive" scoped="" ref="0x40d58400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d585d8"/>
        <function-ref name="runTask" scoped="" ref="0x40d586b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SA" ref="0x40d13010" loc="15:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SA" scoped="" ref="0x40d13010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensAct"/>
      </instance>
      <interface-functions>
        <function-ref name="reqSensor" scoped="" ref="0x40d131e8"/>
        <function-ref name="readSensor" scoped="" ref="0x40d132c8"/>
        <function-ref name="setActuator" scoped="" ref="0x40d133a8"/>
        <function-ref name="Ready" scoped="" ref="0x40d13488"/>
        <function-ref name="reqStreamSensor" scoped="" ref="0x40d13568"/>
        <function-ref name="getDatap" scoped="" ref="0x40d13648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAinterface" ref="0x40d49368" loc="15:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <component-ref qname="SensActC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAinterface" scoped="" ref="0x40d49368"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensAct"/>
      </instance>
      <interface-functions>
        <function-ref name="reqSensor" scoped="" ref="0x40d49540"/>
        <function-ref name="readSensor" scoped="" ref="0x40d49620"/>
        <function-ref name="setActuator" scoped="" ref="0x40d49700"/>
        <function-ref name="Ready" scoped="" ref="0x40d497e0"/>
        <function-ref name="reqStreamSensor" scoped="" ref="0x40d498c0"/>
        <function-ref name="getDatap" scoped="" ref="0x40d499a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="S_VOLT" ref="0x40d6e1a8" loc="22:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="S_VOLT" scoped="" ref="0x40d6e1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d6e7d0"/>
        <function-ref name="readDone" scoped="" ref="0x40d6ea28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="S_TEMP" ref="0x40d71748" loc="20:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="S_TEMP" scoped="" ref="0x40d71748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d71d70"/>
        <function-ref name="readDone" scoped="" ref="0x40d6f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SA" ref="0x40d720e0" loc="17:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SA" scoped="" ref="0x40d720e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensAct"/>
      </instance>
      <interface-functions>
        <function-ref name="reqSensor" scoped="" ref="0x40d722b8"/>
        <function-ref name="readSensor" scoped="" ref="0x40d72398"/>
        <function-ref name="setActuator" scoped="" ref="0x40d72478"/>
        <function-ref name="Ready" scoped="" ref="0x40d72558"/>
        <function-ref name="reqStreamSensor" scoped="" ref="0x40d72638"/>
        <function-ref name="getDatap" scoped="" ref="0x40d72718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A_LEDS" ref="0x40d72908" loc="18:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="A_LEDS" scoped="" ref="0x40d72908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d72ae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d72bc0"/>
        <function-ref name="led1On" scoped="" ref="0x40d72ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d72d80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d72e60"/>
        <function-ref name="get" scoped="" ref="0x40d71010"/>
        <function-ref name="led1Off" scoped="" ref="0x40d710f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40d71470"/>
        <function-ref name="set" scoped="" ref="0x40d711d0"/>
        <function-ref name="led0On" scoped="" ref="0x40d712b0"/>
        <function-ref name="led2On" scoped="" ref="0x40d71390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="S_PHOTO" ref="0x40d6f488" loc="21:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="S_PHOTO" scoped="" ref="0x40d6f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d6fab0"/>
        <function-ref name="readDone" scoped="" ref="0x40d6fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d98eb0" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <component-ref qname="SensActC.S_TEMP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d98eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d734e8"/>
        <function-ref name="readDone" scoped="" ref="0x40d73740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4103e150" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_TEMP.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4103e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4103e328"/>
        <function-ref name="configure" scoped="" ref="0x4103e408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4103f010" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_TEMP.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4103f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4103f638"/>
        <function-ref name="readDone" scoped="" ref="0x4103f890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4103fb98" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_TEMP.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4103fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4103fd70"/>
        <function-ref name="getChannel" scoped="" ref="0x4103fe50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4103e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x40d97010" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempDeviceP.nc">
      <component-ref qname="TempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d97010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d971e8"/>
        <function-ref name="configure" scoped="" ref="0x40d972c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40d9a9d0" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempDeviceP.nc">
      <component-ref qname="TempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40d9a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40d9aba8"/>
        <function-ref name="getChannel" scoped="" ref="0x40d9ac88"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40d9ad68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x40d979a0" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempP.nc">
      <component-ref qname="TempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d979a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d97b78"/>
        <function-ref name="configure" scoped="" ref="0x40d97c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BatMonRef" ref="0x40d94ed8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempP.nc">
      <component-ref qname="TempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BatMonRef" scoped="" ref="0x40d94ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d930c0"/>
        <function-ref name="isInput" scoped="" ref="0x40d931a0"/>
        <function-ref name="toggle" scoped="" ref="0x40d93280"/>
        <function-ref name="isOutput" scoped="" ref="0x40d93360"/>
        <function-ref name="get" scoped="" ref="0x40d93440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d93520"/>
        <function-ref name="set" scoped="" ref="0x40d93600"/>
        <function-ref name="clr" scoped="" ref="0x40d936e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempConfig" ref="0x40d97eb8" loc="43:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempP.nc">
      <component-ref qname="TempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempConfig" scoped="" ref="0x40d97eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40d940c0"/>
        <function-ref name="getChannel" scoped="" ref="0x40d941a0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40d94280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BatMon" ref="0x40d944c0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempP.nc">
      <component-ref qname="TempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BatMon" scoped="" ref="0x40d944c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d94698"/>
        <function-ref name="isInput" scoped="" ref="0x40d94778"/>
        <function-ref name="toggle" scoped="" ref="0x40d94858"/>
        <function-ref name="isOutput" scoped="" ref="0x40d94938"/>
        <function-ref name="get" scoped="" ref="0x40d94a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d94af8"/>
        <function-ref name="set" scoped="" ref="0x40d94bd8"/>
        <function-ref name="clr" scoped="" ref="0x40d94cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40da30a0" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc">
      <component-ref qname="SensActC.S_PHOTO"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40da30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40da36c8"/>
        <function-ref name="readDone" scoped="" ref="0x40da3920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41073858" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <component-ref qname="SensActC.S_PHOTO.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41073858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41073e80"/>
        <function-ref name="readDone" scoped="" ref="0x410720f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41070150" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_PHOTO.Sensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41070150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41070328"/>
        <function-ref name="configure" scoped="" ref="0x41070408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41071058" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_PHOTO.Sensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41071058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41071680"/>
        <function-ref name="readDone" scoped="" ref="0x410718d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41071be0" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_PHOTO.Sensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41071be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41071db8"/>
        <function-ref name="getChannel" scoped="" ref="0x41071e98"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41070010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d955c8" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica2dot/DemoSensorC.nc">
      <component-ref qname="SensActC.S_VOLT"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d955c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d95bf0"/>
        <function-ref name="readDone" scoped="" ref="0x40d95e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4106cec8" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica2dot/TempC.nc">
      <component-ref qname="SensActC.S_VOLT.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4106cec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4106b558"/>
        <function-ref name="readDone" scoped="" ref="0x4106b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410687f0" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_VOLT.Sensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410687f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410689c8"/>
        <function-ref name="configure" scoped="" ref="0x41068aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4106a718" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_VOLT.Sensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4106a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4106ad40"/>
        <function-ref name="readDone" scoped="" ref="0x41068010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41068318" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_VOLT.Sensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41068318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x410684f0"/>
        <function-ref name="getChannel" scoped="" ref="0x410685d0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x410686b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40db8eb8" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40db8eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40db50c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40db51a0"/>
        <function-ref name="led1On" scoped="" ref="0x40db5280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40db5360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40db5440"/>
        <function-ref name="get" scoped="" ref="0x40db5520"/>
        <function-ref name="led1Off" scoped="" ref="0x40db5600"/>
        <function-ref name="led2Off" scoped="" ref="0x40db5980"/>
        <function-ref name="set" scoped="" ref="0x40db56e0"/>
        <function-ref name="led0On" scoped="" ref="0x40db57c0"/>
        <function-ref name="led2On" scoped="" ref="0x40db58a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40db0248" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40db0248"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db0420"/>
        <function-ref name="isInput" scoped="" ref="0x40db0500"/>
        <function-ref name="toggle" scoped="" ref="0x40db05e0"/>
        <function-ref name="isOutput" scoped="" ref="0x40db06c0"/>
        <function-ref name="get" scoped="" ref="0x40db07a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db0880"/>
        <function-ref name="set" scoped="" ref="0x40db0960"/>
        <function-ref name="clr" scoped="" ref="0x40db0a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40db1220" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40db1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40db13f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40db0c30" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40db0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db0e08"/>
        <function-ref name="isInput" scoped="" ref="0x40db0ee8"/>
        <function-ref name="toggle" scoped="" ref="0x40daf010"/>
        <function-ref name="isOutput" scoped="" ref="0x40daf0f0"/>
        <function-ref name="get" scoped="" ref="0x40daf1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40daf2b0"/>
        <function-ref name="set" scoped="" ref="0x40daf390"/>
        <function-ref name="clr" scoped="" ref="0x40daf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40db1568" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40db1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40db1740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40db1820"/>
        <function-ref name="led1On" scoped="" ref="0x40db1900"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40db19e0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40db1ac0"/>
        <function-ref name="get" scoped="" ref="0x40db1ba0"/>
        <function-ref name="led1Off" scoped="" ref="0x40db1c80"/>
        <function-ref name="led2Off" scoped="" ref="0x40db0018"/>
        <function-ref name="set" scoped="" ref="0x40db1d60"/>
        <function-ref name="led0On" scoped="" ref="0x40db1e40"/>
        <function-ref name="led2On" scoped="" ref="0x40db1f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40daf660" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40daf660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40daf838"/>
        <function-ref name="isInput" scoped="" ref="0x40daf918"/>
        <function-ref name="toggle" scoped="" ref="0x40daf9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40dafad8"/>
        <function-ref name="get" scoped="" ref="0x40dafbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dafc98"/>
        <function-ref name="set" scoped="" ref="0x40dafd78"/>
        <function-ref name="clr" scoped="" ref="0x40dafe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40dcf188" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40dcf188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dcf360"/>
        <function-ref name="isInput" scoped="" ref="0x40dcf440"/>
        <function-ref name="toggle" scoped="" ref="0x40dcf520"/>
        <function-ref name="isOutput" scoped="" ref="0x40dcf600"/>
        <function-ref name="get" scoped="" ref="0x40dcf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dcf7c0"/>
        <function-ref name="set" scoped="" ref="0x40dcf8a0"/>
        <function-ref name="clr" scoped="" ref="0x40dcf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40dcfb90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40dcfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dcfd68"/>
        <function-ref name="isInput" scoped="" ref="0x40dcfe48"/>
        <function-ref name="toggle" scoped="" ref="0x40dcff28"/>
        <function-ref name="isOutput" scoped="" ref="0x40dce018"/>
        <function-ref name="get" scoped="" ref="0x40dce0f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dce1d8"/>
        <function-ref name="set" scoped="" ref="0x40dce2b8"/>
        <function-ref name="clr" scoped="" ref="0x40dce398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40dcd010" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dcd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dcd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40dce5a8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica2dot/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40dce5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dce780"/>
        <function-ref name="isInput" scoped="" ref="0x40dce860"/>
        <function-ref name="toggle" scoped="" ref="0x40dce940"/>
        <function-ref name="isOutput" scoped="" ref="0x40dcea20"/>
        <function-ref name="get" scoped="" ref="0x40dceb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dcebe0"/>
        <function-ref name="set" scoped="" ref="0x40dcecc0"/>
        <function-ref name="clr" scoped="" ref="0x40dceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40dcc1d8" loc="18:/opt/tinyos-2.1.2/tos/system/NoPinC.nc">
      <component-ref qname="PlatformLedsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40dcc1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dcc3b0"/>
        <function-ref name="isInput" scoped="" ref="0x40dcc490"/>
        <function-ref name="toggle" scoped="" ref="0x40dcc570"/>
        <function-ref name="isOutput" scoped="" ref="0x40dcc650"/>
        <function-ref name="get" scoped="" ref="0x40dcc730"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dcc810"/>
        <function-ref name="set" scoped="" ref="0x40dcc8f0"/>
        <function-ref name="clr" scoped="" ref="0x40dcc9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x40d75910" loc="13:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <component-ref qname="VMCustomC.usrDataQ"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x40d75910"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40d75ae8"/>
        <function-ref name="dataReady" scoped="" ref="0x40dc3390"/>
        <function-ref name="element" scoped="" ref="0x40d75ca8"/>
        <function-ref name="get" scoped="" ref="0x40d75d88"/>
        <function-ref name="read" scoped="" ref="0x40d75e68"/>
        <function-ref name="remove" scoped="" ref="0x40dc3010"/>
        <function-ref name="maxSize" scoped="" ref="0x40dc30f0"/>
        <function-ref name="put" scoped="" ref="0x40dc31d0"/>
        <function-ref name="isFree" scoped="" ref="0x40dc32b0"/>
        <function-ref name="size" scoped="" ref="0x40d75bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x4105f3d8" loc="5:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="VMCustomC.usrDataQ.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x4105f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4105f5b0"/>
        <function-ref name="size" scoped="" ref="0x4105fd90"/>
        <function-ref name="element" scoped="" ref="0x4105f770"/>
        <function-ref name="get" scoped="" ref="0x4105f850"/>
        <function-ref name="read" scoped="" ref="0x4105f930"/>
        <function-ref name="remove" scoped="" ref="0x4105fa10"/>
        <function-ref name="maxSize" scoped="" ref="0x4105faf0"/>
        <function-ref name="put" scoped="" ref="0x4105fbd0"/>
        <function-ref name="isFree" scoped="" ref="0x4105fcb0"/>
        <function-ref name="dataReady" scoped="" ref="0x4105f690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dataReady" ref="0x4105ff10" loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="VMCustomC.usrDataQ.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataReady" scoped="" ref="0x4105ff10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4105e108"/>
        <function-ref name="runTask" scoped="" ref="0x4105e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40dc2058" loc="43:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
      <component-ref qname="TerraVMAppC.evtQ"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40dc2058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="evtData" ref="0x40412010"/>
            <typename><typedef-ref name="evtData_t" ref="0x40412638"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40dc2d88"/>
        <function-ref name="enqueue" scoped="" ref="0x40dc14a0"/>
        <function-ref name="element" scoped="" ref="0x40dc17f0"/>
        <function-ref name="maxSize" scoped="" ref="0x40dc2b30"/>
        <function-ref name="dequeue" scoped="" ref="0x40dc1130"/>
        <function-ref name="empty" scoped="" ref="0x40dc2680"/>
        <function-ref name="size" scoped="" ref="0x40dc28d8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="TaskBasic" loc="55:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4036ec58" loc="67:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x403721a8" loc="75:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="VMCustom" loc="12:VMCustom.nc">
      <documentation loc="7:VMCustom.nc">
        <short>&#10; Interface: VMCustom&#10; Virtual Machine custom component interface&#10; &#10;</short>
      </documentation>
      <function event="" provided="0" name="evtError" ref="0x40430c28" loc="23:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ecode" ref="0x40430ad0" loc="23:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="procOutEvt" ref="0x40411f00" loc="13:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40411b98" loc="13:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x40411da0" loc="13:VMCustom.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setMVal" ref="0x40431d28" loc="20:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x404315c0" loc="20:VMCustom.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
          <variable name="Maddr" ref="0x404317c8" loc="20:VMCustom.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
          <variable name="fromTp" ref="0x404319c8" loc="20:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="tpTp" ref="0x40431bb8" loc="20:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getTime" ref="0x4042f038" loc="24:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getRealAddr" ref="0x404302f0" loc="21:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Maddr" ref="0x40430178" loc="21:VMCustom.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="callFunction" ref="0x4042a468" loc="14:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4042a310" loc="14:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4042a7f0" loc="15:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="push" ref="0x40429168" loc="17:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40429010" loc="17:VMCustom.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="pop" ref="0x4042abb8" loc="16:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="queueEvt" ref="0x40429a68" loc="18:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="evtId" ref="0x40429540" loc="18:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="auxId" ref="0x40429738" loc="18:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40429900" loc="18:VMCustom.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getMVal" ref="0x404311e8" loc="19:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x40058500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Maddr" ref="0x40429e88" loc="19:VMCustom.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
          <variable name="tp" ref="0x40431088" loc="19:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getHaltedFlag" ref="0x404306f8" loc="22:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BSTimer" loc="13:BSTimer.nc">
      <documentation loc="1:BSTimer.nc">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x4043a090" loc="18:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4043a418" loc="19:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4043bd00" loc="17:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4043b538" loc="15:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4043b3e0" loc="15:BSTimer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x4043b920" loc="16:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BSUpload" loc="18:BSUpload.nc">
      <function event="" provided="0" name="getEnv" ref="0x40424338" loc="26:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:24" alignment="I:1"><nx_struct-ref name="newProgVersion" ref="0x4041a760"/>
                <typename><typedef-ref name="newProgVersion_t" ref="0x40419eb0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404241e0" loc="26:BSUpload.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:24" alignment="I:1"><nx_struct-ref name="newProgVersion" ref="0x4041a760"/>
                <typename><typedef-ref name="newProgVersion_t" ref="0x40419eb0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setEnv" ref="0x40425d78" loc="23:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:24" alignment="I:1"><nx_struct-ref name="newProgVersion" ref="0x4041a760"/>
                <typename><typedef-ref name="newProgVersion_t" ref="0x40419eb0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40425c20" loc="23:BSUpload.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:24" alignment="I:1"><nx_struct-ref name="newProgVersion" ref="0x4041a760"/>
                <typename><typedef-ref name="newProgVersion_t" ref="0x40419eb0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="loadSection" ref="0x404235d0" loc="35:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Addr" ref="0x40423068" loc="35:BSUpload.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
          <variable name="Size" ref="0x40423258" loc="35:BSUpload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="Data" ref="0x40423468" loc="35:BSUpload.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getSection" ref="0x40423b90" loc="38:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Addr" ref="0x40423a18" loc="38:BSUpload.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetMemory" ref="0x40424c38" loc="32:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x40424868" loc="29:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="resetFlag" ref="0x40424710" loc="29:BSUpload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x404257d8" loc="20:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Boot.nc">
      <documentation loc="42:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40417070" loc="60:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Boot.nc">
        <documentation loc="51:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40418238" loc="43:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40418238"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x4042d440" loc="73:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="67:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40418238"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x40435320" loc="90:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="83:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40418238"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x404351c8" loc="90:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40418238"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40055840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x40055840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40435c18" loc="101:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="92:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40418238"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40435ac0" loc="101:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x4042d010" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="60:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4042dae8" loc="81:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="75:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40418238"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x404186d8" loc="50:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="45:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40418b20" loc="58:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BSRadio" loc="8:BSRadio.nc">
      <function command="" provided="0" name="send" ref="0x405c4a40" loc="9:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="am_id" ref="0x405c40c0" loc="9:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="target" ref="0x405c42d0" loc="9:BSRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
          <variable name="dataMsg" ref="0x405c44b0" loc="9:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dataSize" ref="0x405c46c8" loc="9:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="reqAck" ref="0x405c48c8" loc="9:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x405c1e98" loc="12:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="am_id" ref="0x405c1750" loc="12:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405c1968" loc="12:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x405c1b48" loc="12:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405c1d28" loc="12:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDoneAck" ref="0x405c1388" loc="11:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="am_id" ref="0x405c39a0" loc="11:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405c3bb8" loc="11:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataMsg" ref="0x405c3d98" loc="11:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405c1010" loc="11:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </variable>
          <variable name="wasAcked" ref="0x405c1210" loc="11:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x405c0470" loc="13:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c0318" loc="13:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405c35b0" loc="10:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="am_id" ref="0x405c4e18" loc="10:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405c3068" loc="10:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataMsg" ref="0x405c3248" loc="10:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405c3440" loc="10:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x405c09d0" loc="14:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="powerIdx" ref="0x405c0878" loc="14:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x405cc1a8" loc="62:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Init.nc">
        <documentation loc="53:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x405d64e8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x405d6390" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x405caa78" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x405d7168" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x405d7010" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x405d7830" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x405d76d8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x405d7d88" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4060e270" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4060e658" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4060fa90" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4060ee28" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4060fe50" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4060ea30" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4060f350" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4060f6e0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40611138" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40605c20" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x40611628" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000" loc="59:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <short>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.</short>
        <long>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40606aa0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Initialize CC1K pins&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40603820" loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read a value from a CC1000 register.</short>
          <long>&#10; Read a value from a CC1000 register.&#10; @param addr Which CC1000 register&#10; @return Value of register&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406036c8" loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40603218" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Write a value to a CC1000 register.</short>
          <long>&#10; Write a value to a CC1000 register.&#10; @param addr Which CC1000 register&#10; @param data Value to write&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40606e98" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x406030b8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOCK" ref="0x40603ca8" loc="83:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read the state of the CHP_OUT pin&#10; </short>
          <long>&#10; Read the state of the CHP_OUT pin&#10; @return State of CHP_OUT as a boolean (TRUE for high)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000Spi" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <short>&#10; Interface to the CC1000 chip's serial bus.</short>
        <long>&#10; Interface to the CC1000 chip's serial bus. This isn't really an SPI,&#10; but the mica2 interface was done using the Atmega128 SPI hardware. Hence&#10; the name.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <function command="" provided="0" name="isBufBusy" ref="0x4062b488" loc="62:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Is write buffer busy with the last transmission?&#10; </short>
          <long>&#10; Is write buffer busy with the last transmission?&#10; @return TRUE if the buffer is busy, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initSlave" ref="0x4062a6f0" loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Initialise the interface to the CC1000 bus.</short>
          <long>&#10; Initialise the interface to the CC1000 bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x4062a2c0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Disable CC1000 bus interrupts.</short>
          <long>&#10; Disable CC1000 bus interrupts.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x4062b010" loc="56:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Write a byte to the CC1000 bus.</short>
          <long>&#10; Write a byte to the CC1000 bus.&#10; @param data Byte to write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4061cdf0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x4062bdc0" loc="75:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus.</short>
          <long>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus. After this is called, dataReady events will be signaled every&#10; 8 CC1000 data clocks.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x4062ab10" loc="90:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readByte" ref="0x4062b950" loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Get the last byte received from the CC1000 bus.</short>
          <long>&#10; Get the last byte received from the CC1000 bus.&#10; @return Last byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x40629010" loc="95:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406295f0" loc="103:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks.</short>
          <long>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks. &#10; @param data In &#34;receive&#34; mode, the last value received from the CC1000 &#10;   bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40629498" loc="103:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
      <documentation loc="42:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4036c3f0" loc="57:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
        <documentation loc="54:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4036ccf8" loc="72:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
        <documentation loc="67:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4036c830" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
        <documentation loc="59:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuSleep.nc">
      <documentation loc="63:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403e4e68" loc="76:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuSleep.nc">
        <documentation loc="75:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403f8310" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403aa470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403f1408" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
      <documentation loc="36:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407445b0" loc="53:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407445b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40750f00" loc="136:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="132:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40753b48" loc="83:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="80:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40751cc0" loc="114:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="100:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40751978" loc="114:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40751b60" loc="114:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x407514d0" loc="98:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="94:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4074f888" loc="151:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="146:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4074f358" loc="144:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="138:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40751010" loc="92:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="86:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40744c08" loc="64:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="56:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40744ab0" loc="64:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x407508e0" loc="129:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="116:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40750598" loc="129:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40750780" loc="129:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x407532b0" loc="73:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="66:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40753158" loc="73:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40753780" loc="78:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="75:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x407219e8" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x405b3370"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40721890" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40727310" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407271b8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40728258" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x407288f0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40728798" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40725c18" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407258b0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40725ab8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40727ef8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40727b90" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40727d98" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40724320" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407241c8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40724e58" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40724b28" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40724cf8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405b3118"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x407237d0" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40723678" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40736688" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x405b3370"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40736328" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40736528" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x405b3370"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40736f00" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x405b3370"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMAux" loc="1:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
      <function command="" provided="0" name="setPower" ref="0x4073fca8" loc="2:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
        <interfacedef-ref qname="AMAux"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4073f950" loc="2:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x4073fb48" loc="2:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x4074a2b8" loc="3:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
        <interfacedef-ref qname="AMAux"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4074a160" loc="3:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4073d178" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40729b88" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40729da0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4073d010" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4073add0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073aa70" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4073ac50" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4073a510" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4073de18" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073dcc0" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4073cbf8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073c8a0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4073ca98" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40734ed0" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40734d78" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40733c78" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40733b20" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40734690" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40733440" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4072ad70" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072ac18" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4072f758" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072f600" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4072e828" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072e4c8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4072e6a8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40730d80" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x407303e8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407300a8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40730288" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4076c850" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
        <documentation loc="48:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4076c3a8" loc="46:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
        <documentation loc="42:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40731df0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
              <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407318a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40731a88" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40731c68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="dataQueue" loc="7:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <short>&#10; dataQueue interface&#10;</short>
      </documentation>
      <function event="" provided="0" name="dataReady" ref="0x40757b60" loc="15:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40756010" loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40756728" loc="17:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40756400" loc="17:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="Data" ref="0x407565c8" loc="17:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40743290" loc="9:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Data" ref="0x40743138" loc="9:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40743b88" loc="11:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Data" ref="0x40743a30" loc="11:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x40743668" loc="10:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x407573f0" loc="13:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40738d30" loc="8:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Data" ref="0x40738bd8" loc="8:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x407577b0" loc="14:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40757010" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4072c420" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072c2c8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4072cf18" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072cdc0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x407409b8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40740860" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="vmBitVector" loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
      <documentation loc="28:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <short>&#10; WDVM project: Adapted to check if all bits are set&#10; </short>
        <long>&#10; WDVM project: Adapted to check if all bits are set&#10; @author A.Branco &#60;branco@inf.puc-rio.br>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x4074af20" loc="38:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="35:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40748468" loc="62:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="58:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40748310" loc="62:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40748a28" loc="68:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="64:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x407488d0" loc="68:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRange" ref="0x40745358" loc="94:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="89:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; reset bits from 'from' to 'to'&#10; </short>
          <long>&#10; reset bits from 'from' to 'to'&#10; @param from&#10; @param to&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x40745010" loc="94:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x407451f8" loc="94:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407498f0" loc="50:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40749798" loc="50:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countPend" ref="0x407457f8" loc="100:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="96:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Count not set bits.</short>
          <long>&#10; Count not set bits.&#10; @return counter.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x407461e8" loc="75:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="70:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40748e90" loc="75:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x40746088" loc="75:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x40749340" loc="43:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="40:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40749ea0" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40749d48" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAllBitSet" ref="0x40746ae8" loc="87:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="83:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Check if all bits are set.</short>
          <long>&#10; Check if all bits are set.&#10; @return Check result.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40746668" loc="81:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="77:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x408116d0" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408116d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40811838" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40811838"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4080ea78" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40811838"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4080e920" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4080c528" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4080c3d0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40811ec0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40811d68" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4080b010" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40811838"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4080cc78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4080ce88" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40811838"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x4081c090" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4081dcc0" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x4081def8" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x4081cb50" loc="71:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4081c9f8" loc="71:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x4081d7e8" loc="57:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x4081d168" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4081d010" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40826b28" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408269d0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40826220" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408260c8" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40825d00" loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40825ba8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40825418" loc="65:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408252c0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40816ce8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40816b90" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40837408" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408370c8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408372a8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40835010" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40833bd0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40833db0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40833670" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40836088" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40837ef0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40836d20" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408369c8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40836bc0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaControl" loc="40:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
        <short>&#10; Interface for activating/deactivating congestion control.</short>
        <long>&#10; Interface for activating/deactivating congestion control.&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   August 31 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableCca" ref="0x40859b00" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Disable congestion control.</short>
          <long>&#10; Disable congestion control.&#10; @return SUCCESS if congestion control disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x40859650" loc="45:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Enable congestion control.</short>
          <long>&#10; Enable congestion control.&#10; @return SUCCESS if congestion control enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="40:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x40855360" loc="56:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @param 'message_t* ONE m'&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40855208" loc="56:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x408589a0" loc="48:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @param 'message_t* ONE m'&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40858848" loc="48:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408906e8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408906e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40890850" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40890850"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40890e68" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40890850"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40890d10" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40890850"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4088c348" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4088c348"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4088c818" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4088b010" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4088c348"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4088ccb8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4088ce88" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4088c348"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Squelch" loc="45:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
        <short>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; </short>
        <long>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x4086ec78" loc="57:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Return current estimated noise floor&#10; </short>
          <long>&#10; Return current estimated noise floor&#10; @return Noise floor value&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="settled" ref="0x408920f8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; </short>
          <long>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; @return TRUE if noise floor estimate considered stable, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="adjust" ref="0x4086e7f0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Adjust noise floor based on new noise measurement&#10; </short>
          <long>&#10; Adjust noise floor based on new noise measurement&#10; @param data noise measurement&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4086e698" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Control" loc="45:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <short>&#10; CC1000 internal radio control interface.</short>
        <long>&#10; CC1000 internal radio control interface.&#10; @author Philip Buonadonna&#10; @aythor Jaein Jeong&#10;</long>
      </documentation>
      <function command="" provided="0" name="tunePreset" ref="0x4087f418" loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.</short>
          <long>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.  Calling Tune will allso reset the rfpower and LockVal&#10; selections to the table values.&#10; &#10; @param freq The index into the CC1K_Params table that holds the&#10; desired preset frequency parameters.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="freq" ref="0x4087f2c0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="biasOn" ref="0x4087d250" loc="104:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the bias power on.</short>
          <long>&#10; Turn the bias power on. This function must be followed by a call to&#10; either rxMode() or txMode() to place the radio in a recieve/transmit&#10; state respectively. There is approximately a 200us delay when&#10; restoring bias power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRFPower" ref="0x4087ddf0" loc="121:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the present RF power index.</short>
          <long>&#10; Get the present RF power index.&#10;&#10; @return The power index value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tuneManual" ref="0x4087fb70" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to a given frequency.</short>
          <long>&#10; Tune the radio to a given frequency. Since the CC1000 uses a digital&#10; frequency synthesizer, it cannot tune to just an arbitrary frequency.&#10; This routine will determine the closest achievable channel, compute&#10; the necessary parameters and tune the radio.&#10; &#10; @param The desired channel frequency, in Hz.&#10; &#10; @return The actual computed channel frequency, in Hz.  A return value&#10; of '0' indicates that no frequency was computed and the radio was not&#10; tuned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DesiredFreq" ref="0x4087fa18" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="selectLock" ref="0x4087b410" loc="129:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.</short>
          <long> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.  See&#10; the CC1000 data sheet for the available signals.&#10; &#10; @param LockVal The index of the signal to monitor at the CHP_OUT pin&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="LockVal" ref="0x4087b2b8" loc="129:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x4086fe50" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Initialise the radio to its default state.</short>
          <long>&#10; Initialise the radio to its default state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLock" ref="0x4087b910" loc="137:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="131:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the binary value from the CHP_OUT pin.</short>
          <long>&#10; Get the binary value from the CHP_OUT pin.  Analog signals cannot be&#10; read using function.&#10;&#10; @return 1 - Pin is high or 0 - Pin is low&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="coreOn" ref="0x4087ed50" loc="96:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.</short>
          <long>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.  This will result in approximately a 750&#10; uA power savings.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x4087e510" loc="84:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio into transmit mode.</short>
          <long>&#10; Shift the CC1000 Radio into transmit mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOStatus" ref="0x4087bdd0" loc="147:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="139:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.</short>
          <long>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.  This information is used to determine if the data&#10; from the CC1000 needs to be inverted or not.&#10;&#10; @return TRUE if high-side LO injection is being used (i.e. data does NOT need to be inverted&#10; at the receiver.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x4087e930" loc="89:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio in receive mode.</short>
          <long>&#10; Shift the CC1000 Radio in receive mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x4087e138" loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the CC1000 off&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x4087d8a8" loc="114:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Set the transmit RF power value.</short>
          <long>&#10; Set the transmit RF power value.  The input value is simply an&#10; arbitrary index that is programmed into the CC1000 registers.  Consult&#10; the CC1000 datasheet for the resulting power output/current&#10; consumption values.&#10;&#10; @param power A power index between 1 and 255.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="power" ref="0x4087d750" loc="114:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40870a28" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40870ef0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ByteRadio" loc="19:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <short>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission).</short>
        <long>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). This interface specifies the interaction between these&#10; two components.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="rts" ref="0x40885168" loc="25:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="21:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive wants to send a packet.</short>
          <long>&#10; SendReceive wants to send a packet.&#10; @param msg Message to be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40885010" loc="25:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
                <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x40883010" loc="61:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Enable listening for incoming packets.</short>
          <long>&#10; Enable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncing" ref="0x40881010" loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Detect if SendReceive is attempting to sync with an incoming packet.</short>
          <long>&#10; Detect if SendReceive is attempting to sync with an incoming packet.&#10; During sync, idleByte events are not signaled. If sync is successful,&#10; an rx() event will be signaled, if it fails, idleByte events will&#10; resume. If syncing() returns TRUE, the last idleByte() event must&#10; have had preamble = TRUE.&#10;&#10; @return TRUE if a sync attempt is in progress, FALSE if not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40881940" loc="95:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Message reception is complete.</short>
          <long>&#10; Message reception is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreambleLength" ref="0x40884b08" loc="56:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Get message preamble length.</short>
          <long>&#10; Get message preamble length.&#10; @return Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleByte" ref="0x408839d8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.</short>
          <long>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.&#10; @param preamble TRUE if a message preamble byte has been received&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="preamble" ref="0x40883880" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cts" ref="0x40885578" loc="32:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Access to the media granted.</short>
          <long>&#10; Access to the media granted. Start sending. SendReceive must signal&#10; sendDone when transmission is complete. Note: the media-access-contro&#10; layer must have enabled listening before calling cts().&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPreambleLength" ref="0x40884618" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Set message preamble length.</short>
          <long>&#10; Set message preamble length.&#10; @param bytes Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bytes" ref="0x408844c0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40884010" loc="44:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Transmission complete.</short>
          <long>&#10; Transmission complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40883410" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Disable listening for incoming packets.</short>
          <long>&#10; Disable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxMessage" ref="0x40885ae0" loc="39:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.</short>
          <long>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.&#10; @return Message being transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c6e00"/>
              <typename><typedef-ref name="message_t" ref="0x405c5c08"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rx" ref="0x40881560" loc="90:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; A message is being received&#10;</short>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408d8a80" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408d8a80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x408f1010" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x409696e8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4096cdb8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4096c7b8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40969278" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40969de0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x409c6730" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x409c6270" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x409c8780" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x409c8780"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x409c8c30" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x409e23f8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x409c8780"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x409e20c8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x409e2298" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x409c8780"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x409d65c8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x409dcd90" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x409d6010" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x409d6238" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x409d6458" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x409f5930" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409d6ee8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x409f50f0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x409f52f8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x409f5550" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x409f57b8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x409da7f0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x409da010" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x409da238" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x409da460" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x409da680" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x409d98e8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x409d9360" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409d9010" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x409d9200" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x409ea5a8" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x409f2c90" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403b58f0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x403b5b78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x409e8a58" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x409e8900" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x409eaa68" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x409ec740" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x409ed2c0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403b58f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x403b5b78"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x409ed168" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403b58f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x403b5b78"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x409eb010" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x409e83b0" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x409e8f00" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x409ecb40" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x409eb898" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x409eb468" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x409ebcd0" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x409eaed8" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x409eddd8" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403bbbc0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403ba010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x409edc80" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403bbbc0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403ba010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x409ea1a8" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x409ed7a8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403bbbc0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403ba010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x409ec2e0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x409e7680" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409e7528" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x409f3e10" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409f0328" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40a48558" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40a48b30" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40a451f0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40a45bd8" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40a28ca0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40a45700" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40a441c8" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40a434e8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40a439e8" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40a3c8c0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a40200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a3c768" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a40200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40a3d550" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40a3dc10" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a40200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a3dab8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a40200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40a3c1d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40a40200"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40a4aee0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40a49360" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40a497e0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40a69070" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40a69d60" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a68230" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40a49c08" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a68970" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40a68818" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40a4aab8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40a694f0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40a69918" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40a814d8" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40ad11c8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ad11c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40ad1818" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4036f748"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ad11c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40ad16c0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ad11c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40af33c8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40af33c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40af3530" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40af3530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40af3a18" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40af3530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40af2510" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40af2010" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40af2910" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40ad63b8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ad63b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40ad6520" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad6520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40af7810" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad6520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40ad54d0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40af71c8" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad6520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad6520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40ad5e48" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad6520"/></type-var>
          </variable>
          <variable name="dt" ref="0x40af7068" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad6520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40ad5940" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40af7ca0" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad6520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40ad6b50" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad6520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40ad69f8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ad6520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40ad5070" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x40affbb8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c2010"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403c2238"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40afa1a8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403cc040"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403cc268"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40afc6e0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c7900"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403c7b28"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40afcce8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c7900"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403c7b28"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40afcb90" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c7900"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403c7b28"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40afa7b0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403cc040"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403cc268"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40afa658" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403cc040"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x403cc268"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40afc228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c2010"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403c2238"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40afc0d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c2010"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x403c2238"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x40b17ce8" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x40b161c8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x40b178d0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40b16688" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40b1add0" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c81a8"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x403c83d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40b173f0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c81a8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403c83d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40b17298" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c81a8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403c83d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40afe5b0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40afe5b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40b1b4f0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40af8498" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40afeaa8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40afe5b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40af88a0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40b1b950" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40af8058" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40afe5b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40afeed8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40afe5b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40af8ca8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b1b0c8" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b08bd8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b08bd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40b01438" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40b02b08" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b030f8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b08bd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40b019c8" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40b01870" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40b01e58" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b03ec0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40b03aa0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40b01010" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b03670" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b08bd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b03518" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b08bd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b022e8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b026e0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40bd38e0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40bd2168" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40bd3d50" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x405b3370"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40bd33f0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x405b3370"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40bd3088" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x405b3370"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40bd3290" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405b35d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40c01780" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403dbb10"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403dbd38"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x40c02188" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403cde80"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403d40c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c02030" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403cde80"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403d40c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40c02c68" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403dc5e8"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403dc810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x40bdfa80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c9e20"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403d0068"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40c012c8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403dc5e8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403dc810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40c01170" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403dc5e8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403dc810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40c01d90" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403dbb10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403dbd38"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40c01c38" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403dbb10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403dbd38"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x40c044e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403d34c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403d36e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x40c04010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403cde80"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403d40c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x40c04b28" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c9e20"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403d0068"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c049d0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403c9e20"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x403d0068"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x40c027a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403d34c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403d36e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c02650" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403d34c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403d36e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40bff010" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40bff010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40bfcb20" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40bfc9c8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40bfc138" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40bff508" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40bff010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40bfe088" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40bff010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40bfff00" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40bff010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40bfe4c8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40bfc598" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403646e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40bffa80" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40bff010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40bff928" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40bff010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40bfe8d0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40bfecc8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensAct" loc="13:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
      <documentation loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <function command="" provided="0" name="reqSensor" ref="0x40d113c0" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqSource" ref="0x40d11088" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="id" ref="0x40d11260" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readSensor" ref="0x40d0f168" loc="22:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40d0f010" loc="22:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setActuator" ref="0x40d0f898" loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40d0f548" loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40d0f738" loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="Ready" ref="0x40d11b38" loc="19:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqSource" ref="0x40d117b0" loc="19:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="codeEvt_id" ref="0x40d119d8" loc="19:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reqStreamSensor" ref="0x40d0edb8" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqSource" ref="0x40d0e230" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="id" ref="0x40d0e408" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40d0e618" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x40d0e820" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400581e8"/></typename>
            </type-int>
          </variable>
          <variable name="usPeriod" ref="0x40d0ea48" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40058848"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x40d0ec38" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDatap" ref="0x40d0fdc8" loc="27:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40d0fc50" loc="27:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40057b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>

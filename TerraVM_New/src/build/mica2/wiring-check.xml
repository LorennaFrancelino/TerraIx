<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:TerraVMAppC.nc">
      <from><interface-ref name="BSBoot" scoped="" ref="0x404b3550"/></from>
      <to><interface-ref name="BSBoot" scoped="" ref="0x405be8e8"/></to>
    </wire>
    <wire loc="31:BasicServicesC.nc">
      <from><interface-ref name="BSBoot" scoped="" ref="0x405be8e8"/></from>
      <to><interface-ref name="BSBoot" scoped="" ref="0x407c4010"/></to>
    </wire>
    <wire loc="21:TerraVMAppC.nc">
      <from><interface-ref name="BSUpload" scoped="" ref="0x404ad010"/></from>
      <to><interface-ref name="BSUpload" scoped="" ref="0x40653c08"/></to>
    </wire>
    <wire loc="34:BasicServicesC.nc">
      <from><interface-ref name="BSUpload" scoped="" ref="0x40653c08"/></from>
      <to><interface-ref name="BSUpload" scoped="" ref="0x407c3388"/></to>
    </wire>
    <wire loc="22:TerraVMAppC.nc">
      <from><interface-ref name="BSTimerVM" scoped="" ref="0x404d6910"/></from>
      <to><interface-ref name="BSTimerVM" scoped="" ref="0x405bece8"/></to>
    </wire>
    <wire loc="32:BasicServicesC.nc">
      <from><interface-ref name="BSTimerVM" scoped="" ref="0x405bece8"/></from>
      <to><interface-ref name="BSTimerVM" scoped="" ref="0x407c4410"/></to>
    </wire>
    <wire loc="23:TerraVMAppC.nc">
      <from><interface-ref name="BSTimerAsync" scoped="" ref="0x404ce0e0"/></from>
      <to><interface-ref name="BSTimerAsync" scoped="" ref="0x406534f8"/></to>
    </wire>
    <wire loc="33:BasicServicesC.nc">
      <from><interface-ref name="BSTimerAsync" scoped="" ref="0x406534f8"/></from>
      <to><interface-ref name="BSTimerAsync" scoped="" ref="0x407c4bb0"/></to>
    </wire>
    <wire loc="26:TerraVMAppC.nc">
      <from><interface-ref name="VMCustom" scoped="" ref="0x404cb438"/></from>
      <to><interface-ref name="VMCustom" scoped="" ref="0x40d8e350"/></to>
    </wire>
    <wire loc="14:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="VMCustom" scoped="" ref="0x40d8e350"/></from>
      <to><interface-ref name="VM" scoped="" ref="0x40dace10"/></to>
    </wire>
    <wire loc="29:TerraVMAppC.nc">
      <from><interface-ref name="evtQ" scoped="" ref="0x404d15d0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40f62058"/></to>
    </wire>
    <wire loc="60:TerraVMC.nc">
      <from><interface-ref name="procEvent" scoped="" ref="0x404d3cd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:BasicServicesC.nc">
      <from><interface-ref name="BSRadio" scoped="" ref="0x4065cb38"/></from>
      <to><interface-ref name="BSRadio" scoped="" ref="0x407c3c48"/></to>
    </wire>
    <wire loc="24:BasicServicesC.nc">
      <from><interface-ref name="TOSBoot" scoped="" ref="0x407c24a8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x406518a0"/></to>
    </wire>
    <wire loc="72:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x406518a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x407b5040"/></to>
    </wire>
    <wire loc="38:BasicServicesC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x407c1010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4089dbf0"/></to>
    </wire>
    <wire loc="23:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4089dbf0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40897d00"/></to>
    </wire>
    <wire loc="39:BasicServicesC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x407cc1f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40898040"/></to>
    </wire>
    <wire loc="29:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40898040"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408a91a8"/></to>
    </wire>
    <wire loc="40:BasicServicesC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407d83c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40899920"/></to>
    </wire>
    <wire loc="28:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40899920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408aaa00"/></to>
    </wire>
    <wire loc="41:BasicServicesC.nc">
      <from><interface-ref name="RadioAck" scoped="" ref="0x407c0088"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40898cf8"/></to>
    </wire>
    <wire loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40898cf8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a9e60"/></to>
    </wire>
    <wire loc="42:BasicServicesC.nc">
      <from><interface-ref name="RadioSender" scoped="" ref="0x407e8b50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4089a550"/></to>
    </wire>
    <wire loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4089a550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408ac630"/></to>
    </wire>
    <wire loc="43:BasicServicesC.nc">
      <from><interface-ref name="AMAux" scoped="" ref="0x407e1420"/></from>
      <to><interface-ref name="AMAux" scoped="" ref="0x40897268"/></to>
    </wire>
    <wire loc="33:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="AMAux" scoped="" ref="0x40897268"/></from>
      <to><interface-ref name="AMAux" scoped="" ref="0x40d3f570"/></to>
    </wire>
    <wire loc="47:BasicServicesC.nc">
      <from><interface-ref name="RadioReceiver" scoped="" ref="0x407d6100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4089af10"/></to>
    </wire>
    <wire loc="26:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4089af10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408aa010"/></to>
    </wire>
    <wire loc="67:BasicServicesC.nc">
      <from><interface-ref name="BM" scoped="" ref="0x407f29f0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x40d356c0"/></to>
    </wire>
    <wire loc="74:BasicServicesC.nc">
      <from><interface-ref name="inQ" scoped="" ref="0x407ed8e0"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x40d71ed0"/></to>
    </wire>
    <wire loc="18:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <from><interface-ref name="dataQueue" scoped="" ref="0x40d71ed0"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x411b4240"/></to>
    </wire>
    <wire loc="75:BasicServicesC.nc">
      <from><interface-ref name="outQ" scoped="" ref="0x407e34a0"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x40d84ec0"/></to>
    </wire>
    <wire loc="18:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <from><interface-ref name="dataQueue" scoped="" ref="0x40d84ec0"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x411a6360"/></to>
    </wire>
    <wire loc="85:BasicServicesC.nc">
      <from><interface-ref name="TimerVM" scoped="" ref="0x407fcc10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d81980"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d81980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:BasicServicesC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x407fa010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d7e768"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d7e768"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:BasicServicesC.nc">
      <from><interface-ref name="sendTimer" scoped="" ref="0x407f83a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d7a5c8"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d7a5c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:BasicServicesC.nc">
      <from><interface-ref name="ProgReqTimer" scoped="" ref="0x407f5720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d763b8"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d763b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:BasicServicesC.nc">
      <from><interface-ref name="SendDataFullTimer" scoped="" ref="0x40809ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d9f1c8"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d9f1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:BasicServicesC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40805d60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b696e0"/></to>
    </wire>
    <wire loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40b696e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b651d0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406684f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412a23c8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406684f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411f3208"/></to>
    </wire>
    <wire loc="53:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406684f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b7a938"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406684f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b663d8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406684f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4114bca0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406684f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409094e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406684f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a077a8"/></to>
    </wire>
    <wire loc="67:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x407b53d8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40404010"/></to>
    </wire>
    <wire loc="53:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40404010"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4047adf0"/></to>
    </wire>
    <wire loc="68:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407b59a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40668de8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40668de8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40665968"/></to>
    </wire>
    <wire loc="71:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x407b5da8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x406684f0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40672ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cfc630"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40672ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a8a260"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40672740"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x407b1a00"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40670168"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407b1650"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40665d48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f68c88"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40665d48"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4066d1b0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4066d1b0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4067a130"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4066d1b0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40683140"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4066d580"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40672ea0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40683140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x406ab130"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40683140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x406c60b0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x406767a8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x406e14b0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x406e14b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40726988"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40679208"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4066d580"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="CHP_OUT" scoped="" ref="0x406b5ec0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x406e08e0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x406e08e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40725c88"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PALE" scoped="" ref="0x406a98d0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x406f5c08"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x406f5c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40745790"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PCLK" scoped="" ref="0x406b62e0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x406f30a0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x406f30a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40744ac8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PDATA" scoped="" ref="0x406b6cd0"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x406f3a98"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x406f3a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x407434f0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiSck" scoped="" ref="0x406c0f10"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x406de750"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x406de750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40731790"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMiso" scoped="" ref="0x406c5930"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x406ddc08"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x406ddc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40730ac8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMosi" scoped="" ref="0x406c43d8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x406dd210"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x406dd210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40730170"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="OC1C" scoped="" ref="0x406c4dc0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x406ec590"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x406ec590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4072d170"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x406fa750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40771590"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x406e6d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40748a80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40748a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410343b0"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x406f02f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x407527d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x407527d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4106c538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x406fd4b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4074ae48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4074ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410a4228"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40725c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f93538"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x406fe0a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4074bb80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4074bb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410a8de0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x406dfce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40732dc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40732dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fce418"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x406ea4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4073b9e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4073b9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ffe228"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40745790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4102f228"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x406ee210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x407504f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x407504f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41067538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x406e3670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40728cf8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40728cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9b0b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40730ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc9228"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x406e82f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40739790"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40739790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ff90b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x407434f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410290b0"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x406fb2f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4075cac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4075cac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4109e0b0"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x406f8830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4077c538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x406f2ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4073f4f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4073f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4106f010"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40726988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f96010"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x406dbb18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4072e7d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4072e7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc40b0"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x406f93d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40782a88"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x406eb010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4073c6f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4073c6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41005de8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x406e5750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40747410"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40747410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41033d70"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x406f0ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40751170"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40751170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4106a010"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x406fdea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x407497d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x407497d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410a2c08"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x406df2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x407236b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x407236b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f91010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40731790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcdde0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x406eaea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4073a410"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4073a410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ffdc08"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x406f4670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40744170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40744170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4102ec08"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x406eec08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40750e48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40750e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41065010"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x406e20a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x407276b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x407276b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9aa88"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x406dc670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4072f4f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4072f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc8c08"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x406e8ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40738170"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40738170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ff8a88"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x406fbce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4075b4f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4075b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4109da88"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x406e6210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40748128"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40748128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41036938"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x406f18e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4073fe48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4073fe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4106e9e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x406fea98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4074a4f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4074a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410a67f8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x406f72f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4078ea88"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x406e1ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40725330"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40725330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f959e8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4072d170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc2a88"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x406ed670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4074b228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4074b228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410a9418"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x406eba08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4073b090"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4073b090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410007f8"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x406f5210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40747d68"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40747d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410317f8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x406ef750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40751ac8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40751ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410699e8"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x406fc8e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4075c170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4075c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410a06c0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40681bb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x407283a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x407283a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f9d6c0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40730170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcb7f8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x406e98e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4073ad68"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4073ad68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ffb6c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40744ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4102b6c0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x406f9dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4077f010"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x406f24b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40740b00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40740b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41071538"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x406e7750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40738ac8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40738ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ff6538"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x406e2a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40726030"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40726030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f98538"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x406db120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4072fe48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4072fe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc66c0"/></to>
    </wire>
    <wire loc="54:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40480670"/></to>
    </wire>
    <wire loc="55:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4047d310"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40403bd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404948a8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40be9010"/></to>
    </wire>
    <wire loc="141:BasicServicesP.nc">
      <from><interface-ref name="ProgReqTimerTask" scoped="" ref="0x40813e48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="1055:BasicServicesP.nc">
      <from><interface-ref name="sendNextMsg" scoped="" ref="0x40878e30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="902:BasicServicesP.nc">
      <from><interface-ref name="procInputEvent" scoped="" ref="0x4085a040"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="1008:BasicServicesP.nc">
      <from><interface-ref name="sendMessage" scoped="" ref="0x4087c248"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40897d00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408b2df0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408ac630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408b0710"/></to>
    </wire>
    <wire loc="27:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408995c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408aa6a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408aa6a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408af798"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408aaa00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ae7b0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408aa010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408af100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a9e60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408aef28"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408a91a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408afb08"/></to>
    </wire>
    <wire loc="57:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <from><interface-ref name="RadioAux" scoped="" ref="0x40d3fa98"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x40a263f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408b2df0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408bf8e8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408b0710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408c0a78"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408af798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408d2b10"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408ae7b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408f2920"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408a61a0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408c2980"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408c2980"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40907100"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408b2068"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408ba890"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408ba890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408ee790"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408af100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408d2478"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408aef28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40906d90"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408afb08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408d2e80"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408a27c0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408c33a0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408c33a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40904af8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408bf8e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40909878"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40904af8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40975488"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408f2920"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4097a870"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40907100"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40978a20"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x408ba228"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40902308"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40902308"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40974c38"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408ee790"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x409087f8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40906d90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40979da8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408c2328"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408ee3c8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408ee3c8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409783c8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408cca18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408bfed0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408bfed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4097bd98"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408d0220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f25c8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408f25c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4097a518"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x408d0f20"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x40c69bd8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408d05d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408f2920"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaControl" scoped="" ref="0x408f0ce8"/></from>
      <to><interface-ref name="CsmaControl" scoped="" ref="0x40909ea0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x409068b8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x40908350"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x4092b1c0"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x40a263f8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40929890"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b696e0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x40929378"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x40a07b48"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="WakeupTimer" scoped="" ref="0x40929e20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a14b60"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a14b60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadio" scoped="" ref="0x40919af8"/></from>
      <to><interface-ref name="ByteRadio" scoped="" ref="0x40979010"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioInit" scoped="" ref="0x40908ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097b5f0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioControl" scoped="" ref="0x4091e2f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4097b970"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x4098e308"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x40a263f8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x4098d250"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x40a662b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x40a662b0"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x406c03f8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x4098b330"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x40c69bd8"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiRx" scoped="" ref="0x4098c4a0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x40a05028"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x4098dd70"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x40a07b48"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiNoiseFloor" scoped="" ref="0x409223d0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x40a05028"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiCheckChannel" scoped="" ref="0x40926178"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x40a05028"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiPulseCheck" scoped="" ref="0x40926ef0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x40a05028"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="cancelRssi" scoped="" ref="0x4093bd40"/></from>
      <to><function-ref name="cancel" scoped="" ref="0x40a05e10"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40924300"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40c6fd00"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ActualRssi" scoped="" ref="0x40a1d8b8"/></from>
      <to><interface-ref name="RssiAdc" scoped="" ref="0x40a68e98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiAdc" scoped="" ref="0x40a68e98"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40a64de8"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a1d068"/></from>
      <to><interface-ref name="RssiResource" scoped="" ref="0x40a67b40"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40a67b40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a646c0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC" scoped="" ref="0x40a25388"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x40a66d28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000" scoped="" ref="0x40a66d28"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x406a8e98"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a25b50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40c6fd00"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c810a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c80010"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c80010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c7d7f0"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x409873c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c826b8"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40987df8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b74418"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b74418"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c51940"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="setWakeupTask" scoped="" ref="0x40938968"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="startStopDone" scoped="" ref="0x40945648"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="sleepCheck" scoped="" ref="0x40955240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="327:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="adjustSquelch" scoped="" ref="0x40953b98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="417:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketSent" scoped="" ref="0x409c0b08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="594:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketReceived" scoped="" ref="0x409de010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40a64de8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40a7b9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a646c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a74178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40b6e9e8"/></from>
      <to><interface-ref name="RssiConfig" scoped="" ref="0x406b58d0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a7a940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40b6e9e8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40a72618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b6eec0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40a79a10"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b5c8c0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40a7b9b0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40b2b598"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b4d218"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a771b8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40b2aab0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a7a940"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40b5b5e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b2c5f8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40b2a238"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40a90bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40a90bd8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40a87aa0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40a8cdb0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40a89040"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a74178"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ae3910"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ae3910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41148170"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40b1e010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40a72618"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40a9e850"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40a8fe78"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40a8fe78"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40ac1aa8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40a88ce8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40672740"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40b1dda8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40a87610"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b1c548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b1f470"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b1f470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41148cb8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40abeec0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4048f8c0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b1f068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411488b0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b1fb08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411473f0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411478b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b1e010"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41147cd8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41149010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x41146f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x411669b8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40b1dda8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41166db0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40b1c230"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41164150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b1c548"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x411647e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b1cbe0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40b421e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40b6ade8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40b668f8"/></to>
    </wire>
    <wire loc="54:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a06bd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b663d8"/></to>
    </wire>
    <wire loc="54:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b76100"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b76100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c2ff00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b7a938"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b72ad0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b72ad0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b86c78"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40c56338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b70f08"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40c33248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40b93258"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40b93258"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40c290c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c78360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40b89da0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40b89da0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c27b70"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c27b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41156eb0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b86c78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41157010"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40c290c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41157448"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x411530c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40bd5cb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bd5cb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40bcc7e0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41150278"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40bcf010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40bcf010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40bedaf0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x41150aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40bcf970"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40bcf970"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40bec4f8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4114e4f0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40bcd4f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40bcd4f8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40be9470"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40c32bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40c53560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40d0cae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c7f9f8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c7f9f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40cff320"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d11568"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c793e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c793e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c8fb08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40c97360"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40cb2e78"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40c9c190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40cb1b88"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40c923d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40cafa80"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40c923d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40cac6a0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40c923d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40ca9340"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x40ca8e98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40bcf010"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40cfca18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c793e0"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d225c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <from><interface-ref name="dataReady" scoped="" ref="0x411b4d78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <from><interface-ref name="dataReady" scoped="" ref="0x411a6e98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d9b0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="BSRadio" scoped="" ref="0x40dabb58"/></from>
      <to><interface-ref name="BSRadio" scoped="" ref="0x4065cb38"/></to>
    </wire>
    <wire loc="17:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40da90a0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b696e0"/></to>
    </wire>
    <wire loc="20:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="SA" scoped="" ref="0x40da4880"/></from>
      <to><interface-ref name="SAinterface" scoped="" ref="0x40d8bd58"/></to>
    </wire>
    <wire loc="68:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="SAinterface" scoped="" ref="0x40d8bd58"/></from>
      <to><interface-ref name="SA" scoped="" ref="0x40e0bb78"/></to>
    </wire>
    <wire loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <from><interface-ref name="usrDataQ" scoped="" ref="0x40da95a0"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x40f64910"/></to>
    </wire>
    <wire loc="18:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <from><interface-ref name="dataQueue" scoped="" ref="0x40f64910"/></from>
      <to><interface-ref name="dataQueue" scoped="" ref="0x412dd060"/></to>
    </wire>
    <wire loc="315:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <from><interface-ref name="BCRadio_receive" scoped="" ref="0x40df0cb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="S_TEMP" scoped="" ref="0x40e07188"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e52cb0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2/tos/sensorboards/mda100/TempC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e52cb0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e53ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="S_PHOTO" scoped="" ref="0x40e07e80"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e548e0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e548e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f066b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="S_VOLT" scoped="" ref="0x40e06b80"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f04360"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f04360"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x412e59e8"/></to>
    </wire>
    <wire loc="69:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="A_LEDS" scoped="" ref="0x40e083c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f27c38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f27c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f47358"/></to>
    </wire>
    <wire loc="74:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="A_PIN1" scoped="" ref="0x40e047f0"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x40eb6050"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x40eb6050"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x406e98e0"/></to>
    </wire>
    <wire loc="75:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="A_PIN2" scoped="" ref="0x40e03230"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x40eb6a28"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x40eb6a28"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x406e82f0"/></to>
    </wire>
    <wire loc="82:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="A_INT1" scoped="" ref="0x40dffbd0"/></from>
      <to><interface-ref name="Int0" scoped="" ref="0x40ea7aa0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40ea7aa0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40ee63b0"/></to>
    </wire>
    <wire loc="83:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <from><interface-ref name="A_INT2" scoped="" ref="0x40e02528"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x40ecd338"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40ecd338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40eda538"/></to>
    </wire>
    <wire loc="248:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <from><interface-ref name="sigInt1" scoped="" ref="0x40e2e388"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="249:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <from><interface-ref name="sigInt2" scoped="" ref="0x40e2d558"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e53ce0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f10580"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40f0d2a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e4cb58"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mda100/cb/TempImplP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e4cb58"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e8d118"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f0dec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e4c100"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mda100/cb/TempImplP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e4c100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e8f940"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e8d118"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41206538"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e8f940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411c57a8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mda100/cb/TempImplP.nc">
      <from><interface-ref name="AdcConfig" scoped="" ref="0x40e8dcf0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f129c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoTempConfigC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f129c0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f0f538"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mda100/cb/TempImplP.nc">
      <from><interface-ref name="EnablePin" scoped="" ref="0x40e8c250"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x40e8b7e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x40e8b7e8"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x406eb010"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411c57a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411f16e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41208de0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4120a998"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4120a998"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411f0908"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41209e60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41207e28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41208748"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4120a300"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4120a300"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411f0270"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x412014a0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x411fe108"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x411fe108"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40a7b9b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41205860"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411fb130"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x411fb130"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="AnalogDeviceResource" scoped="" ref="0x41205138"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411ff9c8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411ff9c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a74178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x411fecd0"/></from>
      <to><interface-ref name="AdcConfig" scoped="" ref="0x40e8dcf0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="EnablePin" scoped="" ref="0x41202a48"/></from>
      <to><interface-ref name="EnablePin" scoped="" ref="0x40e8c250"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x411c5ee8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411f1e28"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411f0dc8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4120ae48"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x411ef250"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x411f3540"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x411ee438"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41211230"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41209e60"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x412117e8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x41208430"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41211b00"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41208748"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41210230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41208de0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x41210668"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x41210aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <from><interface-ref name="readDoneTask" scoped="" ref="0x41200090"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x412004c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a7a940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x411fecd0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40a72618"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x411fd230"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x40eb00c0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40eeeae0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x40eabd00"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x40ea84b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x40eb7650"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x406eaea8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x40eb5490"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x406e8ce8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x40eaa8b8"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x40ea5060"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x40ea9090"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x40ea5800"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40eb32e0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x406ef750"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x40eaca30"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x406f5210"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x40eb81f0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x406eba08"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x40eb0ea0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40f1bd48"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x40eaa118"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x40ea8888"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x40eac010"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x406e5750"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x40eb5e68"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x406e7750"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x40eae8e0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40ef6a28"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x40ea9560"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x40ea5bd0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40eb3cc8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x406ee210"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x40eb8bc8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x406ea4b0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x40eaa4e8"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x40ea8c58"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x40eaac88"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x40ea5430"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40eb4860"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x406f0ce8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x40eb07b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40eecc30"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x40eaf588"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x406f4670"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x40ea9930"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x40ea4010"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40eb2740"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x406eec08"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40ef5050"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x40eccd78"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x40eccd78"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40ed3a08"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40eed190"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x40ecb6b8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x40ecb6b8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40f03c70"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40eeb270"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x40eca010"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x40eca010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40f01e68"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40f1a358"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x40eca890"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x40eca890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40efd050"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40ecdbb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40ed86c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40ecc4f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40ed57a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40ee6b68"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x40ec43d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40edacf0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40ec4850"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40ed8e78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x40ec4cc8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40ed4010"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40ec61a0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40ed2270"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x40ec6618"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40f02438"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40ec6a90"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40f00630"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x40ec6f08"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40efd808"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40ec5390"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoTempConfigC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x40f0fb38"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x40eaa118"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f066b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f330a8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40f33da8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f325f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoImplP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f325f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f2f6d8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f2a9d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f35b00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoImplP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f35b00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f30f10"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f2f6d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x412756f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f30f10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4127b820"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoImplP.nc">
      <from><interface-ref name="AdcConfig" scoped="" ref="0x40f2e348"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f129c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoImplP.nc">
      <from><interface-ref name="EnablePin" scoped="" ref="0x40f2e840"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x40eb32e0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4127b820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a1860"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41276010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4127aab0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4127aab0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x412a0ab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41278030"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41275030"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41278900"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4127a418"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4127a418"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412a0418"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x41270660"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x4126d2c8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x4126d2c8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40a7b9b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41274a70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4126b2c0"/></to>
    </wire>
    <wire loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4126b2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="AnalogDeviceResource" scoped="" ref="0x41274348"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4126eb88"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4126eb88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a74178"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4126de90"/></from>
      <to><interface-ref name="AdcConfig" scoped="" ref="0x40f2e348"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <from><interface-ref name="EnablePin" scoped="" ref="0x41272c50"/></from>
      <to><interface-ref name="EnablePin" scoped="" ref="0x40f2e840"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4127a010"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x412a0010"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4129e010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41279010"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4129e438"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x412a2700"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4129d6d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412c2660"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41278030"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x412c2c18"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x412785e8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412c1010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41278900"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x412c16a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41276010"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x412c1ae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x412c1f18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <from><interface-ref name="readDoneTask" scoped="" ref="0x4126f250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x4126f688"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a7a940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4126de90"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40a72618"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4126c380"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x412e59e8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40a79a10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x412e45a8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f1e830"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a7a940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x412e45a8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a771b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a74178"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40a72618"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x412e4a80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40f68c88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f47010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40f46030"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40f49e30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40f49e30"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x406e20a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40f46a18"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40f69880"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40f69880"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x406e3670"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40f454a0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40f68300"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40f68300"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40681bb0"/></to>
    </wire>
    <wire loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <from><interface-ref name="dataReady" scoped="" ref="0x412ddb98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="TerraVMC" loc="14:TerraVMC.nc" safe="">
      <module/>
    </component>
    <component qname="BasicServicesC" loc="15:BasicServicesC.nc">
      <documentation loc="1:BasicServices.h">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="MainC" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <documentation loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformP.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000InitP" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
        <short>&#10; Hardware initialisation for the CC1000 radio.</short>
        <long>&#10; Hardware initialisation for the CC1000 radio. This component is always&#10; included even if the radio is not used.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000P" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC1000SpiP" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc" safe="">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
        <short>&#10; Low-level functions to access the CC1000 bus.</short>
        <long>&#10; Low-level functions to access the CC1000 bus. Built using the mica2&#10; hardware SPI.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/branco/gitspace/Terra/TerraVM/src/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BasicServicesP" loc="14:BasicServicesP.nc">
      <documentation loc="1:BasicServices.h">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="TerraActiveMessageC" loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="57:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the mica2 platform.</short>
        <long>&#10; The Active Message layer on the mica2 platform. This is a naming wrapper&#10; around the CC1000 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer for the CC1000 radio.</short>
        <long>&#10;&#10; The Active Message layer for the CC1000 radio. This configuration&#10; just layers the AM dispatch (CC1000ActiveMessageM) on top of the&#10; underlying CC1000 radio packet (CC1000CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group).&#10; &#10; @author Philip Levis&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageP" loc="49:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc" safe="">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
        <short>&#10; Implementation component for CC1000ActiveMessageC.</short>
        <long>&#10; Implementation component for CC1000ActiveMessageC.&#10;&#10; @author Philip Levis&#10; @date June 19 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC" loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
        <short>&#10; A low-power-listening CC1000 radio stack.</short>
        <long>&#10; A low-power-listening CC1000 radio stack.&#10;&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). &#10;&#10; CC1000RssiP (RSSI sharing), CC1000SquelchP (noise-floor estimation)&#10; and CC1000ControlP (radio configuration) provide supporting roles.&#10;&#10; This code has some degree of platform-independence, via the HplCC1000,&#10; RssiAdc and HplCC1000Spi interfaces which must be provided by the&#10; platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000CsmaP" loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the CSMA and low-power listening logic. Actual&#10; packet transmission and reception is in SendReceive.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SendReceiveP" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the send and receive logic for the CC1000 radio.&#10; It does not do any media-access control. It requests the channel&#10; via the ready-to-send event (rts) and starts transmission on reception&#10; of the clear-to-send command (cts). It listens for packets if the&#10; listen() command is called, and stops listening when off() is called.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000RssiP" loc="55:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc">
        <short>&#10;   RSSI fun.</short>
        <long>&#10;   RSSI fun. It's used for lots of things, and a request to read it&#10;   for one purpose may have to be discarded if conditions change. For&#10;   example, if we've initiated a noise-floor measure, but start &#10;   receiving a packet, we have to:&#60;ul>&#10;   &#60;li>cancel the noise-floor measure (we don't know if the value will&#10;     reflect the received packet or the previous idle state)&#10;   &#60;li>start an RSSI measurement so that we can report signal strength&#10;     to the application&#10;   &#60;/ul>&#60;p>&#10;   This module hides the complexities of cancellation from the rest of&#10;   the stack.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SquelchP" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SquelchP.nc" safe="">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SquelchP.nc">
        <short>&#10; Clear threshold estimation based on RSSI measurements.</short>
        <long>&#10; Clear threshold estimation based on RSSI measurements.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000ControlP" loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc" safe="">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc">
        <short>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.</short>
        <long>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.  It exports a custom interface to control CC1000&#10; operation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000C" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
        <short>&#10; HPL for the CC1000 radio, for the mica2 platform.</short>
        <long>&#10; HPL for the CC1000 radio, for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000C.RssiChannel" loc="21(HplCC1000C.RssiChannel):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.TimerMilliC" loc="44(CC1000CsmaRadioC.TimerMilliC):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b8c8f8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="TOne" ref="0x40476be0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="TOne" ref="0x40476be0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x4047c148"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.CounterToLocalTimeC" loc="46(CC1000CsmaRadioC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.DummyTimer" loc="44(CC1000CsmaRadioC.DummyTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AMAuxC" loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/AMAuxC.nc">
      <module/>
    </component>
    <component qname="BasicServicesC.Bitmap" loc="37(BasicServicesC.Bitmap):/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
      <documentation loc="32:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
        <short>&#10; WDVM project: Adapted to check if all bits are set&#10; </short>
        <long>&#10; WDVM project: Adapted to check if all bits are set&#10; @author A.Branco &#60;branco@inf.puc-rio.br>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="vmBitVectorC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BasicServicesC.inQueue" loc="12(BasicServicesC.inQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
        <short>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.</short>
        <long>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.&#10; &#10; @param dataType - Data structure type&#10; @param qLength  - Queue length&#10; @param qId      - Unique identifier (suggest to use '(char)unique(&#34;dataQueueC&#34;)' &#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="dataQueueC"/>
        <arguments>
          <type-tag size="I:34" alignment="I:1"><nx_struct-ref name="GenericData" ref="0x404c3320"/>
            <typename><typedef-ref name="GenericData_t" ref="0x404c1068"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.inQueue.dQueue" loc="4(BasicServicesC.inQueue.dQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <instance number="0">
        <component-ref qname="dataQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40d725d8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BasicServicesC.outQueue" loc="12(BasicServicesC.outQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
        <short>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.</short>
        <long>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.&#10; &#10; @param dataType - Data structure type&#10; @param qLength  - Queue length&#10; @param qId      - Unique identifier (suggest to use '(char)unique(&#34;dataQueueC&#34;)' &#10; &#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="dataQueueC"/>
        <arguments>
          <type-tag size="I:34" alignment="I:1"><nx_struct-ref name="GenericData" ref="0x404c3320"/>
            <typename><typedef-ref name="GenericData_t" ref="0x404c1068"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.outQueue.dQueue" loc="4(BasicServicesC.outQueue.dQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <instance number="1">
        <component-ref qname="dataQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40d725d8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BasicServicesC.TimerVM" loc="44(BasicServicesC.TimerVM):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.TimerAsync" loc="44(BasicServicesC.TimerAsync):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.sendTimer" loc="44(BasicServicesC.sendTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.ProgReqTimer" loc="44(BasicServicesC.ProgReqTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.SendDataFullTimer" loc="44(BasicServicesC.SendDataFullTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BasicServicesC.DataReqTimer" loc="44(BasicServicesC.DataReqTimer):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VMCustomC" loc="8:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <configuration/>
    </component>
    <component qname="VMCustomP" loc="12:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <documentation loc="1:./BasicServices.h">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="SensActC" loc="14:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <documentation loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
        <short>*********************************************&#10; wdvm - WSNDyn virtual machine project&#10; July, 2012&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="SensActP" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <documentation loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
        <short>*********************************************&#10; wdvm - WSNDyn virtual machine project&#10; July, 2012&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="SensActC.S_TEMP" loc="18(SensActC.S_TEMP):/opt/tinyos-2.1.2/tos/sensorboards/mda100/TempC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedTempDeviceP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedTempDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TempImplP" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mda100/cb/TempImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TempImplP.SharedAnalogDeviceC" loc="37(TempImplP.SharedAnalogDeviceC):/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SharedAnalogDeviceC"/>
        <arguments>
          <value cst="S:mda100.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TempImplP.SharedAnalogDeviceC.Arbiter" loc="89(TempImplP.SharedAnalogDeviceC.Arbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="U:">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TempImplP.SharedAnalogDeviceC.Arbiter.Queue" loc="42(TempImplP.SharedAnalogDeviceC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter" loc="52(TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TempImplP.SharedAnalogDeviceC.PowerManager" loc="67(TempImplP.SharedAnalogDeviceC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempImplP.SharedAnalogDeviceC.PowerManager.PowerManager" loc="58(TempImplP.SharedAnalogDeviceC.PowerManager.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TempImplP.SharedAnalogDeviceC.AnalogDevice" loc="37(TempImplP.SharedAnalogDeviceC.AnalogDevice):/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SharedAnalogDeviceP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TempImplP.SharedAnalogDeviceC.Adc" loc="21(TempImplP.SharedAnalogDeviceC.Adc):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempImplP.SharedAnalogDeviceC.TimerMilliC" loc="44(TempImplP.SharedAnalogDeviceC.TimerMilliC):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempConfigC" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoTempConfigC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoTempConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempConfigP" loc="14:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoTempConfigP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoTempConfigP.nc">
        <short>&#10; MDA100 photo and temp sensor ADC configuration.</short>
        <long>&#10; MDA100 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArbitratedTempDeviceP.ArbitrateRead" loc="23(ArbitratedTempDeviceP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensActC.S_PHOTO" loc="18(SensActC.S_PHOTO):/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoImplP" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC" loc="37(PhotoImplP.SharedAnalogDeviceC):/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SharedAnalogDeviceC"/>
        <arguments>
          <value cst="S:mda100.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Arbiter" loc="89(PhotoImplP.SharedAnalogDeviceC.Arbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="U:">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue" loc="42(PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter" loc="52(PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.PowerManager" loc="67(PhotoImplP.SharedAnalogDeviceC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager" loc="58(PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice" loc="37(PhotoImplP.SharedAnalogDeviceC.AnalogDevice):/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SharedAnalogDeviceP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Adc" loc="21(PhotoImplP.SharedAnalogDeviceC.Adc):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.TimerMilliC" loc="44(PhotoImplP.SharedAnalogDeviceC.TimerMilliC):/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensActC.S_VOLT" loc="39(SensActC.S_VOLT):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensActC.S_VOLT.AdcReadClientC" loc="21(SensActC.S_VOLT.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VMCustomC.usrDataQ" loc="12(VMCustomC.usrDataQ):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
        <short>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.</short>
        <long>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.&#10; &#10; @param dataType - Data structure type&#10; @param qLength  - Queue length&#10; @param qId      - Unique identifier (suggest to use '(char)unique(&#34;dataQueueC&#34;)' &#10; &#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="dataQueueC"/>
        <arguments>
          <type-tag size="I:18" alignment="I:1"><nx_struct-ref name="qData" ref="0x40dafb30"/>
            <typename><typedef-ref name="qData_t" ref="0x40dae2c0"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="VMCustomC.usrDataQ.dQueue" loc="4(VMCustomC.usrDataQ.dQueue):/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <instance number="2">
        <component-ref qname="dataQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40d725d8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TerraVMAppC.evtQ" loc="42(TerraVMAppC.evtQ):/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="evtData" ref="0x404ae1f8"/>
            <typename><typedef-ref name="evtData_t" ref="0x404ae820"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x407040e8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40704300" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40704518" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x407104e8" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40710710" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40710938" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40710b28" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x407575b0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x407577d8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40757a00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40757bf0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40ae20a8" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40ad85b0" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40ad9cb0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40b2ec88" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40b2ec88"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b8c8f8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b8c8f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b8cab8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40ba5bf8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40ba5bf8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40ba5db8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b71ab8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b71ab8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c2d010" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c2d010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40c2d1f0" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c528e8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c528e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40cfddd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40cfddd8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40cfa010" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40d008e0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40d008e0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40d00d28" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40d00d28"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40c7ed58" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40c7ed58"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40d0b1d8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40d0b1d8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40d0b440" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40d0b440"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40d0b8b0" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40d0b8b0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40d0bb18" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40d0a010" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40d0a010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="vmBitVectorC" loc="37:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc" abstract="">
      <documentation loc="32:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
        <short>&#10; WDVM project: Adapted to check if all bits are set&#10; </short>
        <long>&#10; WDVM project: Adapted to check if all bits are set&#10; @author A.Branco &#60;branco@inf.puc-rio.br>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x40d368c0" loc="37:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
          <component-ref qname="vmBitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="dataQueueC" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc" abstract="">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
        <short>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.</short>
        <long>&#10; Customized dataQueueC with 'dataReady' to signal a new data in an empty queue.&#10; &#10; @param dataType - Data structure type&#10; @param qLength  - Queue length&#10; @param qId      - Unique identifier (suggest to use '(char)unique(&#34;dataQueueC&#34;)' &#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="dataType" ref="0x40d725d8" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
          <component-ref qname="dataQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40d725d8"/></type-var>
        </typedef>
        <constant name="qLength" ref="0x40d727e0" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
          <component-ref qname="dataQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="qId" ref="0x40d729c0" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
          <component-ref qname="dataQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="dataQueueP" loc="4:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc" abstract="">
      <parameters>
        <typedef name="dataType" ref="0x40d6ff20" loc="4:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
          <component-ref qname="dataQueueP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="dataType" scoped="" ref="0x40d6ff20"/></type-var>
        </typedef>
        <constant name="qLenth" ref="0x40d6c138" loc="4:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
          <component-ref qname="dataQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="qId" ref="0x40d6c318" loc="4:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
          <component-ref qname="dataQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TempC" loc="18:/opt/tinyos-2.1.2/tos/sensorboards/mda100/TempC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SharedAnalogDeviceC" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40e47088" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
          <component-ref qname="SharedAnalogDeviceC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
        <constant name="startup_delay" ref="0x40e472e0" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
          <component-ref qname="SharedAnalogDeviceC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SharedAnalogDeviceP" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
        <constant name="startup_delay" ref="0x40e83188" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
          <component-ref qname="SharedAnalogDeviceP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x40ec7380" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40ec75a8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x40ec77d0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40ec79c0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoC" loc="18:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mda100/mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="QueueC" loc="42:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40f5f058" loc="42:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40f5f058"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40f5f280" loc="42:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="procEvent" ref="0x404d3cd0" loc="60:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="procEvent" scoped="" ref="0x404d3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404d3ea8"/>
        <function-ref name="runTask" scoped="" ref="0x404dc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VMCustom" ref="0x404cb438" loc="19:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VMCustom" scoped="" ref="0x404cb438"/></type-interface>
      <instance>
        <interfacedef-ref qname="VMCustom"/>
      </instance>
      <interface-functions>
        <function-ref name="evtError" scoped="" ref="0x404cb610"/>
        <function-ref name="procOutEvt" scoped="" ref="0x404cb6f0"/>
        <function-ref name="setMVal" scoped="" ref="0x404cb7d0"/>
        <function-ref name="getTime" scoped="" ref="0x404cb8b0"/>
        <function-ref name="getRealAddr" scoped="" ref="0x404cb990"/>
        <function-ref name="callFunction" scoped="" ref="0x404cba70"/>
        <function-ref name="reset" scoped="" ref="0x404cbb50"/>
        <function-ref name="push" scoped="" ref="0x404cbc30"/>
        <function-ref name="pop" scoped="" ref="0x404cbd10"/>
        <function-ref name="queueEvt" scoped="" ref="0x404cbdf0"/>
        <function-ref name="getMVal" scoped="" ref="0x404cbed0"/>
        <function-ref name="getHaltedFlag" scoped="" ref="0x404b4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSTimerAsync" ref="0x404ce0e0" loc="23:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerAsync" scoped="" ref="0x404ce0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404ce638"/>
        <function-ref name="fired" scoped="" ref="0x404ce398"/>
        <function-ref name="isRunning" scoped="" ref="0x404ce478"/>
        <function-ref name="startOneShot" scoped="" ref="0x404ce558"/>
        <function-ref name="stop" scoped="" ref="0x404ce2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSUpload" ref="0x404ad010" loc="18:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSUpload" scoped="" ref="0x404ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSUpload"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x404ad728"/>
        <function-ref name="setEnv" scoped="" ref="0x404ad2c8"/>
        <function-ref name="loadSection" scoped="" ref="0x404ad3a8"/>
        <function-ref name="getSection" scoped="" ref="0x404ad488"/>
        <function-ref name="resetMemory" scoped="" ref="0x404ad568"/>
        <function-ref name="start" scoped="" ref="0x404ad648"/>
        <function-ref name="getEnv" scoped="" ref="0x404ad1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSBoot" ref="0x404b3550" loc="17:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSBoot" scoped="" ref="0x404b3550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404b3728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="evtQ" ref="0x404d15d0" loc="21:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="evtQ" scoped="" ref="0x404d15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="evtData" ref="0x404ae1f8"/>
            <typename><typedef-ref name="evtData_t" ref="0x404ae820"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x404c7310"/>
        <function-ref name="enqueue" scoped="" ref="0x404c79f0"/>
        <function-ref name="element" scoped="" ref="0x404c7d40"/>
        <function-ref name="maxSize" scoped="" ref="0x404c70b8"/>
        <function-ref name="dequeue" scoped="" ref="0x404c7680"/>
        <function-ref name="empty" scoped="" ref="0x404d1bf8"/>
        <function-ref name="size" scoped="" ref="0x404d1e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSTimerVM" ref="0x404d6910" loc="22:TerraVMC.nc">
      <component-ref qname="TerraVMC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerVM" scoped="" ref="0x404d6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404d6e68"/>
        <function-ref name="fired" scoped="" ref="0x404d6bc8"/>
        <function-ref name="isRunning" scoped="" ref="0x404d6ca8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404d6d88"/>
        <function-ref name="stop" scoped="" ref="0x404d6ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSRadio" ref="0x4065cb38" loc="20:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSRadio" scoped="" ref="0x4065cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4065cd10"/>
        <function-ref name="receive" scoped="" ref="0x4065cdf0"/>
        <function-ref name="sendDoneAck" scoped="" ref="0x4065ced0"/>
        <function-ref name="source" scoped="" ref="0x40651010"/>
        <function-ref name="sendDone" scoped="" ref="0x406510f0"/>
        <function-ref name="setRFPower" scoped="" ref="0x406511d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSTimerAsync" ref="0x406534f8" loc="18:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerAsync" scoped="" ref="0x406534f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40653a50"/>
        <function-ref name="fired" scoped="" ref="0x406537b0"/>
        <function-ref name="isRunning" scoped="" ref="0x40653890"/>
        <function-ref name="startOneShot" scoped="" ref="0x40653970"/>
        <function-ref name="stop" scoped="" ref="0x406536d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSUpload" ref="0x40653c08" loc="19:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSUpload" scoped="" ref="0x40653c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSUpload"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40652390"/>
        <function-ref name="setEnv" scoped="" ref="0x40653ec0"/>
        <function-ref name="loadSection" scoped="" ref="0x40652010"/>
        <function-ref name="getSection" scoped="" ref="0x406520f0"/>
        <function-ref name="resetMemory" scoped="" ref="0x406521d0"/>
        <function-ref name="start" scoped="" ref="0x406522b0"/>
        <function-ref name="getEnv" scoped="" ref="0x40653de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSBoot" ref="0x405be8e8" loc="16:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSBoot" scoped="" ref="0x405be8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405beac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSTimerVM" ref="0x405bece8" loc="17:BasicServicesC.nc">
      <component-ref qname="BasicServicesC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerVM" scoped="" ref="0x405bece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406532b0"/>
        <function-ref name="fired" scoped="" ref="0x40653010"/>
        <function-ref name="isRunning" scoped="" ref="0x406530f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406531d0"/>
        <function-ref name="stop" scoped="" ref="0x405beec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x406684f0" loc="58:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x406684f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406686c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x406518a0" loc="57:/home/branco/gitspace/Terra/TerraVM/src/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x406518a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40651a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40672ea0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40672ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406650c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40668de8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40668de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40666010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40672740" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40672740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40672918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406729f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40672ad8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40672bb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40672c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40665d48" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40665d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40665f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40665968" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40665968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40665b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40670168" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40670168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40670340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4066d580" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4066d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4066d758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4066d1b0" loc="17:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4066d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4066d388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40679208" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40679208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406793e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x406767a8" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x406767a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40676980"/>
        <function-ref name="isInput" scoped="" ref="0x40676a60"/>
        <function-ref name="toggle" scoped="" ref="0x40676b40"/>
        <function-ref name="isOutput" scoped="" ref="0x40676c20"/>
        <function-ref name="get" scoped="" ref="0x40676d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40676de0"/>
        <function-ref name="set" scoped="" ref="0x40676ec0"/>
        <function-ref name="clr" scoped="" ref="0x40679010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4067a130" loc="17:/opt/tinyos-2.1.2/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4067a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4067a308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40683140" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <component-ref qname="HplCC1000InitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40683140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40683318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PCLK" ref="0x406b62e0" loc="62:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PCLK" scoped="" ref="0x406b62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b64b8"/>
        <function-ref name="isInput" scoped="" ref="0x406b6598"/>
        <function-ref name="toggle" scoped="" ref="0x406b6678"/>
        <function-ref name="isOutput" scoped="" ref="0x406b6758"/>
        <function-ref name="get" scoped="" ref="0x406b6838"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b6918"/>
        <function-ref name="set" scoped="" ref="0x406b69f8"/>
        <function-ref name="clr" scoped="" ref="0x406b6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CHP_OUT" ref="0x406b5ec0" loc="60:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CHP_OUT" scoped="" ref="0x406b5ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a90c0"/>
        <function-ref name="isInput" scoped="" ref="0x406a91a0"/>
        <function-ref name="toggle" scoped="" ref="0x406a9280"/>
        <function-ref name="isOutput" scoped="" ref="0x406a9360"/>
        <function-ref name="get" scoped="" ref="0x406a9440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a9520"/>
        <function-ref name="set" scoped="" ref="0x406a9600"/>
        <function-ref name="clr" scoped="" ref="0x406a96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiConfig" ref="0x406b58d0" loc="56:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiConfig" scoped="" ref="0x406b58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x406b5aa8"/>
        <function-ref name="getChannel" scoped="" ref="0x406b5b88"/>
        <function-ref name="getPrescaler" scoped="" ref="0x406b5c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PALE" ref="0x406a98d0" loc="61:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PALE" scoped="" ref="0x406a98d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a9aa8"/>
        <function-ref name="isInput" scoped="" ref="0x406a9b88"/>
        <function-ref name="toggle" scoped="" ref="0x406a9c68"/>
        <function-ref name="isOutput" scoped="" ref="0x406a9d48"/>
        <function-ref name="get" scoped="" ref="0x406a9e28"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a9f08"/>
        <function-ref name="set" scoped="" ref="0x406b6010"/>
        <function-ref name="clr" scoped="" ref="0x406b60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x406ab130" loc="54:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x406ab130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ab308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PDATA" ref="0x406b6cd0" loc="63:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PDATA" scoped="" ref="0x406b6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b6ea8"/>
        <function-ref name="isInput" scoped="" ref="0x406b4010"/>
        <function-ref name="toggle" scoped="" ref="0x406b40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406b41d0"/>
        <function-ref name="get" scoped="" ref="0x406b42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b4390"/>
        <function-ref name="set" scoped="" ref="0x406b4470"/>
        <function-ref name="clr" scoped="" ref="0x406b4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x406a8e98" loc="55:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x406a8e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406aa0c0"/>
        <function-ref name="read" scoped="" ref="0x406aa1a0"/>
        <function-ref name="write" scoped="" ref="0x406aa280"/>
        <function-ref name="getLOCK" scoped="" ref="0x406aa360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x406c03f8" loc="53:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x406c03f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x406c05d0"/>
        <function-ref name="initSlave" scoped="" ref="0x406c06b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x406c0790"/>
        <function-ref name="writeByte" scoped="" ref="0x406c0870"/>
        <function-ref name="enableIntr" scoped="" ref="0x406c0950"/>
        <function-ref name="txMode" scoped="" ref="0x406c0a30"/>
        <function-ref name="readByte" scoped="" ref="0x406c0b10"/>
        <function-ref name="rxMode" scoped="" ref="0x406c0bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x406c0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiSck" ref="0x406c0f10" loc="56:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiSck" scoped="" ref="0x406c0f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c5108"/>
        <function-ref name="isInput" scoped="" ref="0x406c51e8"/>
        <function-ref name="toggle" scoped="" ref="0x406c52c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406c53a8"/>
        <function-ref name="get" scoped="" ref="0x406c5488"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c5568"/>
        <function-ref name="set" scoped="" ref="0x406c5648"/>
        <function-ref name="clr" scoped="" ref="0x406c5728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x406c60b0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x406c60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406c6288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMiso" ref="0x406c5930" loc="57:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMiso" scoped="" ref="0x406c5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c5b08"/>
        <function-ref name="isInput" scoped="" ref="0x406c5be8"/>
        <function-ref name="toggle" scoped="" ref="0x406c5cc8"/>
        <function-ref name="isOutput" scoped="" ref="0x406c5da8"/>
        <function-ref name="get" scoped="" ref="0x406c5e88"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c4010"/>
        <function-ref name="set" scoped="" ref="0x406c40f0"/>
        <function-ref name="clr" scoped="" ref="0x406c41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMosi" ref="0x406c43d8" loc="58:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMosi" scoped="" ref="0x406c43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c45b0"/>
        <function-ref name="isInput" scoped="" ref="0x406c4690"/>
        <function-ref name="toggle" scoped="" ref="0x406c4770"/>
        <function-ref name="isOutput" scoped="" ref="0x406c4850"/>
        <function-ref name="get" scoped="" ref="0x406c4930"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c4a10"/>
        <function-ref name="set" scoped="" ref="0x406c4af0"/>
        <function-ref name="clr" scoped="" ref="0x406c4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OC1C" ref="0x406c4dc0" loc="59:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OC1C" scoped="" ref="0x406c4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d1010"/>
        <function-ref name="isInput" scoped="" ref="0x406d10f0"/>
        <function-ref name="toggle" scoped="" ref="0x406d11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406d12b0"/>
        <function-ref name="get" scoped="" ref="0x406d1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d1470"/>
        <function-ref name="set" scoped="" ref="0x406d1550"/>
        <function-ref name="clr" scoped="" ref="0x406d1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x406fa750" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x406fa750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fab28"/>
        <function-ref name="isInput" scoped="" ref="0x406fac08"/>
        <function-ref name="toggle" scoped="" ref="0x406face8"/>
        <function-ref name="isOutput" scoped="" ref="0x406fadc8"/>
        <function-ref name="get" scoped="" ref="0x406faea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f9010"/>
        <function-ref name="set" scoped="" ref="0x406f90f0"/>
        <function-ref name="clr" scoped="" ref="0x406f91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x406e6d08" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x406e6d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e6ee0"/>
        <function-ref name="isInput" scoped="" ref="0x406e5010"/>
        <function-ref name="toggle" scoped="" ref="0x406e50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e51d0"/>
        <function-ref name="get" scoped="" ref="0x406e52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e5390"/>
        <function-ref name="set" scoped="" ref="0x406e5470"/>
        <function-ref name="clr" scoped="" ref="0x406e5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x406f02f0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x406f02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f04c8"/>
        <function-ref name="isInput" scoped="" ref="0x406f05a8"/>
        <function-ref name="toggle" scoped="" ref="0x406f0688"/>
        <function-ref name="isOutput" scoped="" ref="0x406f0768"/>
        <function-ref name="get" scoped="" ref="0x406f0848"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f0928"/>
        <function-ref name="set" scoped="" ref="0x406f0a08"/>
        <function-ref name="clr" scoped="" ref="0x406f0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x406fd4b0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x406fd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fd688"/>
        <function-ref name="isInput" scoped="" ref="0x406fd768"/>
        <function-ref name="toggle" scoped="" ref="0x406fd848"/>
        <function-ref name="isOutput" scoped="" ref="0x406fd928"/>
        <function-ref name="get" scoped="" ref="0x406fda08"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fdae8"/>
        <function-ref name="set" scoped="" ref="0x406fdbc8"/>
        <function-ref name="clr" scoped="" ref="0x406fdca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x406e08e0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x406e08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x406e0b98"/>
        <function-ref name="toggle" scoped="" ref="0x406e0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x406e0d58"/>
        <function-ref name="get" scoped="" ref="0x406e0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e0f18"/>
        <function-ref name="set" scoped="" ref="0x406df010"/>
        <function-ref name="clr" scoped="" ref="0x406df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x406fe0a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x406fe0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fe278"/>
        <function-ref name="isInput" scoped="" ref="0x406fe358"/>
        <function-ref name="toggle" scoped="" ref="0x406fe438"/>
        <function-ref name="isOutput" scoped="" ref="0x406fe518"/>
        <function-ref name="get" scoped="" ref="0x406fe5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fe6d8"/>
        <function-ref name="set" scoped="" ref="0x406fe7b8"/>
        <function-ref name="clr" scoped="" ref="0x406fe898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x406dfce8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x406dfce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406dfec0"/>
        <function-ref name="isInput" scoped="" ref="0x406de010"/>
        <function-ref name="toggle" scoped="" ref="0x406de0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406de1d0"/>
        <function-ref name="get" scoped="" ref="0x406de2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406de390"/>
        <function-ref name="set" scoped="" ref="0x406de470"/>
        <function-ref name="clr" scoped="" ref="0x406de550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x406ea4b0" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x406ea4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ea688"/>
        <function-ref name="isInput" scoped="" ref="0x406ea768"/>
        <function-ref name="toggle" scoped="" ref="0x406ea848"/>
        <function-ref name="isOutput" scoped="" ref="0x406ea928"/>
        <function-ref name="get" scoped="" ref="0x406eaa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x406eaae8"/>
        <function-ref name="set" scoped="" ref="0x406eabc8"/>
        <function-ref name="clr" scoped="" ref="0x406eaca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x406f5c08" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x406f5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f5de0"/>
        <function-ref name="isInput" scoped="" ref="0x406f5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x406f4010"/>
        <function-ref name="isOutput" scoped="" ref="0x406f40f0"/>
        <function-ref name="get" scoped="" ref="0x406f41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f42b0"/>
        <function-ref name="set" scoped="" ref="0x406f4390"/>
        <function-ref name="clr" scoped="" ref="0x406f4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x406ee210" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x406ee210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ee3e8"/>
        <function-ref name="isInput" scoped="" ref="0x406ee4c8"/>
        <function-ref name="toggle" scoped="" ref="0x406ee5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x406ee688"/>
        <function-ref name="get" scoped="" ref="0x406ee768"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ee848"/>
        <function-ref name="set" scoped="" ref="0x406ee928"/>
        <function-ref name="clr" scoped="" ref="0x406eea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x406e3670" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x406e3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e3848"/>
        <function-ref name="isInput" scoped="" ref="0x406e3928"/>
        <function-ref name="toggle" scoped="" ref="0x406e3a08"/>
        <function-ref name="isOutput" scoped="" ref="0x406e3ae8"/>
        <function-ref name="get" scoped="" ref="0x406e3bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e3ca8"/>
        <function-ref name="set" scoped="" ref="0x406e3d88"/>
        <function-ref name="clr" scoped="" ref="0x406e3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x406ddc08" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x406ddc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ddde0"/>
        <function-ref name="isInput" scoped="" ref="0x406ddec0"/>
        <function-ref name="toggle" scoped="" ref="0x406dc010"/>
        <function-ref name="isOutput" scoped="" ref="0x406dc0f0"/>
        <function-ref name="get" scoped="" ref="0x406dc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406dc2b0"/>
        <function-ref name="set" scoped="" ref="0x406dc390"/>
        <function-ref name="clr" scoped="" ref="0x406dc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x406e82f0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x406e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e84c8"/>
        <function-ref name="isInput" scoped="" ref="0x406e85a8"/>
        <function-ref name="toggle" scoped="" ref="0x406e8688"/>
        <function-ref name="isOutput" scoped="" ref="0x406e8768"/>
        <function-ref name="get" scoped="" ref="0x406e8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e8928"/>
        <function-ref name="set" scoped="" ref="0x406e8a08"/>
        <function-ref name="clr" scoped="" ref="0x406e8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x406f3a98" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x406f3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f3c70"/>
        <function-ref name="isInput" scoped="" ref="0x406f3d50"/>
        <function-ref name="toggle" scoped="" ref="0x406f3e30"/>
        <function-ref name="isOutput" scoped="" ref="0x406f3f10"/>
        <function-ref name="get" scoped="" ref="0x406f2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f20f0"/>
        <function-ref name="set" scoped="" ref="0x406f21d0"/>
        <function-ref name="clr" scoped="" ref="0x406f22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x406fb2f0" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x406fb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fb4c8"/>
        <function-ref name="isInput" scoped="" ref="0x406fb5a8"/>
        <function-ref name="toggle" scoped="" ref="0x406fb688"/>
        <function-ref name="isOutput" scoped="" ref="0x406fb768"/>
        <function-ref name="get" scoped="" ref="0x406fb848"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fb928"/>
        <function-ref name="set" scoped="" ref="0x406fba08"/>
        <function-ref name="clr" scoped="" ref="0x406fbae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x406f8830" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x406f8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f8a08"/>
        <function-ref name="isInput" scoped="" ref="0x406f8ae8"/>
        <function-ref name="toggle" scoped="" ref="0x406f8bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x406f8ca8"/>
        <function-ref name="get" scoped="" ref="0x406f8d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f8e68"/>
        <function-ref name="set" scoped="" ref="0x406f7010"/>
        <function-ref name="clr" scoped="" ref="0x406f70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x406f2ea8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x406f2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f10c0"/>
        <function-ref name="isInput" scoped="" ref="0x406f11a0"/>
        <function-ref name="toggle" scoped="" ref="0x406f1280"/>
        <function-ref name="isOutput" scoped="" ref="0x406f1360"/>
        <function-ref name="get" scoped="" ref="0x406f1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f1520"/>
        <function-ref name="set" scoped="" ref="0x406f1600"/>
        <function-ref name="clr" scoped="" ref="0x406f16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x406e14b0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x406e14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e1688"/>
        <function-ref name="isInput" scoped="" ref="0x406e1768"/>
        <function-ref name="toggle" scoped="" ref="0x406e1848"/>
        <function-ref name="isOutput" scoped="" ref="0x406e1928"/>
        <function-ref name="get" scoped="" ref="0x406e1a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e1ae8"/>
        <function-ref name="set" scoped="" ref="0x406e1bc8"/>
        <function-ref name="clr" scoped="" ref="0x406e1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x406dbb18" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x406dbb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406dbcf0"/>
        <function-ref name="isInput" scoped="" ref="0x406dbdd0"/>
        <function-ref name="toggle" scoped="" ref="0x406dbeb0"/>
        <function-ref name="isOutput" scoped="" ref="0x406ec010"/>
        <function-ref name="get" scoped="" ref="0x406ec0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ec1d0"/>
        <function-ref name="set" scoped="" ref="0x406ec2b0"/>
        <function-ref name="clr" scoped="" ref="0x406ec390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x406f93d0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x406f93d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f95a8"/>
        <function-ref name="isInput" scoped="" ref="0x406f9688"/>
        <function-ref name="toggle" scoped="" ref="0x406f9768"/>
        <function-ref name="isOutput" scoped="" ref="0x406f9848"/>
        <function-ref name="get" scoped="" ref="0x406f9928"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f9a08"/>
        <function-ref name="set" scoped="" ref="0x406f9ae8"/>
        <function-ref name="clr" scoped="" ref="0x406f9bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x406eb010" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x406eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406eb1e8"/>
        <function-ref name="isInput" scoped="" ref="0x406eb2c8"/>
        <function-ref name="toggle" scoped="" ref="0x406eb3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x406eb488"/>
        <function-ref name="get" scoped="" ref="0x406eb568"/>
        <function-ref name="makeOutput" scoped="" ref="0x406eb648"/>
        <function-ref name="set" scoped="" ref="0x406eb728"/>
        <function-ref name="clr" scoped="" ref="0x406eb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x406e5750" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x406e5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e5928"/>
        <function-ref name="isInput" scoped="" ref="0x406e5a08"/>
        <function-ref name="toggle" scoped="" ref="0x406e5ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x406e5bc8"/>
        <function-ref name="get" scoped="" ref="0x406e5ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e5d88"/>
        <function-ref name="set" scoped="" ref="0x406e5e68"/>
        <function-ref name="clr" scoped="" ref="0x406f5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x406f0ce8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x406f0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f0ec0"/>
        <function-ref name="isInput" scoped="" ref="0x406ef010"/>
        <function-ref name="toggle" scoped="" ref="0x406ef0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406ef1d0"/>
        <function-ref name="get" scoped="" ref="0x406ef2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ef390"/>
        <function-ref name="set" scoped="" ref="0x406ef470"/>
        <function-ref name="clr" scoped="" ref="0x406ef550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x406fdea8" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x406fdea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fc0c0"/>
        <function-ref name="isInput" scoped="" ref="0x406fc1a0"/>
        <function-ref name="toggle" scoped="" ref="0x406fc280"/>
        <function-ref name="isOutput" scoped="" ref="0x406fc360"/>
        <function-ref name="get" scoped="" ref="0x406fc440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fc520"/>
        <function-ref name="set" scoped="" ref="0x406fc600"/>
        <function-ref name="clr" scoped="" ref="0x406fc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x406df2f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x406df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406df4c8"/>
        <function-ref name="isInput" scoped="" ref="0x406df5a8"/>
        <function-ref name="toggle" scoped="" ref="0x406df688"/>
        <function-ref name="isOutput" scoped="" ref="0x406df768"/>
        <function-ref name="get" scoped="" ref="0x406df848"/>
        <function-ref name="makeOutput" scoped="" ref="0x406df928"/>
        <function-ref name="set" scoped="" ref="0x406dfa08"/>
        <function-ref name="clr" scoped="" ref="0x406dfae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x406de750" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x406de750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406de928"/>
        <function-ref name="isInput" scoped="" ref="0x406dea08"/>
        <function-ref name="toggle" scoped="" ref="0x406deae8"/>
        <function-ref name="isOutput" scoped="" ref="0x406debc8"/>
        <function-ref name="get" scoped="" ref="0x406deca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ded88"/>
        <function-ref name="set" scoped="" ref="0x406dee68"/>
        <function-ref name="clr" scoped="" ref="0x406dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x406eaea8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x406eaea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e90c0"/>
        <function-ref name="isInput" scoped="" ref="0x406e91a0"/>
        <function-ref name="toggle" scoped="" ref="0x406e9280"/>
        <function-ref name="isOutput" scoped="" ref="0x406e9360"/>
        <function-ref name="get" scoped="" ref="0x406e9440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e9520"/>
        <function-ref name="set" scoped="" ref="0x406e9600"/>
        <function-ref name="clr" scoped="" ref="0x406e96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x406f4670" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x406f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f4848"/>
        <function-ref name="isInput" scoped="" ref="0x406f4928"/>
        <function-ref name="toggle" scoped="" ref="0x406f4a08"/>
        <function-ref name="isOutput" scoped="" ref="0x406f4ae8"/>
        <function-ref name="get" scoped="" ref="0x406f4bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f4ca8"/>
        <function-ref name="set" scoped="" ref="0x406f4d88"/>
        <function-ref name="clr" scoped="" ref="0x406f4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x406eec08" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x406eec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406eede0"/>
        <function-ref name="isInput" scoped="" ref="0x406eeec0"/>
        <function-ref name="toggle" scoped="" ref="0x406ed010"/>
        <function-ref name="isOutput" scoped="" ref="0x406ed0f0"/>
        <function-ref name="get" scoped="" ref="0x406ed1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ed2b0"/>
        <function-ref name="set" scoped="" ref="0x406ed390"/>
        <function-ref name="clr" scoped="" ref="0x406ed470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x406e20a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x406e20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e2278"/>
        <function-ref name="isInput" scoped="" ref="0x406e2358"/>
        <function-ref name="toggle" scoped="" ref="0x406e2438"/>
        <function-ref name="isOutput" scoped="" ref="0x406e2518"/>
        <function-ref name="get" scoped="" ref="0x406e25f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e26d8"/>
        <function-ref name="set" scoped="" ref="0x406e27b8"/>
        <function-ref name="clr" scoped="" ref="0x406e2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x406dc670" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x406dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406dc8c8"/>
        <function-ref name="isInput" scoped="" ref="0x406dc9a8"/>
        <function-ref name="toggle" scoped="" ref="0x406dca88"/>
        <function-ref name="isOutput" scoped="" ref="0x406dcb68"/>
        <function-ref name="get" scoped="" ref="0x406dcc48"/>
        <function-ref name="makeOutput" scoped="" ref="0x406dcd28"/>
        <function-ref name="set" scoped="" ref="0x406dce08"/>
        <function-ref name="clr" scoped="" ref="0x406dcee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x406e8ce8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x406e8ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e8ec0"/>
        <function-ref name="isInput" scoped="" ref="0x406e7010"/>
        <function-ref name="toggle" scoped="" ref="0x406e70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e71d0"/>
        <function-ref name="get" scoped="" ref="0x406e72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e7390"/>
        <function-ref name="set" scoped="" ref="0x406e7470"/>
        <function-ref name="clr" scoped="" ref="0x406e7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x406fbce8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x406fbce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fbec0"/>
        <function-ref name="isInput" scoped="" ref="0x406fa010"/>
        <function-ref name="toggle" scoped="" ref="0x406fa0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406fa1d0"/>
        <function-ref name="get" scoped="" ref="0x406fa2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fa390"/>
        <function-ref name="set" scoped="" ref="0x406fa470"/>
        <function-ref name="clr" scoped="" ref="0x406fa550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x406e6210" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x406e6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e64e8"/>
        <function-ref name="isInput" scoped="" ref="0x406e65c8"/>
        <function-ref name="toggle" scoped="" ref="0x406e66a8"/>
        <function-ref name="isOutput" scoped="" ref="0x406e6788"/>
        <function-ref name="get" scoped="" ref="0x406e6868"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e6948"/>
        <function-ref name="set" scoped="" ref="0x406e6a28"/>
        <function-ref name="clr" scoped="" ref="0x406e6b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x406f18e0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x406f18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x406f1b98"/>
        <function-ref name="toggle" scoped="" ref="0x406f1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x406f1d58"/>
        <function-ref name="get" scoped="" ref="0x406f1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f1f18"/>
        <function-ref name="set" scoped="" ref="0x406f0010"/>
        <function-ref name="clr" scoped="" ref="0x406f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x406fea98" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x406fea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fec70"/>
        <function-ref name="isInput" scoped="" ref="0x406fed50"/>
        <function-ref name="toggle" scoped="" ref="0x406fee30"/>
        <function-ref name="isOutput" scoped="" ref="0x406fef10"/>
        <function-ref name="get" scoped="" ref="0x406fd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fd0f0"/>
        <function-ref name="set" scoped="" ref="0x406fd1d0"/>
        <function-ref name="clr" scoped="" ref="0x406fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x406f72f0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x406f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f74c8"/>
        <function-ref name="isInput" scoped="" ref="0x406f75a8"/>
        <function-ref name="toggle" scoped="" ref="0x406f7688"/>
        <function-ref name="isOutput" scoped="" ref="0x406f7768"/>
        <function-ref name="get" scoped="" ref="0x406f7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f7928"/>
        <function-ref name="set" scoped="" ref="0x406f7a08"/>
        <function-ref name="clr" scoped="" ref="0x406f7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x406e1ea8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x406e1ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e00c0"/>
        <function-ref name="isInput" scoped="" ref="0x406e01a0"/>
        <function-ref name="toggle" scoped="" ref="0x406e0280"/>
        <function-ref name="isOutput" scoped="" ref="0x406e0360"/>
        <function-ref name="get" scoped="" ref="0x406e0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e0520"/>
        <function-ref name="set" scoped="" ref="0x406e0600"/>
        <function-ref name="clr" scoped="" ref="0x406e06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x406ec590" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x406ec590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ec768"/>
        <function-ref name="isInput" scoped="" ref="0x406ec848"/>
        <function-ref name="toggle" scoped="" ref="0x406ec928"/>
        <function-ref name="isOutput" scoped="" ref="0x406eca08"/>
        <function-ref name="get" scoped="" ref="0x406ecae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ecbc8"/>
        <function-ref name="set" scoped="" ref="0x406ecca8"/>
        <function-ref name="clr" scoped="" ref="0x406ecd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x406ed670" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x406ed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ed848"/>
        <function-ref name="isInput" scoped="" ref="0x406ed928"/>
        <function-ref name="toggle" scoped="" ref="0x406eda08"/>
        <function-ref name="isOutput" scoped="" ref="0x406edae8"/>
        <function-ref name="get" scoped="" ref="0x406edbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406edca8"/>
        <function-ref name="set" scoped="" ref="0x406edd88"/>
        <function-ref name="clr" scoped="" ref="0x406ede68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x406eba08" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x406eba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ebbe0"/>
        <function-ref name="isInput" scoped="" ref="0x406ebcc0"/>
        <function-ref name="toggle" scoped="" ref="0x406ebda0"/>
        <function-ref name="isOutput" scoped="" ref="0x406ebe80"/>
        <function-ref name="get" scoped="" ref="0x406ea010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ea0f0"/>
        <function-ref name="set" scoped="" ref="0x406ea1d0"/>
        <function-ref name="clr" scoped="" ref="0x406ea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x406f5210" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x406f5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f53e8"/>
        <function-ref name="isInput" scoped="" ref="0x406f54c8"/>
        <function-ref name="toggle" scoped="" ref="0x406f55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x406f5688"/>
        <function-ref name="get" scoped="" ref="0x406f5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f5848"/>
        <function-ref name="set" scoped="" ref="0x406f5928"/>
        <function-ref name="clr" scoped="" ref="0x406f5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x406ef750" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x406ef750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ef928"/>
        <function-ref name="isInput" scoped="" ref="0x406efa08"/>
        <function-ref name="toggle" scoped="" ref="0x406efae8"/>
        <function-ref name="isOutput" scoped="" ref="0x406efbc8"/>
        <function-ref name="get" scoped="" ref="0x406efca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406efd88"/>
        <function-ref name="set" scoped="" ref="0x406efe68"/>
        <function-ref name="clr" scoped="" ref="0x406ee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x406fc8e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x406fc8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fcab8"/>
        <function-ref name="isInput" scoped="" ref="0x406fcb98"/>
        <function-ref name="toggle" scoped="" ref="0x406fcc78"/>
        <function-ref name="isOutput" scoped="" ref="0x406fcd58"/>
        <function-ref name="get" scoped="" ref="0x406fce38"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fcf18"/>
        <function-ref name="set" scoped="" ref="0x406fb010"/>
        <function-ref name="clr" scoped="" ref="0x406fb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40681bb0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40681bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40681d88"/>
        <function-ref name="isInput" scoped="" ref="0x40681e68"/>
        <function-ref name="toggle" scoped="" ref="0x406e3010"/>
        <function-ref name="isOutput" scoped="" ref="0x406e30f0"/>
        <function-ref name="get" scoped="" ref="0x406e31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e32b0"/>
        <function-ref name="set" scoped="" ref="0x406e3390"/>
        <function-ref name="clr" scoped="" ref="0x406e3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x406dd210" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x406dd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406dd3e8"/>
        <function-ref name="isInput" scoped="" ref="0x406dd4c8"/>
        <function-ref name="toggle" scoped="" ref="0x406dd5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x406dd688"/>
        <function-ref name="get" scoped="" ref="0x406dd768"/>
        <function-ref name="makeOutput" scoped="" ref="0x406dd848"/>
        <function-ref name="set" scoped="" ref="0x406dd928"/>
        <function-ref name="clr" scoped="" ref="0x406dda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x406e98e0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x406e98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e9ab8"/>
        <function-ref name="isInput" scoped="" ref="0x406e9b98"/>
        <function-ref name="toggle" scoped="" ref="0x406e9c78"/>
        <function-ref name="isOutput" scoped="" ref="0x406e9d58"/>
        <function-ref name="get" scoped="" ref="0x406e9e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e9f18"/>
        <function-ref name="set" scoped="" ref="0x406e8010"/>
        <function-ref name="clr" scoped="" ref="0x406e80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x406f30a0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x406f30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f3278"/>
        <function-ref name="isInput" scoped="" ref="0x406f3358"/>
        <function-ref name="toggle" scoped="" ref="0x406f3438"/>
        <function-ref name="isOutput" scoped="" ref="0x406f3518"/>
        <function-ref name="get" scoped="" ref="0x406f35f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f36d8"/>
        <function-ref name="set" scoped="" ref="0x406f37b8"/>
        <function-ref name="clr" scoped="" ref="0x406f3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x406f9dc8" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x406f9dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f8010"/>
        <function-ref name="isInput" scoped="" ref="0x406f80f0"/>
        <function-ref name="toggle" scoped="" ref="0x406f81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406f82b0"/>
        <function-ref name="get" scoped="" ref="0x406f8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f8470"/>
        <function-ref name="set" scoped="" ref="0x406f8550"/>
        <function-ref name="clr" scoped="" ref="0x406f8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x406f24b0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x406f24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f2688"/>
        <function-ref name="isInput" scoped="" ref="0x406f2768"/>
        <function-ref name="toggle" scoped="" ref="0x406f2848"/>
        <function-ref name="isOutput" scoped="" ref="0x406f2928"/>
        <function-ref name="get" scoped="" ref="0x406f2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f2ae8"/>
        <function-ref name="set" scoped="" ref="0x406f2bc8"/>
        <function-ref name="clr" scoped="" ref="0x406f2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x406e7750" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x406e7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e7928"/>
        <function-ref name="isInput" scoped="" ref="0x406e7a08"/>
        <function-ref name="toggle" scoped="" ref="0x406e7ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x406e7bc8"/>
        <function-ref name="get" scoped="" ref="0x406e7ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e7d88"/>
        <function-ref name="set" scoped="" ref="0x406e7e68"/>
        <function-ref name="clr" scoped="" ref="0x406e6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x406e2a98" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x406e2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e2c70"/>
        <function-ref name="isInput" scoped="" ref="0x406e2d50"/>
        <function-ref name="toggle" scoped="" ref="0x406e2e30"/>
        <function-ref name="isOutput" scoped="" ref="0x406e2f10"/>
        <function-ref name="get" scoped="" ref="0x406e1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e10f0"/>
        <function-ref name="set" scoped="" ref="0x406e11d0"/>
        <function-ref name="clr" scoped="" ref="0x406e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x406db120" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x406db120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406db2f8"/>
        <function-ref name="isInput" scoped="" ref="0x406db3d8"/>
        <function-ref name="toggle" scoped="" ref="0x406db4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x406db598"/>
        <function-ref name="get" scoped="" ref="0x406db678"/>
        <function-ref name="makeOutput" scoped="" ref="0x406db758"/>
        <function-ref name="set" scoped="" ref="0x406db838"/>
        <function-ref name="clr" scoped="" ref="0x406db918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x407276b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x407276b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40727888"/>
        <function-ref name="isInput" scoped="" ref="0x40727968"/>
        <function-ref name="toggle" scoped="" ref="0x40727a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40727b28"/>
        <function-ref name="get" scoped="" ref="0x40727c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40727ce8"/>
        <function-ref name="set" scoped="" ref="0x40727dc8"/>
        <function-ref name="clr" scoped="" ref="0x40727ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40725330" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40725330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40725508"/>
        <function-ref name="isInput" scoped="" ref="0x407255e8"/>
        <function-ref name="toggle" scoped="" ref="0x407256c8"/>
        <function-ref name="isOutput" scoped="" ref="0x407257a8"/>
        <function-ref name="get" scoped="" ref="0x40725888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40725968"/>
        <function-ref name="set" scoped="" ref="0x40725a48"/>
        <function-ref name="clr" scoped="" ref="0x40725b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x407283a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x407283a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40728578"/>
        <function-ref name="isInput" scoped="" ref="0x40728658"/>
        <function-ref name="toggle" scoped="" ref="0x40728738"/>
        <function-ref name="isOutput" scoped="" ref="0x40728818"/>
        <function-ref name="get" scoped="" ref="0x407288f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407289d8"/>
        <function-ref name="set" scoped="" ref="0x40728ab8"/>
        <function-ref name="clr" scoped="" ref="0x40728b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40726030" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40726030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40726208"/>
        <function-ref name="isInput" scoped="" ref="0x407262e8"/>
        <function-ref name="toggle" scoped="" ref="0x407263c8"/>
        <function-ref name="isOutput" scoped="" ref="0x407264a8"/>
        <function-ref name="get" scoped="" ref="0x40726588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40726668"/>
        <function-ref name="set" scoped="" ref="0x40726748"/>
        <function-ref name="clr" scoped="" ref="0x40726828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40725c88" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40725c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40725e60"/>
        <function-ref name="isInput" scoped="" ref="0x40723010"/>
        <function-ref name="toggle" scoped="" ref="0x407230f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407231d0"/>
        <function-ref name="get" scoped="" ref="0x407232b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40723390"/>
        <function-ref name="set" scoped="" ref="0x40723470"/>
        <function-ref name="clr" scoped="" ref="0x40723550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40728cf8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40728cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40728ed0"/>
        <function-ref name="isInput" scoped="" ref="0x40727010"/>
        <function-ref name="toggle" scoped="" ref="0x407270f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407271d0"/>
        <function-ref name="get" scoped="" ref="0x407272b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40727390"/>
        <function-ref name="set" scoped="" ref="0x40727470"/>
        <function-ref name="clr" scoped="" ref="0x40727550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40726988" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40726988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40726b60"/>
        <function-ref name="isInput" scoped="" ref="0x40726c40"/>
        <function-ref name="toggle" scoped="" ref="0x40726d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40726e00"/>
        <function-ref name="get" scoped="" ref="0x40726ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40725010"/>
        <function-ref name="set" scoped="" ref="0x407250f0"/>
        <function-ref name="clr" scoped="" ref="0x407251d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x407236b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x407236b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40723888"/>
        <function-ref name="isInput" scoped="" ref="0x40723968"/>
        <function-ref name="toggle" scoped="" ref="0x40723a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40723b28"/>
        <function-ref name="get" scoped="" ref="0x40723c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40723ce8"/>
        <function-ref name="set" scoped="" ref="0x40723dc8"/>
        <function-ref name="clr" scoped="" ref="0x40723ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9d6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9d898"/>
        <function-ref name="isInput" scoped="" ref="0x40f9d978"/>
        <function-ref name="toggle" scoped="" ref="0x40f9da58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9db38"/>
        <function-ref name="get" scoped="" ref="0x40f9dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9dcf8"/>
        <function-ref name="set" scoped="" ref="0x40f9ddd8"/>
        <function-ref name="clr" scoped="" ref="0x40f9deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9b0b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9b288"/>
        <function-ref name="isInput" scoped="" ref="0x40f9b368"/>
        <function-ref name="toggle" scoped="" ref="0x40f9b448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9b528"/>
        <function-ref name="get" scoped="" ref="0x40f9b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f9b6e8"/>
        <function-ref name="set" scoped="" ref="0x40f9b7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f9b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f9aa88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f9aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f9ac60"/>
        <function-ref name="isInput" scoped="" ref="0x40f9ad40"/>
        <function-ref name="toggle" scoped="" ref="0x40f9ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x40f9af00"/>
        <function-ref name="get" scoped="" ref="0x40f99010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f990f0"/>
        <function-ref name="set" scoped="" ref="0x40f991d0"/>
        <function-ref name="clr" scoped="" ref="0x40f992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f98538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f98538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f98710"/>
        <function-ref name="isInput" scoped="" ref="0x40f987f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f988d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f989b0"/>
        <function-ref name="get" scoped="" ref="0x40f98a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f98b70"/>
        <function-ref name="set" scoped="" ref="0x40f98c50"/>
        <function-ref name="clr" scoped="" ref="0x40f98d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f96010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f96010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f961e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f962c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f963a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f96488"/>
        <function-ref name="get" scoped="" ref="0x40f96568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f96648"/>
        <function-ref name="set" scoped="" ref="0x40f96728"/>
        <function-ref name="clr" scoped="" ref="0x40f96808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f959e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f959e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f95bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f95ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f95d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f95e60"/>
        <function-ref name="get" scoped="" ref="0x40f94010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f940f0"/>
        <function-ref name="set" scoped="" ref="0x40f941d0"/>
        <function-ref name="clr" scoped="" ref="0x40f942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f93538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f93538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f93710"/>
        <function-ref name="isInput" scoped="" ref="0x40f937f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f938d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f939b0"/>
        <function-ref name="get" scoped="" ref="0x40f93a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f93b70"/>
        <function-ref name="set" scoped="" ref="0x40f93c50"/>
        <function-ref name="clr" scoped="" ref="0x40f93d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f91010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f91010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f911e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f912c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f913a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f91488"/>
        <function-ref name="get" scoped="" ref="0x40f91568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f91648"/>
        <function-ref name="set" scoped="" ref="0x40f91728"/>
        <function-ref name="clr" scoped="" ref="0x40f91808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40730170" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40730170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40730348"/>
        <function-ref name="isInput" scoped="" ref="0x40730428"/>
        <function-ref name="toggle" scoped="" ref="0x40730508"/>
        <function-ref name="isOutput" scoped="" ref="0x407305e8"/>
        <function-ref name="get" scoped="" ref="0x407306c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407307a8"/>
        <function-ref name="set" scoped="" ref="0x40730888"/>
        <function-ref name="clr" scoped="" ref="0x40730968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4072fe48" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4072fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072e050"/>
        <function-ref name="isInput" scoped="" ref="0x4072e130"/>
        <function-ref name="toggle" scoped="" ref="0x4072e210"/>
        <function-ref name="isOutput" scoped="" ref="0x4072e2f0"/>
        <function-ref name="get" scoped="" ref="0x4072e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072e4b0"/>
        <function-ref name="set" scoped="" ref="0x4072e590"/>
        <function-ref name="clr" scoped="" ref="0x4072e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40732dc8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40732dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40731010"/>
        <function-ref name="isInput" scoped="" ref="0x407310f0"/>
        <function-ref name="toggle" scoped="" ref="0x407311d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407312b0"/>
        <function-ref name="get" scoped="" ref="0x40731390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40731470"/>
        <function-ref name="set" scoped="" ref="0x40731550"/>
        <function-ref name="clr" scoped="" ref="0x40731630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40730ac8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40730ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40730ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40730d80"/>
        <function-ref name="toggle" scoped="" ref="0x40730e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4072f010"/>
        <function-ref name="get" scoped="" ref="0x4072f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072f1d0"/>
        <function-ref name="set" scoped="" ref="0x4072f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4072f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4072e7d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4072e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4072ea88"/>
        <function-ref name="toggle" scoped="" ref="0x4072eb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4072ec48"/>
        <function-ref name="get" scoped="" ref="0x4072ed28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072ee08"/>
        <function-ref name="set" scoped="" ref="0x4072eee8"/>
        <function-ref name="clr" scoped="" ref="0x4072d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40731790" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40731790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40731968"/>
        <function-ref name="isInput" scoped="" ref="0x40731a48"/>
        <function-ref name="toggle" scoped="" ref="0x40731b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40731c08"/>
        <function-ref name="get" scoped="" ref="0x40731ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40731dc8"/>
        <function-ref name="set" scoped="" ref="0x40731ea8"/>
        <function-ref name="clr" scoped="" ref="0x40730010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4072f4f0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4072f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4072f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4072f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4072f968"/>
        <function-ref name="get" scoped="" ref="0x4072fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072fb28"/>
        <function-ref name="set" scoped="" ref="0x4072fc08"/>
        <function-ref name="clr" scoped="" ref="0x4072fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4072d170" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4072d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072d348"/>
        <function-ref name="isInput" scoped="" ref="0x4072d428"/>
        <function-ref name="toggle" scoped="" ref="0x4072d508"/>
        <function-ref name="isOutput" scoped="" ref="0x4072d5e8"/>
        <function-ref name="get" scoped="" ref="0x4072d6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072d7a8"/>
        <function-ref name="set" scoped="" ref="0x4072d888"/>
        <function-ref name="clr" scoped="" ref="0x4072d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fce418" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fce418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fce5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40fce6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40fce7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fce890"/>
        <function-ref name="get" scoped="" ref="0x40fce970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcea50"/>
        <function-ref name="set" scoped="" ref="0x40fceb30"/>
        <function-ref name="clr" scoped="" ref="0x40fcec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcdde0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcc010"/>
        <function-ref name="isInput" scoped="" ref="0x40fcc0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fcc1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcc2b0"/>
        <function-ref name="get" scoped="" ref="0x40fcc390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcc470"/>
        <function-ref name="set" scoped="" ref="0x40fcc550"/>
        <function-ref name="clr" scoped="" ref="0x40fcc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcb7f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcb7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcb9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40fcbab0"/>
        <function-ref name="toggle" scoped="" ref="0x40fcbb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcbc70"/>
        <function-ref name="get" scoped="" ref="0x40fcbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcbe30"/>
        <function-ref name="set" scoped="" ref="0x40fcbf10"/>
        <function-ref name="clr" scoped="" ref="0x40fca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc9228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc9400"/>
        <function-ref name="isInput" scoped="" ref="0x40fc94e0"/>
        <function-ref name="toggle" scoped="" ref="0x40fc95c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc96a0"/>
        <function-ref name="get" scoped="" ref="0x40fc9780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc9860"/>
        <function-ref name="set" scoped="" ref="0x40fc9940"/>
        <function-ref name="clr" scoped="" ref="0x40fc9a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc8c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc8de0"/>
        <function-ref name="isInput" scoped="" ref="0x40fc8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40fc7010"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc70f0"/>
        <function-ref name="get" scoped="" ref="0x40fc71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc72b0"/>
        <function-ref name="set" scoped="" ref="0x40fc7390"/>
        <function-ref name="clr" scoped="" ref="0x40fc7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc66c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc6898"/>
        <function-ref name="isInput" scoped="" ref="0x40fc6978"/>
        <function-ref name="toggle" scoped="" ref="0x40fc6a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc6b38"/>
        <function-ref name="get" scoped="" ref="0x40fc6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc6cf8"/>
        <function-ref name="set" scoped="" ref="0x40fc6dd8"/>
        <function-ref name="clr" scoped="" ref="0x40fc6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc40b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc4288"/>
        <function-ref name="isInput" scoped="" ref="0x40fc4368"/>
        <function-ref name="toggle" scoped="" ref="0x40fc4448"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc4528"/>
        <function-ref name="get" scoped="" ref="0x40fc4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc46e8"/>
        <function-ref name="set" scoped="" ref="0x40fc47c8"/>
        <function-ref name="clr" scoped="" ref="0x40fc48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc2a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc2c60"/>
        <function-ref name="isInput" scoped="" ref="0x40fc2d40"/>
        <function-ref name="toggle" scoped="" ref="0x40fc2e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc2f00"/>
        <function-ref name="get" scoped="" ref="0x40fc1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc10f0"/>
        <function-ref name="set" scoped="" ref="0x40fc11d0"/>
        <function-ref name="clr" scoped="" ref="0x40fc12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4073b9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4073b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4073bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4073bca0"/>
        <function-ref name="toggle" scoped="" ref="0x4073bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4073be60"/>
        <function-ref name="get" scoped="" ref="0x4073a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4073a0f0"/>
        <function-ref name="set" scoped="" ref="0x4073a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4073a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40739790" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40739790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40739968"/>
        <function-ref name="isInput" scoped="" ref="0x40739a48"/>
        <function-ref name="toggle" scoped="" ref="0x40739b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40739c08"/>
        <function-ref name="get" scoped="" ref="0x40739ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40739dc8"/>
        <function-ref name="set" scoped="" ref="0x40739ea8"/>
        <function-ref name="clr" scoped="" ref="0x40738010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4073c6f8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4073c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4073c8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4073c9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4073ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x4073cb70"/>
        <function-ref name="get" scoped="" ref="0x4073cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4073cd30"/>
        <function-ref name="set" scoped="" ref="0x4073ce10"/>
        <function-ref name="clr" scoped="" ref="0x4073cef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4073a410" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4073a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4073a5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4073a6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4073a7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4073a888"/>
        <function-ref name="get" scoped="" ref="0x4073a968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4073aa48"/>
        <function-ref name="set" scoped="" ref="0x4073ab28"/>
        <function-ref name="clr" scoped="" ref="0x4073ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40738170" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40738170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40738348"/>
        <function-ref name="isInput" scoped="" ref="0x40738428"/>
        <function-ref name="toggle" scoped="" ref="0x40738508"/>
        <function-ref name="isOutput" scoped="" ref="0x407385e8"/>
        <function-ref name="get" scoped="" ref="0x407386c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407387a8"/>
        <function-ref name="set" scoped="" ref="0x40738888"/>
        <function-ref name="clr" scoped="" ref="0x40738968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4073b090" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4073b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4073b268"/>
        <function-ref name="isInput" scoped="" ref="0x4073b348"/>
        <function-ref name="toggle" scoped="" ref="0x4073b428"/>
        <function-ref name="isOutput" scoped="" ref="0x4073b508"/>
        <function-ref name="get" scoped="" ref="0x4073b5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4073b6c8"/>
        <function-ref name="set" scoped="" ref="0x4073b7a8"/>
        <function-ref name="clr" scoped="" ref="0x4073b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4073ad68" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4073ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40739010"/>
        <function-ref name="isInput" scoped="" ref="0x407390f0"/>
        <function-ref name="toggle" scoped="" ref="0x407391d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407392b0"/>
        <function-ref name="get" scoped="" ref="0x40739390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40739470"/>
        <function-ref name="set" scoped="" ref="0x40739550"/>
        <function-ref name="clr" scoped="" ref="0x40739630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40738ac8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40738ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40738ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40738d80"/>
        <function-ref name="toggle" scoped="" ref="0x40738e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40737010"/>
        <function-ref name="get" scoped="" ref="0x407370f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407371d0"/>
        <function-ref name="set" scoped="" ref="0x407372b0"/>
        <function-ref name="clr" scoped="" ref="0x40737390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41005de8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41005de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41001010"/>
        <function-ref name="isInput" scoped="" ref="0x410010f0"/>
        <function-ref name="toggle" scoped="" ref="0x410011d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410012b0"/>
        <function-ref name="get" scoped="" ref="0x41001390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41001470"/>
        <function-ref name="set" scoped="" ref="0x41001550"/>
        <function-ref name="clr" scoped="" ref="0x41001630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410007f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410007f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410009d0"/>
        <function-ref name="isInput" scoped="" ref="0x41000ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41000b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41000c70"/>
        <function-ref name="get" scoped="" ref="0x41000d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41000e30"/>
        <function-ref name="set" scoped="" ref="0x41000f10"/>
        <function-ref name="clr" scoped="" ref="0x40fff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ffe228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ffe228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ffe400"/>
        <function-ref name="isInput" scoped="" ref="0x40ffe4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ffe5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ffe6a0"/>
        <function-ref name="get" scoped="" ref="0x40ffe780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ffe860"/>
        <function-ref name="set" scoped="" ref="0x40ffe940"/>
        <function-ref name="clr" scoped="" ref="0x40ffea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ffdc08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ffdc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ffdde0"/>
        <function-ref name="isInput" scoped="" ref="0x40ffdec0"/>
        <function-ref name="toggle" scoped="" ref="0x40ffc010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ffc0f0"/>
        <function-ref name="get" scoped="" ref="0x40ffc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ffc2b0"/>
        <function-ref name="set" scoped="" ref="0x40ffc390"/>
        <function-ref name="clr" scoped="" ref="0x40ffc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ffb6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ffb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ffb898"/>
        <function-ref name="isInput" scoped="" ref="0x40ffb978"/>
        <function-ref name="toggle" scoped="" ref="0x40ffba58"/>
        <function-ref name="isOutput" scoped="" ref="0x40ffbb38"/>
        <function-ref name="get" scoped="" ref="0x40ffbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ffbcf8"/>
        <function-ref name="set" scoped="" ref="0x40ffbdd8"/>
        <function-ref name="clr" scoped="" ref="0x40ffbeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ff90b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ff90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ff9288"/>
        <function-ref name="isInput" scoped="" ref="0x40ff9368"/>
        <function-ref name="toggle" scoped="" ref="0x40ff9448"/>
        <function-ref name="isOutput" scoped="" ref="0x40ff9528"/>
        <function-ref name="get" scoped="" ref="0x40ff9608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ff96e8"/>
        <function-ref name="set" scoped="" ref="0x40ff97c8"/>
        <function-ref name="clr" scoped="" ref="0x40ff98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ff8a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ff8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ff8c60"/>
        <function-ref name="isInput" scoped="" ref="0x40ff8d40"/>
        <function-ref name="toggle" scoped="" ref="0x40ff8e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40ff8f00"/>
        <function-ref name="get" scoped="" ref="0x40ff7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ff70f0"/>
        <function-ref name="set" scoped="" ref="0x40ff71d0"/>
        <function-ref name="clr" scoped="" ref="0x40ff72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ff6538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ff6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ff6710"/>
        <function-ref name="isInput" scoped="" ref="0x40ff67f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ff68d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ff69b0"/>
        <function-ref name="get" scoped="" ref="0x40ff6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ff6b70"/>
        <function-ref name="set" scoped="" ref="0x40ff6c50"/>
        <function-ref name="clr" scoped="" ref="0x40ff6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40747410" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40747410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407475e8"/>
        <function-ref name="isInput" scoped="" ref="0x407476c8"/>
        <function-ref name="toggle" scoped="" ref="0x407477a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40747888"/>
        <function-ref name="get" scoped="" ref="0x40747968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40747a48"/>
        <function-ref name="set" scoped="" ref="0x40747b28"/>
        <function-ref name="clr" scoped="" ref="0x40747c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40744170" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40744170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40744348"/>
        <function-ref name="isInput" scoped="" ref="0x40744428"/>
        <function-ref name="toggle" scoped="" ref="0x40744508"/>
        <function-ref name="isOutput" scoped="" ref="0x407445e8"/>
        <function-ref name="get" scoped="" ref="0x407446c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407447a8"/>
        <function-ref name="set" scoped="" ref="0x40744888"/>
        <function-ref name="clr" scoped="" ref="0x40744968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40748128" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40748128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40748300"/>
        <function-ref name="isInput" scoped="" ref="0x407483e0"/>
        <function-ref name="toggle" scoped="" ref="0x407484c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407485a0"/>
        <function-ref name="get" scoped="" ref="0x40748680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40748760"/>
        <function-ref name="set" scoped="" ref="0x40748840"/>
        <function-ref name="clr" scoped="" ref="0x40748920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40747d68" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40747d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40745010"/>
        <function-ref name="isInput" scoped="" ref="0x407450f0"/>
        <function-ref name="toggle" scoped="" ref="0x407451d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407452b0"/>
        <function-ref name="get" scoped="" ref="0x40745390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40745470"/>
        <function-ref name="set" scoped="" ref="0x40745550"/>
        <function-ref name="clr" scoped="" ref="0x40745630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40744ac8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40744ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40744ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40744d80"/>
        <function-ref name="toggle" scoped="" ref="0x40744e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40743010"/>
        <function-ref name="get" scoped="" ref="0x407430f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407431d0"/>
        <function-ref name="set" scoped="" ref="0x407432b0"/>
        <function-ref name="clr" scoped="" ref="0x40743390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40748a80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40748a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40748c58"/>
        <function-ref name="isInput" scoped="" ref="0x40748d38"/>
        <function-ref name="toggle" scoped="" ref="0x40748e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40748ef8"/>
        <function-ref name="get" scoped="" ref="0x40747010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407470f0"/>
        <function-ref name="set" scoped="" ref="0x407471d0"/>
        <function-ref name="clr" scoped="" ref="0x407472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40745790" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40745790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40745968"/>
        <function-ref name="isInput" scoped="" ref="0x40745a48"/>
        <function-ref name="toggle" scoped="" ref="0x40745b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40745c08"/>
        <function-ref name="get" scoped="" ref="0x40745ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40745dc8"/>
        <function-ref name="set" scoped="" ref="0x40745ea8"/>
        <function-ref name="clr" scoped="" ref="0x40744010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x407434f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x407434f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407436c8"/>
        <function-ref name="isInput" scoped="" ref="0x407437a8"/>
        <function-ref name="toggle" scoped="" ref="0x40743888"/>
        <function-ref name="isOutput" scoped="" ref="0x40743968"/>
        <function-ref name="get" scoped="" ref="0x40743a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40743b28"/>
        <function-ref name="set" scoped="" ref="0x40743c08"/>
        <function-ref name="clr" scoped="" ref="0x40743ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41036938" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41036938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41036b10"/>
        <function-ref name="isInput" scoped="" ref="0x41036bf0"/>
        <function-ref name="toggle" scoped="" ref="0x41036cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x41036db0"/>
        <function-ref name="get" scoped="" ref="0x41036e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41035010"/>
        <function-ref name="set" scoped="" ref="0x410350f0"/>
        <function-ref name="clr" scoped="" ref="0x410351d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410343b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410343b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41034588"/>
        <function-ref name="isInput" scoped="" ref="0x41034668"/>
        <function-ref name="toggle" scoped="" ref="0x41034748"/>
        <function-ref name="isOutput" scoped="" ref="0x41034828"/>
        <function-ref name="get" scoped="" ref="0x41034908"/>
        <function-ref name="makeOutput" scoped="" ref="0x410349e8"/>
        <function-ref name="set" scoped="" ref="0x41034ac8"/>
        <function-ref name="clr" scoped="" ref="0x41034ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41033d70" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41033d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41032010"/>
        <function-ref name="isInput" scoped="" ref="0x410320f0"/>
        <function-ref name="toggle" scoped="" ref="0x410321d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410322b0"/>
        <function-ref name="get" scoped="" ref="0x41032390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41032470"/>
        <function-ref name="set" scoped="" ref="0x41032550"/>
        <function-ref name="clr" scoped="" ref="0x41032630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410317f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410317f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410319d0"/>
        <function-ref name="isInput" scoped="" ref="0x41031ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41031b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41031c70"/>
        <function-ref name="get" scoped="" ref="0x41031d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41031e30"/>
        <function-ref name="set" scoped="" ref="0x41031f10"/>
        <function-ref name="clr" scoped="" ref="0x41030010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4102f228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4102f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4102f400"/>
        <function-ref name="isInput" scoped="" ref="0x4102f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4102f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4102f6a0"/>
        <function-ref name="get" scoped="" ref="0x4102f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4102f860"/>
        <function-ref name="set" scoped="" ref="0x4102f940"/>
        <function-ref name="clr" scoped="" ref="0x4102fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4102ec08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4102ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4102ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4102eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4102c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4102c0f0"/>
        <function-ref name="get" scoped="" ref="0x4102c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4102c2b0"/>
        <function-ref name="set" scoped="" ref="0x4102c390"/>
        <function-ref name="clr" scoped="" ref="0x4102c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4102b6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4102b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4102b898"/>
        <function-ref name="isInput" scoped="" ref="0x4102b978"/>
        <function-ref name="toggle" scoped="" ref="0x4102ba58"/>
        <function-ref name="isOutput" scoped="" ref="0x4102bb38"/>
        <function-ref name="get" scoped="" ref="0x4102bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4102bcf8"/>
        <function-ref name="set" scoped="" ref="0x4102bdd8"/>
        <function-ref name="clr" scoped="" ref="0x4102beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410290b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410290b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41029288"/>
        <function-ref name="isInput" scoped="" ref="0x41029368"/>
        <function-ref name="toggle" scoped="" ref="0x41029448"/>
        <function-ref name="isOutput" scoped="" ref="0x41029528"/>
        <function-ref name="get" scoped="" ref="0x41029608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410296e8"/>
        <function-ref name="set" scoped="" ref="0x410297c8"/>
        <function-ref name="clr" scoped="" ref="0x410298a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4073fe48" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4073fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40752050"/>
        <function-ref name="isInput" scoped="" ref="0x40752130"/>
        <function-ref name="toggle" scoped="" ref="0x40752210"/>
        <function-ref name="isOutput" scoped="" ref="0x407522f0"/>
        <function-ref name="get" scoped="" ref="0x407523d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407524b0"/>
        <function-ref name="set" scoped="" ref="0x40752590"/>
        <function-ref name="clr" scoped="" ref="0x40752670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40751ac8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40751ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40751ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40751d80"/>
        <function-ref name="toggle" scoped="" ref="0x40751e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40750010"/>
        <function-ref name="get" scoped="" ref="0x407500f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407501d0"/>
        <function-ref name="set" scoped="" ref="0x407502b0"/>
        <function-ref name="clr" scoped="" ref="0x40750390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40740b00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40740b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40740cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40740db8"/>
        <function-ref name="toggle" scoped="" ref="0x40740e98"/>
        <function-ref name="isOutput" scoped="" ref="0x4073f010"/>
        <function-ref name="get" scoped="" ref="0x4073f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4073f1d0"/>
        <function-ref name="set" scoped="" ref="0x4073f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4073f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x407527d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x407527d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407529a8"/>
        <function-ref name="isInput" scoped="" ref="0x40752a88"/>
        <function-ref name="toggle" scoped="" ref="0x40752b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40752c48"/>
        <function-ref name="get" scoped="" ref="0x40752d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40752e08"/>
        <function-ref name="set" scoped="" ref="0x40752ee8"/>
        <function-ref name="clr" scoped="" ref="0x40751010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x407504f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x407504f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407506c8"/>
        <function-ref name="isInput" scoped="" ref="0x407507a8"/>
        <function-ref name="toggle" scoped="" ref="0x40750888"/>
        <function-ref name="isOutput" scoped="" ref="0x40750968"/>
        <function-ref name="get" scoped="" ref="0x40750a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40750b28"/>
        <function-ref name="set" scoped="" ref="0x40750c08"/>
        <function-ref name="clr" scoped="" ref="0x40750ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4073f4f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4073f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4073f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4073f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4073f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4073f968"/>
        <function-ref name="get" scoped="" ref="0x4073fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4073fb28"/>
        <function-ref name="set" scoped="" ref="0x4073fc08"/>
        <function-ref name="clr" scoped="" ref="0x4073fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40751170" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40751170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40751348"/>
        <function-ref name="isInput" scoped="" ref="0x40751428"/>
        <function-ref name="toggle" scoped="" ref="0x40751508"/>
        <function-ref name="isOutput" scoped="" ref="0x407515e8"/>
        <function-ref name="get" scoped="" ref="0x407516c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407517a8"/>
        <function-ref name="set" scoped="" ref="0x40751888"/>
        <function-ref name="clr" scoped="" ref="0x40751968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40750e48" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40750e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074e050"/>
        <function-ref name="isInput" scoped="" ref="0x4074e130"/>
        <function-ref name="toggle" scoped="" ref="0x4074e210"/>
        <function-ref name="isOutput" scoped="" ref="0x4074e2f0"/>
        <function-ref name="get" scoped="" ref="0x4074e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074e4b0"/>
        <function-ref name="set" scoped="" ref="0x4074e590"/>
        <function-ref name="clr" scoped="" ref="0x4074e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41071538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41071538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41071710"/>
        <function-ref name="isInput" scoped="" ref="0x410717f0"/>
        <function-ref name="toggle" scoped="" ref="0x410718d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410719b0"/>
        <function-ref name="get" scoped="" ref="0x41071a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41071b70"/>
        <function-ref name="set" scoped="" ref="0x41071c50"/>
        <function-ref name="clr" scoped="" ref="0x41071d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4106f010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4106f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4106f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4106f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4106f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4106f488"/>
        <function-ref name="get" scoped="" ref="0x4106f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4106f648"/>
        <function-ref name="set" scoped="" ref="0x4106f728"/>
        <function-ref name="clr" scoped="" ref="0x4106f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4106e9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4106e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4106ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x4106eca0"/>
        <function-ref name="toggle" scoped="" ref="0x4106ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x4106ee60"/>
        <function-ref name="get" scoped="" ref="0x4106d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4106d0f0"/>
        <function-ref name="set" scoped="" ref="0x4106d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4106d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4106c538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4106c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4106c710"/>
        <function-ref name="isInput" scoped="" ref="0x4106c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4106c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4106c9b0"/>
        <function-ref name="get" scoped="" ref="0x4106ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4106cb70"/>
        <function-ref name="set" scoped="" ref="0x4106cc50"/>
        <function-ref name="clr" scoped="" ref="0x4106cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4106a010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4106a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4106a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4106a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4106a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4106a488"/>
        <function-ref name="get" scoped="" ref="0x4106a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4106a648"/>
        <function-ref name="set" scoped="" ref="0x4106a728"/>
        <function-ref name="clr" scoped="" ref="0x4106a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410699e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410699e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41069bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41069ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41069d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41069e60"/>
        <function-ref name="get" scoped="" ref="0x41068010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410680f0"/>
        <function-ref name="set" scoped="" ref="0x410681d0"/>
        <function-ref name="clr" scoped="" ref="0x410682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41067538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41067538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41067710"/>
        <function-ref name="isInput" scoped="" ref="0x410677f0"/>
        <function-ref name="toggle" scoped="" ref="0x410678d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410679b0"/>
        <function-ref name="get" scoped="" ref="0x41067a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41067b70"/>
        <function-ref name="set" scoped="" ref="0x41067c50"/>
        <function-ref name="clr" scoped="" ref="0x41067d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41065010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41065010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410651e8"/>
        <function-ref name="isInput" scoped="" ref="0x410652c8"/>
        <function-ref name="toggle" scoped="" ref="0x410653a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41065488"/>
        <function-ref name="get" scoped="" ref="0x41065568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41065648"/>
        <function-ref name="set" scoped="" ref="0x41065728"/>
        <function-ref name="clr" scoped="" ref="0x41065808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4074a4f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4074a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4074a7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4074a888"/>
        <function-ref name="isOutput" scoped="" ref="0x4074a968"/>
        <function-ref name="get" scoped="" ref="0x4074aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074ab28"/>
        <function-ref name="set" scoped="" ref="0x4074ac08"/>
        <function-ref name="clr" scoped="" ref="0x4074ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4075c170" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4075c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4075c348"/>
        <function-ref name="isInput" scoped="" ref="0x4075c428"/>
        <function-ref name="toggle" scoped="" ref="0x4075c508"/>
        <function-ref name="isOutput" scoped="" ref="0x4075c5e8"/>
        <function-ref name="get" scoped="" ref="0x4075c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4075c7a8"/>
        <function-ref name="set" scoped="" ref="0x4075c888"/>
        <function-ref name="clr" scoped="" ref="0x4075c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4074b228" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4074b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074b400"/>
        <function-ref name="isInput" scoped="" ref="0x4074b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4074b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4074b6a0"/>
        <function-ref name="get" scoped="" ref="0x4074b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074b860"/>
        <function-ref name="set" scoped="" ref="0x4074b940"/>
        <function-ref name="clr" scoped="" ref="0x4074ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4074ae48" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4074ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40749050"/>
        <function-ref name="isInput" scoped="" ref="0x40749130"/>
        <function-ref name="toggle" scoped="" ref="0x40749210"/>
        <function-ref name="isOutput" scoped="" ref="0x407492f0"/>
        <function-ref name="get" scoped="" ref="0x407493d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407494b0"/>
        <function-ref name="set" scoped="" ref="0x40749590"/>
        <function-ref name="clr" scoped="" ref="0x40749670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4075cac8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4075cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4075cca0"/>
        <function-ref name="isInput" scoped="" ref="0x4075cd80"/>
        <function-ref name="toggle" scoped="" ref="0x4075ce60"/>
        <function-ref name="isOutput" scoped="" ref="0x4075b010"/>
        <function-ref name="get" scoped="" ref="0x4075b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4075b1d0"/>
        <function-ref name="set" scoped="" ref="0x4075b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4075b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4074bb80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4074bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074bd58"/>
        <function-ref name="isInput" scoped="" ref="0x4074be38"/>
        <function-ref name="toggle" scoped="" ref="0x4074bf18"/>
        <function-ref name="isOutput" scoped="" ref="0x4074a010"/>
        <function-ref name="get" scoped="" ref="0x4074a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074a1d0"/>
        <function-ref name="set" scoped="" ref="0x4074a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4074a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x407497d0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x407497d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407499a8"/>
        <function-ref name="isInput" scoped="" ref="0x40749a88"/>
        <function-ref name="toggle" scoped="" ref="0x40749b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40749c48"/>
        <function-ref name="get" scoped="" ref="0x40749d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40749e08"/>
        <function-ref name="set" scoped="" ref="0x40749ee8"/>
        <function-ref name="clr" scoped="" ref="0x4075c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4075b4f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4075b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4075b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4075b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4075b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4075b968"/>
        <function-ref name="get" scoped="" ref="0x4075ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4075bb28"/>
        <function-ref name="set" scoped="" ref="0x4075bc08"/>
        <function-ref name="clr" scoped="" ref="0x4075bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410a9418" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410a9418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410a95f0"/>
        <function-ref name="isInput" scoped="" ref="0x410a96d0"/>
        <function-ref name="toggle" scoped="" ref="0x410a97b0"/>
        <function-ref name="isOutput" scoped="" ref="0x410a9890"/>
        <function-ref name="get" scoped="" ref="0x410a9970"/>
        <function-ref name="makeOutput" scoped="" ref="0x410a9a50"/>
        <function-ref name="set" scoped="" ref="0x410a9b30"/>
        <function-ref name="clr" scoped="" ref="0x410a9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410a8de0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410a8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410a7010"/>
        <function-ref name="isInput" scoped="" ref="0x410a70f0"/>
        <function-ref name="toggle" scoped="" ref="0x410a71d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410a72b0"/>
        <function-ref name="get" scoped="" ref="0x410a7390"/>
        <function-ref name="makeOutput" scoped="" ref="0x410a7470"/>
        <function-ref name="set" scoped="" ref="0x410a7550"/>
        <function-ref name="clr" scoped="" ref="0x410a7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410a67f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410a67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410a69d0"/>
        <function-ref name="isInput" scoped="" ref="0x410a6ab0"/>
        <function-ref name="toggle" scoped="" ref="0x410a6b90"/>
        <function-ref name="isOutput" scoped="" ref="0x410a6c70"/>
        <function-ref name="get" scoped="" ref="0x410a6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x410a6e30"/>
        <function-ref name="set" scoped="" ref="0x410a6f10"/>
        <function-ref name="clr" scoped="" ref="0x410a5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410a4228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410a4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410a4400"/>
        <function-ref name="isInput" scoped="" ref="0x410a44e0"/>
        <function-ref name="toggle" scoped="" ref="0x410a45c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410a46a0"/>
        <function-ref name="get" scoped="" ref="0x410a4780"/>
        <function-ref name="makeOutput" scoped="" ref="0x410a4860"/>
        <function-ref name="set" scoped="" ref="0x410a4940"/>
        <function-ref name="clr" scoped="" ref="0x410a4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410a2c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410a2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410a2de0"/>
        <function-ref name="isInput" scoped="" ref="0x410a2ec0"/>
        <function-ref name="toggle" scoped="" ref="0x410a1010"/>
        <function-ref name="isOutput" scoped="" ref="0x410a10f0"/>
        <function-ref name="get" scoped="" ref="0x410a11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410a12b0"/>
        <function-ref name="set" scoped="" ref="0x410a1390"/>
        <function-ref name="clr" scoped="" ref="0x410a1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410a06c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410a06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410a0898"/>
        <function-ref name="isInput" scoped="" ref="0x410a0978"/>
        <function-ref name="toggle" scoped="" ref="0x410a0a58"/>
        <function-ref name="isOutput" scoped="" ref="0x410a0b38"/>
        <function-ref name="get" scoped="" ref="0x410a0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x410a0cf8"/>
        <function-ref name="set" scoped="" ref="0x410a0dd8"/>
        <function-ref name="clr" scoped="" ref="0x410a0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4109e0b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4109e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4109e288"/>
        <function-ref name="isInput" scoped="" ref="0x4109e368"/>
        <function-ref name="toggle" scoped="" ref="0x4109e448"/>
        <function-ref name="isOutput" scoped="" ref="0x4109e528"/>
        <function-ref name="get" scoped="" ref="0x4109e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4109e6e8"/>
        <function-ref name="set" scoped="" ref="0x4109e7c8"/>
        <function-ref name="clr" scoped="" ref="0x4109e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4109da88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4109da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4109dc60"/>
        <function-ref name="isInput" scoped="" ref="0x4109dd40"/>
        <function-ref name="toggle" scoped="" ref="0x4109de20"/>
        <function-ref name="isOutput" scoped="" ref="0x4109df00"/>
        <function-ref name="get" scoped="" ref="0x410d5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410d50f0"/>
        <function-ref name="set" scoped="" ref="0x410d51d0"/>
        <function-ref name="clr" scoped="" ref="0x410d52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407563b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407563b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40756588"/>
        <function-ref name="isInput" scoped="" ref="0x40756668"/>
        <function-ref name="toggle" scoped="" ref="0x40756748"/>
        <function-ref name="isOutput" scoped="" ref="0x40756828"/>
        <function-ref name="get" scoped="" ref="0x40756908"/>
        <function-ref name="makeOutput" scoped="" ref="0x407569e8"/>
        <function-ref name="set" scoped="" ref="0x40756ac8"/>
        <function-ref name="clr" scoped="" ref="0x40756ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40770978" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40770978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40770b50"/>
        <function-ref name="isInput" scoped="" ref="0x40770c30"/>
        <function-ref name="toggle" scoped="" ref="0x40770d10"/>
        <function-ref name="isOutput" scoped="" ref="0x40770df0"/>
        <function-ref name="get" scoped="" ref="0x40770ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4076f010"/>
        <function-ref name="set" scoped="" ref="0x4076f0f0"/>
        <function-ref name="clr" scoped="" ref="0x4076f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4076d010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4076d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4076d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4076d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4076d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4076d488"/>
        <function-ref name="get" scoped="" ref="0x4076d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4076d648"/>
        <function-ref name="set" scoped="" ref="0x4076d728"/>
        <function-ref name="clr" scoped="" ref="0x4076d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4076a5e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4076a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4076a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x4076a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x4076a980"/>
        <function-ref name="isOutput" scoped="" ref="0x4076aa60"/>
        <function-ref name="get" scoped="" ref="0x4076ab40"/>
        <function-ref name="makeOutput" scoped="" ref="0x4076ac20"/>
        <function-ref name="set" scoped="" ref="0x4076ad00"/>
        <function-ref name="clr" scoped="" ref="0x4076ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40768cb8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40768cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40768e90"/>
        <function-ref name="isInput" scoped="" ref="0x40767010"/>
        <function-ref name="toggle" scoped="" ref="0x407670f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407671d0"/>
        <function-ref name="get" scoped="" ref="0x407672b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40767390"/>
        <function-ref name="set" scoped="" ref="0x40767470"/>
        <function-ref name="clr" scoped="" ref="0x40767550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407793b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407793b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40779588"/>
        <function-ref name="isInput" scoped="" ref="0x40779668"/>
        <function-ref name="toggle" scoped="" ref="0x40779748"/>
        <function-ref name="isOutput" scoped="" ref="0x40779828"/>
        <function-ref name="get" scoped="" ref="0x40779908"/>
        <function-ref name="makeOutput" scoped="" ref="0x407799e8"/>
        <function-ref name="set" scoped="" ref="0x40779ac8"/>
        <function-ref name="clr" scoped="" ref="0x40779ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40776a08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40776a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40776be0"/>
        <function-ref name="isInput" scoped="" ref="0x40776cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40776da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40776e80"/>
        <function-ref name="get" scoped="" ref="0x40775010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407750f0"/>
        <function-ref name="set" scoped="" ref="0x407751d0"/>
        <function-ref name="clr" scoped="" ref="0x407752b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40773090" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40773090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40773268"/>
        <function-ref name="isInput" scoped="" ref="0x40773348"/>
        <function-ref name="toggle" scoped="" ref="0x40773428"/>
        <function-ref name="isOutput" scoped="" ref="0x40773508"/>
        <function-ref name="get" scoped="" ref="0x407735e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407736c8"/>
        <function-ref name="set" scoped="" ref="0x407737a8"/>
        <function-ref name="clr" scoped="" ref="0x40773888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40771590" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40771590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40771768"/>
        <function-ref name="isInput" scoped="" ref="0x40771848"/>
        <function-ref name="toggle" scoped="" ref="0x40771928"/>
        <function-ref name="isOutput" scoped="" ref="0x40771a08"/>
        <function-ref name="get" scoped="" ref="0x40771ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40771bc8"/>
        <function-ref name="set" scoped="" ref="0x40771ca8"/>
        <function-ref name="clr" scoped="" ref="0x40771d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40782a88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40782a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40782c60"/>
        <function-ref name="isInput" scoped="" ref="0x40782d40"/>
        <function-ref name="toggle" scoped="" ref="0x40782e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40782f00"/>
        <function-ref name="get" scoped="" ref="0x40781010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407810f0"/>
        <function-ref name="set" scoped="" ref="0x407811d0"/>
        <function-ref name="clr" scoped="" ref="0x407812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4077f010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4077f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4077f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4077f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4077f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4077f488"/>
        <function-ref name="get" scoped="" ref="0x4077f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4077f648"/>
        <function-ref name="set" scoped="" ref="0x4077f728"/>
        <function-ref name="clr" scoped="" ref="0x4077f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4077c538" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4077c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4077c710"/>
        <function-ref name="isInput" scoped="" ref="0x4077c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4077c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4077c9b0"/>
        <function-ref name="get" scoped="" ref="0x4077ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4077cb70"/>
        <function-ref name="set" scoped="" ref="0x4077cc50"/>
        <function-ref name="clr" scoped="" ref="0x4077cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4078ea88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4078ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4078ec60"/>
        <function-ref name="isInput" scoped="" ref="0x4078ed40"/>
        <function-ref name="toggle" scoped="" ref="0x4078ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x4078ef00"/>
        <function-ref name="get" scoped="" ref="0x4078d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4078d0f0"/>
        <function-ref name="set" scoped="" ref="0x4078d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4078d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407b1650" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407b1650"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404057d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404057d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407b1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x407b1a00" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x407b1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x407b1bd8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x407b1cb8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x407b1d98"/>
        <function-ref name="actualMicro" scoped="" ref="0x407b1e78"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x407b0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x407b5da8" loc="60:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x407b5da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x407b5040" loc="57:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x407b5040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x407b5218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x407b59a0" loc="59:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x407b59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407b5b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x407b53d8" loc="58:/home/branco/gitspace/Terra/TerraVM/src/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x407b53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407b55b0"/>
        <function-ref name="taskLoop" scoped="" ref="0x407b5690"/>
        <function-ref name="runNextTask" scoped="" ref="0x407b5770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4040e718" loc="48:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4040e718"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4040e8f0"/>
        <function-ref name="runTask" scoped="" ref="0x4040e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40404010" loc="47:/home/branco/gitspace/Terra/TerraVM/src/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40404010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404041e8"/>
        <function-ref name="taskLoop" scoped="" ref="0x404042c8"/>
        <function-ref name="runNextTask" scoped="" ref="0x404043a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40480670" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40480670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40480848"/>
        <function-ref name="runTask" scoped="" ref="0x40480928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4047d310" loc="57:/home/branco/gitspace/Terra/TerraVM/src/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4047d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4047d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4047adf0" loc="55:/home/branco/gitspace/Terra/TerraVM/src/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4047adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40480010"/>
        <function-ref name="taskLoop" scoped="" ref="0x404800f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x404801d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x404948a8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x404948a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40494a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40403bd8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40403bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40403db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4048f8c0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4048f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4048fa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProgReqTimerTask" ref="0x40813e48" loc="141:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProgReqTimerTask" scoped="" ref="0x40813e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40811050"/>
        <function-ref name="runTask" scoped="" ref="0x40811130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSRadio" ref="0x407c3c48" loc="19:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSRadio" scoped="" ref="0x407c3c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c3e20"/>
        <function-ref name="receive" scoped="" ref="0x407c3f00"/>
        <function-ref name="sendDoneAck" scoped="" ref="0x407c2010"/>
        <function-ref name="source" scoped="" ref="0x407c20f0"/>
        <function-ref name="sendDone" scoped="" ref="0x407c21d0"/>
        <function-ref name="setRFPower" scoped="" ref="0x407c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataFullTimer" ref="0x40809ae0" loc="50:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataFullTimer" scoped="" ref="0x40809ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408066a8"/>
        <function-ref name="fired" scoped="" ref="0x40808938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40806068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40808de8"/>
        <function-ref name="getdt" scoped="" ref="0x40806b58"/>
        <function-ref name="gett0" scoped="" ref="0x40806900"/>
        <function-ref name="isRunning" scoped="" ref="0x40808b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408081e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40806388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40808460"/>
        <function-ref name="stop" scoped="" ref="0x408086e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x407cc1f8" loc="23:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x407cc1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407cc3d0"/>
        <function-ref name="source" scoped="" ref="0x407cc4b0"/>
        <function-ref name="address" scoped="" ref="0x407cc590"/>
        <function-ref name="destination" scoped="" ref="0x407cc670"/>
        <function-ref name="setSource" scoped="" ref="0x407cc750"/>
        <function-ref name="setDestination" scoped="" ref="0x407cc830"/>
        <function-ref name="type" scoped="" ref="0x407cc910"/>
        <function-ref name="setType" scoped="" ref="0x407cc9f0"/>
        <function-ref name="isForMe" scoped="" ref="0x407ccad0"/>
        <function-ref name="setGroup" scoped="" ref="0x407ccbb0"/>
        <function-ref name="localGroup" scoped="" ref="0x407ccc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMAux" ref="0x407e1420" loc="29:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMAux" scoped="" ref="0x407e1420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMAux"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x407e1678"/>
        <function-ref name="getPower" scoped="" ref="0x407e1758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNextMsg" ref="0x40878e30" loc="1055:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNextMsg" scoped="" ref="0x40878e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40877050"/>
        <function-ref name="runTask" scoped="" ref="0x40877130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSender" ref="0x407e8b50" loc="27:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSender" scoped="" ref="0x407e8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e8d28"/>
        <function-ref name="getPayload" scoped="" ref="0x407e8e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e8ee8"/>
        <function-ref name="cancel" scoped="" ref="0x407c9010"/>
        <function-ref name="sendDone" scoped="" ref="0x407c90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x407c1010" loc="24:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x407c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407c11e8"/>
        <function-ref name="stopDone" scoped="" ref="0x407c12c8"/>
        <function-ref name="start" scoped="" ref="0x407c13a8"/>
        <function-ref name="stop" scoped="" ref="0x407c1488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSTimerAsync" ref="0x407c4bb0" loc="17:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerAsync" scoped="" ref="0x407c4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407c31d0"/>
        <function-ref name="fired" scoped="" ref="0x407c4e68"/>
        <function-ref name="isRunning" scoped="" ref="0x407c3010"/>
        <function-ref name="startOneShot" scoped="" ref="0x407c30f0"/>
        <function-ref name="stop" scoped="" ref="0x407c4d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x407d83c8" loc="25:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407d83c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d85a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d8680"/>
        <function-ref name="getPayload" scoped="" ref="0x407d8760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d8840"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d8920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40805d60" loc="54:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40805d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40804010"/>
        <function-ref name="rand32" scoped="" ref="0x408040f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceiver" ref="0x407d6100" loc="28:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceiver" scoped="" ref="0x407d6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d62d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="outQ" ref="0x407e34a0" loc="43:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="outQ" scoped="" ref="0x407e34a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x407e3758"/>
        <function-ref name="size" scoped="" ref="0x407e3e58"/>
        <function-ref name="element" scoped="" ref="0x407e3838"/>
        <function-ref name="get" scoped="" ref="0x407e3918"/>
        <function-ref name="read" scoped="" ref="0x407e39f8"/>
        <function-ref name="remove" scoped="" ref="0x407e3ad8"/>
        <function-ref name="maxSize" scoped="" ref="0x407e3bb8"/>
        <function-ref name="put" scoped="" ref="0x407e3c98"/>
        <function-ref name="isFree" scoped="" ref="0x407e3d78"/>
        <function-ref name="dataReady" scoped="" ref="0x407e3678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="procInputEvent" ref="0x4085a040" loc="902:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="procInputEvent" scoped="" ref="0x4085a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4085a218"/>
        <function-ref name="runTask" scoped="" ref="0x4085a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TOSBoot" ref="0x407c24a8" loc="21:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TOSBoot" scoped="" ref="0x407c24a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x407c2680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x407fa010" loc="47:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407fa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407f9b00"/>
        <function-ref name="fired" scoped="" ref="0x407fad90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407f94c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x407f9268"/>
        <function-ref name="getdt" scoped="" ref="0x407f8010"/>
        <function-ref name="gett0" scoped="" ref="0x407f9d58"/>
        <function-ref name="isRunning" scoped="" ref="0x407f9010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407fa638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407f97e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x407fa8b8"/>
        <function-ref name="stop" scoped="" ref="0x407fab38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAck" ref="0x407c0088" loc="26:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAck" scoped="" ref="0x407c0088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407c0260"/>
        <function-ref name="noAck" scoped="" ref="0x407c0340"/>
        <function-ref name="wasAcked" scoped="" ref="0x407c0420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMessage" ref="0x4087c248" loc="1008:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMessage" scoped="" ref="0x4087c248"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4087c520"/>
        <function-ref name="runTask" scoped="" ref="0x4087c600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSUpload" ref="0x407c3388" loc="18:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSUpload" scoped="" ref="0x407c3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSUpload"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x407c3aa0"/>
        <function-ref name="setEnv" scoped="" ref="0x407c3640"/>
        <function-ref name="loadSection" scoped="" ref="0x407c3720"/>
        <function-ref name="getSection" scoped="" ref="0x407c3800"/>
        <function-ref name="resetMemory" scoped="" ref="0x407c38e0"/>
        <function-ref name="start" scoped="" ref="0x407c39c0"/>
        <function-ref name="getEnv" scoped="" ref="0x407c3560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProgReqTimer" ref="0x407f5720" loc="49:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProgReqTimer" scoped="" ref="0x407f5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40809248"/>
        <function-ref name="fired" scoped="" ref="0x407f44e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407f4bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x407f4998"/>
        <function-ref name="getdt" scoped="" ref="0x408096f8"/>
        <function-ref name="gett0" scoped="" ref="0x408094a0"/>
        <function-ref name="isRunning" scoped="" ref="0x407f4740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407f5d48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407f4f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x407f4010"/>
        <function-ref name="stop" scoped="" ref="0x407f4290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSBoot" ref="0x407c4010" loc="15:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSBoot" scoped="" ref="0x407c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x407c41e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerVM" ref="0x407fcc10" loc="46:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerVM" scoped="" ref="0x407fcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407eb730"/>
        <function-ref name="fired" scoped="" ref="0x407ec9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407eb0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x407ece60"/>
        <function-ref name="getdt" scoped="" ref="0x407ebbe0"/>
        <function-ref name="gett0" scoped="" ref="0x407eb988"/>
        <function-ref name="isRunning" scoped="" ref="0x407ecc08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407ec258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407eb410"/>
        <function-ref name="startOneShot" scoped="" ref="0x407ec4d8"/>
        <function-ref name="stop" scoped="" ref="0x407ec758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inQ" ref="0x407ed8e0" loc="42:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inQ" scoped="" ref="0x407ed8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x407edb98"/>
        <function-ref name="size" scoped="" ref="0x407e32b0"/>
        <function-ref name="element" scoped="" ref="0x407edc78"/>
        <function-ref name="get" scoped="" ref="0x407edd58"/>
        <function-ref name="read" scoped="" ref="0x407ede38"/>
        <function-ref name="remove" scoped="" ref="0x407edf18"/>
        <function-ref name="maxSize" scoped="" ref="0x407e3010"/>
        <function-ref name="put" scoped="" ref="0x407e30f0"/>
        <function-ref name="isFree" scoped="" ref="0x407e31d0"/>
        <function-ref name="dataReady" scoped="" ref="0x407edab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BM" ref="0x407f29f0" loc="40:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BM" scoped="" ref="0x407f29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="vmBitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x407f2bc8"/>
        <function-ref name="clear" scoped="" ref="0x407f2ca8"/>
        <function-ref name="toggle" scoped="" ref="0x407f2d88"/>
        <function-ref name="resetRange" scoped="" ref="0x407f2e68"/>
        <function-ref name="get" scoped="" ref="0x407e6010"/>
        <function-ref name="countPend" scoped="" ref="0x407e60f0"/>
        <function-ref name="assign" scoped="" ref="0x407e61d0"/>
        <function-ref name="setAll" scoped="" ref="0x407e62b0"/>
        <function-ref name="set" scoped="" ref="0x407e6390"/>
        <function-ref name="isAllBitSet" scoped="" ref="0x407e6470"/>
        <function-ref name="size" scoped="" ref="0x407e6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTimer" ref="0x407f83a8" loc="48:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTimer" scoped="" ref="0x407f83a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407f7e98"/>
        <function-ref name="fired" scoped="" ref="0x407f7150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407f7858"/>
        <function-ref name="isOneShot" scoped="" ref="0x407f7600"/>
        <function-ref name="getdt" scoped="" ref="0x407f5368"/>
        <function-ref name="gett0" scoped="" ref="0x407f5110"/>
        <function-ref name="isRunning" scoped="" ref="0x407f73a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407f89d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407f7b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x407f8c50"/>
        <function-ref name="stop" scoped="" ref="0x407f8ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BSTimerVM" ref="0x407c4410" loc="16:BasicServicesP.nc">
      <component-ref qname="BasicServicesP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSTimerVM" scoped="" ref="0x407c4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSTimer"/>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407c4968"/>
        <function-ref name="fired" scoped="" ref="0x407c46c8"/>
        <function-ref name="isRunning" scoped="" ref="0x407c47a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x407c4888"/>
        <function-ref name="stop" scoped="" ref="0x407c45e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4089dbf0" loc="4:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4089dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4089ddc8"/>
        <function-ref name="stopDone" scoped="" ref="0x4089dea8"/>
        <function-ref name="start" scoped="" ref="0x4089a010"/>
        <function-ref name="stop" scoped="" ref="0x4089a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMAux" ref="0x40897268" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMAux" scoped="" ref="0x40897268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMAux"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40897440"/>
        <function-ref name="getPower" scoped="" ref="0x40897520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4089a550" loc="6:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4089a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089a728"/>
        <function-ref name="getPayload" scoped="" ref="0x4089a808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089a8e8"/>
        <function-ref name="cancel" scoped="" ref="0x4089a9c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4089aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408995c8" loc="8:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408995c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408997a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40899920" loc="10:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40899920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40899af8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40899bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40899cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40899d98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40899e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4089af10" loc="7:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4089af10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40899108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40898cf8" loc="12:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40898cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40898ed0"/>
        <function-ref name="noAck" scoped="" ref="0x40897010"/>
        <function-ref name="wasAcked" scoped="" ref="0x408970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40898040" loc="11:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/TerraActiveMessageC.nc">
      <component-ref qname="TerraActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40898040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40898218"/>
        <function-ref name="source" scoped="" ref="0x408982f8"/>
        <function-ref name="address" scoped="" ref="0x408983d8"/>
        <function-ref name="destination" scoped="" ref="0x408984b8"/>
        <function-ref name="setSource" scoped="" ref="0x40898598"/>
        <function-ref name="setDestination" scoped="" ref="0x40898678"/>
        <function-ref name="type" scoped="" ref="0x40898758"/>
        <function-ref name="setType" scoped="" ref="0x40898838"/>
        <function-ref name="isForMe" scoped="" ref="0x40898918"/>
        <function-ref name="setGroup" scoped="" ref="0x408989f8"/>
        <function-ref name="localGroup" scoped="" ref="0x40898ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40897d00" loc="59:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40897d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40897ed8"/>
        <function-ref name="stopDone" scoped="" ref="0x408ac010"/>
        <function-ref name="start" scoped="" ref="0x408ac0f0"/>
        <function-ref name="stop" scoped="" ref="0x408ac1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408ac630" loc="61:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408ac630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ac808"/>
        <function-ref name="getPayload" scoped="" ref="0x408ac8e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ac9c8"/>
        <function-ref name="cancel" scoped="" ref="0x408acaa8"/>
        <function-ref name="sendDone" scoped="" ref="0x408acb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408aa6a8" loc="63:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408aa6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408aa880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408aaa00" loc="65:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408aaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408aabd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408aacb8"/>
        <function-ref name="getPayload" scoped="" ref="0x408aad98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408aae78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408a9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x408a61a0" loc="69:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408a61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408a6ca0"/>
        <function-ref name="clear" scoped="" ref="0x408b8068"/>
        <function-ref name="isValid" scoped="" ref="0x408a68f0"/>
        <function-ref name="set" scoped="" ref="0x408b8418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408b2068" loc="70:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408b2068"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408b2240"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408b2320"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408b2400"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408b24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408aa010" loc="62:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408aa1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408a9e60" loc="67:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408a8050"/>
        <function-ref name="noAck" scoped="" ref="0x408a8130"/>
        <function-ref name="wasAcked" scoped="" ref="0x408a8210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408a91a8" loc="66:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408a91a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408a9380"/>
        <function-ref name="source" scoped="" ref="0x408a9460"/>
        <function-ref name="address" scoped="" ref="0x408a9540"/>
        <function-ref name="destination" scoped="" ref="0x408a9620"/>
        <function-ref name="setSource" scoped="" ref="0x408a9700"/>
        <function-ref name="setDestination" scoped="" ref="0x408a97e0"/>
        <function-ref name="type" scoped="" ref="0x408a98c0"/>
        <function-ref name="setType" scoped="" ref="0x408a99a0"/>
        <function-ref name="isForMe" scoped="" ref="0x408a9a80"/>
        <function-ref name="setGroup" scoped="" ref="0x408a9b60"/>
        <function-ref name="localGroup" scoped="" ref="0x408a9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408a27c0" loc="68:/opt/tinyos-2.1.2/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408a27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408a72d8"/>
        <function-ref name="clear" scoped="" ref="0x408a7688"/>
        <function-ref name="isValid" scoped="" ref="0x408a2f10"/>
        <function-ref name="set" scoped="" ref="0x408a7a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408b2df0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408b2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408b0010"/>
        <function-ref name="stopDone" scoped="" ref="0x408b00f0"/>
        <function-ref name="start" scoped="" ref="0x408b01d0"/>
        <function-ref name="stop" scoped="" ref="0x408b02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408c33a0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408c33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408c3ea0"/>
        <function-ref name="clear" scoped="" ref="0x408c1280"/>
        <function-ref name="isValid" scoped="" ref="0x408c3af0"/>
        <function-ref name="set" scoped="" ref="0x408c1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408b0710" loc="56:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408b0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b08e8"/>
        <function-ref name="getPayload" scoped="" ref="0x408b09c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408b0aa8"/>
        <function-ref name="cancel" scoped="" ref="0x408b0b88"/>
        <function-ref name="sendDone" scoped="" ref="0x408b0c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408af798" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408af798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408af970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408ae7b0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408ae7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408ae988"/>
        <function-ref name="payloadLength" scoped="" ref="0x408aea68"/>
        <function-ref name="getPayload" scoped="" ref="0x408aeb48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408aec28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408aed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x408c2980" loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408c2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408c54a8"/>
        <function-ref name="clear" scoped="" ref="0x408c5858"/>
        <function-ref name="isValid" scoped="" ref="0x408c50f8"/>
        <function-ref name="set" scoped="" ref="0x408c5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x408ba228" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x408ba228"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ba400"/>
        <function-ref name="isSet" scoped="" ref="0x408ba4e0"/>
        <function-ref name="cancel" scoped="" ref="0x408ba5c0"/>
        <function-ref name="set" scoped="" ref="0x408ba6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408af100" loc="57:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408af2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408ba890" loc="67:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408ba890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408baa68"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408bab48"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408bac28"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408bad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408aef28" loc="61:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408aef28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408c6110"/>
        <function-ref name="noAck" scoped="" ref="0x408c61f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408c62d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408afb08" loc="59:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408afb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408afce0"/>
        <function-ref name="source" scoped="" ref="0x408afdc0"/>
        <function-ref name="address" scoped="" ref="0x408afea0"/>
        <function-ref name="destination" scoped="" ref="0x408ae010"/>
        <function-ref name="setSource" scoped="" ref="0x408ae0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x408ae1d0"/>
        <function-ref name="type" scoped="" ref="0x408ae2b0"/>
        <function-ref name="setType" scoped="" ref="0x408ae390"/>
        <function-ref name="isForMe" scoped="" ref="0x408ae470"/>
        <function-ref name="setGroup" scoped="" ref="0x408ae550"/>
        <function-ref name="localGroup" scoped="" ref="0x408ae630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x408c2328" loc="62:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408c2328"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x408c2500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408cca18" loc="57:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408cca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ccbf0"/>
        <function-ref name="getPayload" scoped="" ref="0x408cccd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ccdb0"/>
        <function-ref name="cancel" scoped="" ref="0x408cce90"/>
        <function-ref name="sendDone" scoped="" ref="0x408d0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408d0220" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408d0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d03f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408c0a78" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408c0a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c0c50"/>
        <function-ref name="getPayload" scoped="" ref="0x408c0d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c0e10"/>
        <function-ref name="cancel" scoped="" ref="0x408c0ef0"/>
        <function-ref name="sendDone" scoped="" ref="0x408d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408d2b10" loc="53:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408d2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d2ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408d05d8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408d05d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d07b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d0890"/>
        <function-ref name="getPayload" scoped="" ref="0x408d0970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d0a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408d2478" loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408d2478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d2650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408d2e80" loc="54:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408d2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408d1070"/>
        <function-ref name="source" scoped="" ref="0x408d1150"/>
        <function-ref name="address" scoped="" ref="0x408d1230"/>
        <function-ref name="destination" scoped="" ref="0x408d1310"/>
        <function-ref name="setSource" scoped="" ref="0x408d13f0"/>
        <function-ref name="setDestination" scoped="" ref="0x408d14d0"/>
        <function-ref name="type" scoped="" ref="0x408d15b0"/>
        <function-ref name="setType" scoped="" ref="0x408d1690"/>
        <function-ref name="isForMe" scoped="" ref="0x408d1770"/>
        <function-ref name="setGroup" scoped="" ref="0x408d1850"/>
        <function-ref name="localGroup" scoped="" ref="0x408d1930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408bf8e8" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408bf8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408bfac0"/>
        <function-ref name="stopDone" scoped="" ref="0x408bfba0"/>
        <function-ref name="start" scoped="" ref="0x408bfc80"/>
        <function-ref name="stop" scoped="" ref="0x408bfd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408f2920" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408f2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408f2af8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408f2bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x408f2cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f2d98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408f2e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408bfed0" loc="67:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408bfed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f20c0"/>
        <function-ref name="getPayload" scoped="" ref="0x408f21a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f2280"/>
        <function-ref name="cancel" scoped="" ref="0x408f2360"/>
        <function-ref name="sendDone" scoped="" ref="0x408f2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408ee790" loc="76:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408ee790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408ee968"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408eea48"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408eeb28"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408eec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x408f0ce8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x408f0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x408f0ec0"/>
        <function-ref name="enableCca" scoped="" ref="0x408ef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40907100" loc="78:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40907100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40907c00"/>
        <function-ref name="clear" scoped="" ref="0x40904010"/>
        <function-ref name="isValid" scoped="" ref="0x40907850"/>
        <function-ref name="set" scoped="" ref="0x409043c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408f25c8" loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408f25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40902308" loc="80:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40902308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409024e0"/>
        <function-ref name="isSet" scoped="" ref="0x409025c0"/>
        <function-ref name="cancel" scoped="" ref="0x409026a0"/>
        <function-ref name="set" scoped="" ref="0x40902780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40906d90" loc="73:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40906d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408ee010"/>
        <function-ref name="noAck" scoped="" ref="0x408ee0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408ee1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x409068b8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x409068b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x40906a90"/>
        <function-ref name="initial" scoped="" ref="0x40906b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40904af8" loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40904af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409036b8"/>
        <function-ref name="clear" scoped="" ref="0x40903a68"/>
        <function-ref name="isValid" scoped="" ref="0x40903308"/>
        <function-ref name="set" scoped="" ref="0x40903e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x408ee3c8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x408ee3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x408ee5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40909878" loc="67:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40909878"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40909a50"/>
        <function-ref name="stopDone" scoped="" ref="0x40909b30"/>
        <function-ref name="start" scoped="" ref="0x40909c10"/>
        <function-ref name="stop" scoped="" ref="0x40909cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40924300" loc="82:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40924300"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404554e0"/>
            <typename><typedef-ref name="TMicro" ref="0x404556a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40924ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setWakeupTask" ref="0x40938968" loc="119:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setWakeupTask" scoped="" ref="0x40938968"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40938b40"/>
        <function-ref name="runTask" scoped="" ref="0x40938c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopDone" ref="0x40945648" loc="186:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopDone" scoped="" ref="0x40945648"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40945820"/>
        <function-ref name="runTask" scoped="" ref="0x40945900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiNoiseFloor" ref="0x409223d0" loc="84:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiNoiseFloor" scoped="" ref="0x409223d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40922a18"/>
        <function-ref name="readDone" scoped="" ref="0x40922c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40929890" loc="80:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40929890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40929a68"/>
        <function-ref name="rand32" scoped="" ref="0x40929b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409087f8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409087f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x409089d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40908ab0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40908b90"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40908c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x40909ea0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x40909ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x409080c0"/>
        <function-ref name="enableCca" scoped="" ref="0x409081a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409094e0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409094e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409096b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiCheckChannel" ref="0x40926178" loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiCheckChannel" scoped="" ref="0x40926178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409267c0"/>
        <function-ref name="readDone" scoped="" ref="0x40926a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x40929378" loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x40929378"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40929550"/>
        <function-ref name="settled" scoped="" ref="0x40929630"/>
        <function-ref name="adjust" scoped="" ref="0x40929710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepCheck" ref="0x40955240" loc="304:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sleepCheck" scoped="" ref="0x40955240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40955418"/>
        <function-ref name="runTask" scoped="" ref="0x409554f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WakeupTimer" ref="0x40929e20" loc="81:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WakeupTimer" scoped="" ref="0x40929e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4092a920"/>
        <function-ref name="fired" scoped="" ref="0x40917bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4092a2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4092a088"/>
        <function-ref name="getdt" scoped="" ref="0x4092add0"/>
        <function-ref name="gett0" scoped="" ref="0x4092ab78"/>
        <function-ref name="isRunning" scoped="" ref="0x40917e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40917468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4092a600"/>
        <function-ref name="startOneShot" scoped="" ref="0x409176e8"/>
        <function-ref name="stop" scoped="" ref="0x40917968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioInit" ref="0x40908ec8" loc="73:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioInit" scoped="" ref="0x40908ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409210c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adjustSquelch" ref="0x40953b98" loc="327:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adjustSquelch" scoped="" ref="0x40953b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40953d70"/>
        <function-ref name="runTask" scoped="" ref="0x40953e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x4092b1c0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x4092b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x4092b398"/>
        <function-ref name="biasOn" scoped="" ref="0x4092b478"/>
        <function-ref name="getRFPower" scoped="" ref="0x4092b558"/>
        <function-ref name="tuneManual" scoped="" ref="0x4092b638"/>
        <function-ref name="selectLock" scoped="" ref="0x4092b718"/>
        <function-ref name="init" scoped="" ref="0x4092b7f8"/>
        <function-ref name="getLock" scoped="" ref="0x4092b8d8"/>
        <function-ref name="coreOn" scoped="" ref="0x4092b9b8"/>
        <function-ref name="txMode" scoped="" ref="0x4092ba98"/>
        <function-ref name="getLOStatus" scoped="" ref="0x4092bb78"/>
        <function-ref name="rxMode" scoped="" ref="0x4092bc58"/>
        <function-ref name="off" scoped="" ref="0x4092bd38"/>
        <function-ref name="setRFPower" scoped="" ref="0x4092be18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioControl" ref="0x4091e2f0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioControl" scoped="" ref="0x4091e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4091e4c8"/>
        <function-ref name="stop" scoped="" ref="0x4091e5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiPulseCheck" ref="0x40926ef0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiPulseCheck" scoped="" ref="0x40926ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093b578"/>
        <function-ref name="readDone" scoped="" ref="0x4093b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x40908350" loc="69:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x40908350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x40908528"/>
        <function-ref name="initial" scoped="" ref="0x40908608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadio" ref="0x40919af8" loc="75:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x40919af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x40919cd0"/>
        <function-ref name="listen" scoped="" ref="0x40919db0"/>
        <function-ref name="syncing" scoped="" ref="0x40919e90"/>
        <function-ref name="rxDone" scoped="" ref="0x40920010"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x409200f0"/>
        <function-ref name="idleByte" scoped="" ref="0x409201d0"/>
        <function-ref name="cts" scoped="" ref="0x409202b0"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x40920390"/>
        <function-ref name="sendDone" scoped="" ref="0x40920470"/>
        <function-ref name="off" scoped="" ref="0x40920550"/>
        <function-ref name="getTxMessage" scoped="" ref="0x40920630"/>
        <function-ref name="rx" scoped="" ref="0x40920710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4097a870" loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4097a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4097aa48"/>
        <function-ref name="payloadLength" scoped="" ref="0x4097ab28"/>
        <function-ref name="getPayload" scoped="" ref="0x4097ac08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4097ace8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4097adc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplCC1000Spi" ref="0x4098d250" loc="84:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x4098d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x4098d4a8"/>
        <function-ref name="initSlave" scoped="" ref="0x4098d588"/>
        <function-ref name="disableIntr" scoped="" ref="0x4098d668"/>
        <function-ref name="writeByte" scoped="" ref="0x4098d748"/>
        <function-ref name="enableIntr" scoped="" ref="0x4098d828"/>
        <function-ref name="txMode" scoped="" ref="0x4098d908"/>
        <function-ref name="readByte" scoped="" ref="0x4098d9e8"/>
        <function-ref name="rxMode" scoped="" ref="0x4098dac8"/>
        <function-ref name="dataReady" scoped="" ref="0x4098dba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4097bd98" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4097bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097a010"/>
        <function-ref name="getPayload" scoped="" ref="0x4097a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4097a1d0"/>
        <function-ref name="cancel" scoped="" ref="0x4097a2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4097a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40978a20" loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40978a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409765b0"/>
        <function-ref name="clear" scoped="" ref="0x40976960"/>
        <function-ref name="isValid" scoped="" ref="0x40976200"/>
        <function-ref name="set" scoped="" ref="0x40976d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4097b5f0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4097b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40974c38" loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40974c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40974e10"/>
        <function-ref name="isSet" scoped="" ref="0x40974ef0"/>
        <function-ref name="cancel" scoped="" ref="0x4098e010"/>
        <function-ref name="set" scoped="" ref="0x4098e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4097a518" loc="71:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4097a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x4098dd70" loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x4098dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4098c010"/>
        <function-ref name="settled" scoped="" ref="0x4098c0f0"/>
        <function-ref name="adjust" scoped="" ref="0x4098c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiRx" ref="0x4098c4a0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiRx" scoped="" ref="0x4098c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098cae8"/>
        <function-ref name="readDone" scoped="" ref="0x4098cd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x409873c0" loc="89:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x409873c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40987a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketSent" ref="0x409c0b08" loc="417:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketSent" scoped="" ref="0x409c0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409c0ce0"/>
        <function-ref name="runTask" scoped="" ref="0x409c0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40979da8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40979da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40978010"/>
        <function-ref name="noAck" scoped="" ref="0x409780f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x409781d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x4098e308" loc="83:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x4098e308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x4098e4e0"/>
        <function-ref name="biasOn" scoped="" ref="0x4098e5c0"/>
        <function-ref name="getRFPower" scoped="" ref="0x4098e6a0"/>
        <function-ref name="tuneManual" scoped="" ref="0x4098e780"/>
        <function-ref name="selectLock" scoped="" ref="0x4098e860"/>
        <function-ref name="init" scoped="" ref="0x4098e940"/>
        <function-ref name="getLock" scoped="" ref="0x4098ea20"/>
        <function-ref name="coreOn" scoped="" ref="0x4098eb00"/>
        <function-ref name="txMode" scoped="" ref="0x4098ebe0"/>
        <function-ref name="getLOStatus" scoped="" ref="0x4098ecc0"/>
        <function-ref name="rxMode" scoped="" ref="0x4098eda0"/>
        <function-ref name="off" scoped="" ref="0x4098ee80"/>
        <function-ref name="setRFPower" scoped="" ref="0x4098d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40987df8" loc="90:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40987df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4098a468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketReceived" ref="0x409de010" loc="594:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketReceived" scoped="" ref="0x409de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409de1e8"/>
        <function-ref name="runTask" scoped="" ref="0x409de2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40975488" loc="78:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40975488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40974010"/>
        <function-ref name="clear" scoped="" ref="0x409743c0"/>
        <function-ref name="isValid" scoped="" ref="0x40975bd8"/>
        <function-ref name="set" scoped="" ref="0x40974770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4097b970" loc="69:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4097b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4097bb48"/>
        <function-ref name="stop" scoped="" ref="0x4097bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x409783c8" loc="75:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409783c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x409785a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteRadio" ref="0x40979010" loc="73:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x40979010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x409791e8"/>
        <function-ref name="listen" scoped="" ref="0x409792c8"/>
        <function-ref name="syncing" scoped="" ref="0x409793a8"/>
        <function-ref name="rxDone" scoped="" ref="0x40979488"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x40979568"/>
        <function-ref name="idleByte" scoped="" ref="0x40979648"/>
        <function-ref name="cts" scoped="" ref="0x40979728"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x40979808"/>
        <function-ref name="sendDone" scoped="" ref="0x409798e8"/>
        <function-ref name="off" scoped="" ref="0x409799c8"/>
        <function-ref name="getTxMessage" scoped="" ref="0x40979aa8"/>
        <function-ref name="rx" scoped="" ref="0x40979b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRssi" ref="0x40a1d8b8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRssi" scoped="" ref="0x40a1d8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a1df00"/>
        <function-ref name="readDone" scoped="" ref="0x40a201a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40a1d068" loc="62:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a1d068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a1d240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a1d320"/>
        <function-ref name="request" scoped="" ref="0x40a1d400"/>
        <function-ref name="granted" scoped="" ref="0x40a1d4e0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a1d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Rssi" ref="0x40a05028" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Rssi" scoped="" ref="0x40a05028"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a05670"/>
        <function-ref name="readDone" scoped="" ref="0x40a058e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a077a8" loc="54:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a077a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a07980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Squelch" ref="0x40a07b48" loc="55:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x40a07b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a07d20"/>
        <function-ref name="settled" scoped="" ref="0x40a07e00"/>
        <function-ref name="adjust" scoped="" ref="0x40a07ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a25b50" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a25b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404554e0"/>
            <typename><typedef-ref name="TMicro" ref="0x404556a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a24308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC" ref="0x40a25388" loc="57:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC" scoped="" ref="0x40a25388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a25560"/>
        <function-ref name="read" scoped="" ref="0x40a25640"/>
        <function-ref name="write" scoped="" ref="0x40a25720"/>
        <function-ref name="getLOCK" scoped="" ref="0x40a25800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Control" ref="0x40a263f8" loc="54:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x40a263f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x40a265d0"/>
        <function-ref name="biasOn" scoped="" ref="0x40a266b0"/>
        <function-ref name="getRFPower" scoped="" ref="0x40a26790"/>
        <function-ref name="tuneManual" scoped="" ref="0x40a26870"/>
        <function-ref name="selectLock" scoped="" ref="0x40a26950"/>
        <function-ref name="init" scoped="" ref="0x40a26a30"/>
        <function-ref name="getLock" scoped="" ref="0x40a26b10"/>
        <function-ref name="coreOn" scoped="" ref="0x40a26bf0"/>
        <function-ref name="txMode" scoped="" ref="0x40a26cd0"/>
        <function-ref name="getLOStatus" scoped="" ref="0x40a26db0"/>
        <function-ref name="rxMode" scoped="" ref="0x40a26e90"/>
        <function-ref name="off" scoped="" ref="0x40a25010"/>
        <function-ref name="setRFPower" scoped="" ref="0x40a250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x40a662b0" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x40a662b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x40a66488"/>
        <function-ref name="initSlave" scoped="" ref="0x40a66568"/>
        <function-ref name="disableIntr" scoped="" ref="0x40a66648"/>
        <function-ref name="writeByte" scoped="" ref="0x40a66728"/>
        <function-ref name="enableIntr" scoped="" ref="0x40a66808"/>
        <function-ref name="txMode" scoped="" ref="0x40a668e8"/>
        <function-ref name="readByte" scoped="" ref="0x40a669c8"/>
        <function-ref name="rxMode" scoped="" ref="0x40a66aa8"/>
        <function-ref name="dataReady" scoped="" ref="0x40a66b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiAdc" ref="0x40a68e98" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiAdc" scoped="" ref="0x40a68e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a674f8"/>
        <function-ref name="readDone" scoped="" ref="0x40a67770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiResource" ref="0x40a67b40" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x40a67b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a67d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a67df8"/>
        <function-ref name="request" scoped="" ref="0x40a67ed8"/>
        <function-ref name="granted" scoped="" ref="0x40a66010"/>
        <function-ref name="isOwner" scoped="" ref="0x40a660f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x40a66d28" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x40a66d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a66f00"/>
        <function-ref name="read" scoped="" ref="0x40a65010"/>
        <function-ref name="write" scoped="" ref="0x40a650f0"/>
        <function-ref name="getLOCK" scoped="" ref="0x40a651d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b6eec0" loc="28:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b6eec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b6d0c0"/>
        <function-ref name="configure" scoped="" ref="0x40b6d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40a64de8" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40a64de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b6e468"/>
        <function-ref name="readDone" scoped="" ref="0x40b6e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40b6e9e8" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40b6e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40b6ebc0"/>
        <function-ref name="getChannel" scoped="" ref="0x40b6eca0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40b6ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a646c0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a646c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a64898"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a64978"/>
        <function-ref name="request" scoped="" ref="0x40a64a58"/>
        <function-ref name="granted" scoped="" ref="0x40a64b38"/>
        <function-ref name="isOwner" scoped="" ref="0x40a64c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40a79a10" loc="18:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40a79a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7b048"/>
        <function-ref name="readDone" scoped="" ref="0x40a7b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40a7b9b0" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40a7b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a7a010"/>
        <function-ref name="readDone" scoped="" ref="0x40a7a288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40a7a940" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a7a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40a7ab18"/>
        <function-ref name="getChannel" scoped="" ref="0x40a7abf8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40a7acd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40a771b8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a771b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a77390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a77470"/>
        <function-ref name="request" scoped="" ref="0x40a77550"/>
        <function-ref name="granted" scoped="" ref="0x40a77630"/>
        <function-ref name="isOwner" scoped="" ref="0x40a77710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40a72618" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40a72618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40a727f0"/>
        <function-ref name="configure" scoped="" ref="0x40a728d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40a8cdb0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40a8cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40a72010"/>
        <function-ref name="dataReady" scoped="" ref="0x40a720f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40a90bd8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40a90bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40a90db0"/>
        <function-ref name="cancel" scoped="" ref="0x40a90e90"/>
        <function-ref name="dataReady" scoped="" ref="0x40a73010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a74178" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a74178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a74350"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a74430"/>
        <function-ref name="request" scoped="" ref="0x40a74510"/>
        <function-ref name="granted" scoped="" ref="0x40a745f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a746d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a8a260" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a8a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a8a438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40a89040" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40a89040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40a89218"/>
        <function-ref name="dataReady" scoped="" ref="0x40a892f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40a87aa0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40a87aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40a87c78"/>
        <function-ref name="cancel" scoped="" ref="0x40a87d58"/>
        <function-ref name="dataReady" scoped="" ref="0x40a87e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40a9e850" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40a9e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40a9ea28"/>
        <function-ref name="getAdmux" scoped="" ref="0x40a9eb08"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40a9ebe8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40a9ecc8"/>
        <function-ref name="enableAdc" scoped="" ref="0x40a9eda8"/>
        <function-ref name="setAdmux" scoped="" ref="0x40a9ee88"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40a88010"/>
        <function-ref name="isComplete" scoped="" ref="0x40a880f0"/>
        <function-ref name="cancel" scoped="" ref="0x40a881d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x40a882b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40a88390"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40a88470"/>
        <function-ref name="startConversion" scoped="" ref="0x40a88550"/>
        <function-ref name="isStarted" scoped="" ref="0x40a886b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40a88790"/>
        <function-ref name="setContinuous" scoped="" ref="0x40a88870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40a88950"/>
        <function-ref name="getValue" scoped="" ref="0x40a88a30"/>
        <function-ref name="dataReady" scoped="" ref="0x40a88b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a87610" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a87610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a877e8"/>
        <function-ref name="stop" scoped="" ref="0x40a878c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40a88ce8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40a88ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40a88ec0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40a86010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40a860f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40a861d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40a862b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40a8fe78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40a8fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40ac2070"/>
        <function-ref name="getAdmux" scoped="" ref="0x40ac2150"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40ac2230"/>
        <function-ref name="isEnabled" scoped="" ref="0x40ac2310"/>
        <function-ref name="enableAdc" scoped="" ref="0x40ac23f0"/>
        <function-ref name="setAdmux" scoped="" ref="0x40ac24d0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40ac25b0"/>
        <function-ref name="isComplete" scoped="" ref="0x40ac2690"/>
        <function-ref name="cancel" scoped="" ref="0x40ac2770"/>
        <function-ref name="disableAdc" scoped="" ref="0x40ac2850"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40ac2930"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40ac2a10"/>
        <function-ref name="startConversion" scoped="" ref="0x40ac2af0"/>
        <function-ref name="isStarted" scoped="" ref="0x40ac2c50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40ac2d30"/>
        <function-ref name="setContinuous" scoped="" ref="0x40ac2e10"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40ac2ef0"/>
        <function-ref name="getValue" scoped="" ref="0x40ac1010"/>
        <function-ref name="dataReady" scoped="" ref="0x40ac10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40ac1aa8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40ac1aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40ac1c80"/>
        <function-ref name="getAdmux" scoped="" ref="0x40ac1d60"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40ac1e40"/>
        <function-ref name="isEnabled" scoped="" ref="0x40ac1f20"/>
        <function-ref name="enableAdc" scoped="" ref="0x40abe018"/>
        <function-ref name="setAdmux" scoped="" ref="0x40abe0f8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40abe1d8"/>
        <function-ref name="isComplete" scoped="" ref="0x40abe2b8"/>
        <function-ref name="cancel" scoped="" ref="0x40abe398"/>
        <function-ref name="disableAdc" scoped="" ref="0x40abe478"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40abe558"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40abe638"/>
        <function-ref name="startConversion" scoped="" ref="0x40abe718"/>
        <function-ref name="isStarted" scoped="" ref="0x40abe878"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40abe958"/>
        <function-ref name="setContinuous" scoped="" ref="0x40abea38"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40abeb18"/>
        <function-ref name="getValue" scoped="" ref="0x40abebf8"/>
        <function-ref name="dataReady" scoped="" ref="0x40abecd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40abeec0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40abeec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40abd0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b1f068" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b1f068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b1f250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b1f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b1e010" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b1e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b1e1f8"/>
        <function-ref name="configure" scoped="" ref="0x40b1e2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40b1f470" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b1f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b1f648"/>
        <function-ref name="requested" scoped="" ref="0x40b1f728"/>
        <function-ref name="granted" scoped="" ref="0x40b1f808"/>
        <function-ref name="isOwner" scoped="" ref="0x40b1f8e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b1f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ae3910" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ae3910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ae3af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ae3bd8"/>
        <function-ref name="request" scoped="" ref="0x40ae3cb8"/>
        <function-ref name="granted" scoped="" ref="0x40ae3d98"/>
        <function-ref name="isOwner" scoped="" ref="0x40ae3e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b1fb08" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b1fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b1fce0"/>
        <function-ref name="userId" scoped="" ref="0x40b1fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4114bca0" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4114bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4114be78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41149010" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41149010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411491e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x411492c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411493a8"/>
        <function-ref name="dequeue" scoped="" ref="0x41149488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411488b0" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411488b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41148a98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41148b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411478b0" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411478b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41147a98"/>
        <function-ref name="configure" scoped="" ref="0x41147b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41147cd8" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41147cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41147eb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x41146010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411460f0"/>
        <function-ref name="dequeue" scoped="" ref="0x411461d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41148cb8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41148cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41148e90"/>
        <function-ref name="requested" scoped="" ref="0x41147010"/>
        <function-ref name="granted" scoped="" ref="0x411470f0"/>
        <function-ref name="isOwner" scoped="" ref="0x411471d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411472b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41146310" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41146310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411464e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411465c8"/>
        <function-ref name="led1On" scoped="" ref="0x411466a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41146788"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41146868"/>
        <function-ref name="get" scoped="" ref="0x41146948"/>
        <function-ref name="led1Off" scoped="" ref="0x41146a28"/>
        <function-ref name="led0On" scoped="" ref="0x41146da8"/>
        <function-ref name="set" scoped="" ref="0x41146be8"/>
        <function-ref name="led2On" scoped="" ref="0x41146b08"/>
        <function-ref name="led2Off" scoped="" ref="0x41146cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41148170" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41148170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41148358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41148438"/>
        <function-ref name="request" scoped="" ref="0x41148518"/>
        <function-ref name="granted" scoped="" ref="0x411485f8"/>
        <function-ref name="isOwner" scoped="" ref="0x411486d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411473f0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411475c8"/>
        <function-ref name="userId" scoped="" ref="0x411476a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41146f28" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41146f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41145110"/>
        <function-ref name="runTask" scoped="" ref="0x411451f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40b1c230" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40b1c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40b1c408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40b1c548" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b1c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b1c720"/>
        <function-ref name="requested" scoped="" ref="0x40b1c800"/>
        <function-ref name="granted" scoped="" ref="0x40b1c8e0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b1c9c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b1caa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40b1dda8" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b1dda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b1c010"/>
        <function-ref name="stop" scoped="" ref="0x40b1c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40b1cbe0" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b1cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b1cdb8"/>
        <function-ref name="userId" scoped="" ref="0x40b1ce98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41166db0" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41166db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41164010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41164150" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41164150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41164328"/>
        <function-ref name="requested" scoped="" ref="0x41164408"/>
        <function-ref name="granted" scoped="" ref="0x411644e8"/>
        <function-ref name="isOwner" scoped="" ref="0x411645c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411646a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x411669b8" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x411669b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41166b90"/>
        <function-ref name="stop" scoped="" ref="0x41166c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x411647e8" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411647e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411649c0"/>
        <function-ref name="userId" scoped="" ref="0x41164aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b2c5f8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b2c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b2cc20"/>
        <function-ref name="readDone" scoped="" ref="0x40b2ce78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40b2b598" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40b2b598"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b2bbe0"/>
        <function-ref name="readDone" scoped="" ref="0x40b2be58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40b2aab0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40b2aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40b2ac88"/>
        <function-ref name="getChannel" scoped="" ref="0x40b2ad68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40b2ae48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40b2a238" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40b2a238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40b2a410"/>
        <function-ref name="cancel" scoped="" ref="0x40b2a4f0"/>
        <function-ref name="dataReady" scoped="" ref="0x40b2a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40b421e0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40b421e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b423b8"/>
        <function-ref name="runTask" scoped="" ref="0x40b42498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b5c8c0" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b5c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5cef8"/>
        <function-ref name="readDone" scoped="" ref="0x40b5b180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40b5b5e0" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40b5b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5bc18"/>
        <function-ref name="readDone" scoped="" ref="0x40b5be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40b4d218" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b4d218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b4d400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b4d4e0"/>
        <function-ref name="request" scoped="" ref="0x40b4d5c0"/>
        <function-ref name="granted" scoped="" ref="0x40b4d6a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b4d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40b696e0" loc="46:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b696e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b698b8"/>
        <function-ref name="rand32" scoped="" ref="0x40b69998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40b6ade8" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40b6ade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b69448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a06bd0" loc="44:/home/branco/gitspace/Terra/TerraVM/src/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a06bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a06da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40b651d0" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b651d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b653a8"/>
        <function-ref name="rand32" scoped="" ref="0x40b65488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40b668f8" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40b668f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b66f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b663d8" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b663d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b665b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a14b60" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a14b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b7d6a8"/>
        <function-ref name="fired" scoped="" ref="0x40b6b938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b7d068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b6bde8"/>
        <function-ref name="getdt" scoped="" ref="0x40b7db58"/>
        <function-ref name="gett0" scoped="" ref="0x40b7d900"/>
        <function-ref name="isRunning" scoped="" ref="0x40b6bb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b6b1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b7d388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b6b460"/>
        <function-ref name="stop" scoped="" ref="0x40b6b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b7c100" loc="49:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b7c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b7bbe0"/>
        <function-ref name="fired" scoped="" ref="0x40b7ce80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b7b5a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b7b348"/>
        <function-ref name="getdt" scoped="" ref="0x40b7a0b8"/>
        <function-ref name="gett0" scoped="" ref="0x40b7be38"/>
        <function-ref name="isRunning" scoped="" ref="0x40b7b0f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b7c728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b7b8c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b7c9a8"/>
        <function-ref name="stop" scoped="" ref="0x40b7cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b76100" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b76100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b75be0"/>
        <function-ref name="fired" scoped="" ref="0x40b76e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b755a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b75348"/>
        <function-ref name="getdt" scoped="" ref="0x40b740b8"/>
        <function-ref name="gett0" scoped="" ref="0x40b75e38"/>
        <function-ref name="isRunning" scoped="" ref="0x40b750f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b76728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b758c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b769a8"/>
        <function-ref name="stop" scoped="" ref="0x40b76c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b74418" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b74418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b74a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b7a938" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b7a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b7ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40b89da0" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40b89da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b8d508"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b8d9f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b8d780"/>
        <function-ref name="overflow" scoped="" ref="0x40b8dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b72ad0" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b72ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b72ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40b93258" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40b93258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b92708"/>
        <function-ref name="fired" scoped="" ref="0x40b93ec0"/>
        <function-ref name="startAt" scoped="" ref="0x40b923c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b92150"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b92980"/>
        <function-ref name="start" scoped="" ref="0x40b939a8"/>
        <function-ref name="stop" scoped="" ref="0x40b93c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40c290c0" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40c290c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c275c8"/>
        <function-ref name="fired" scoped="" ref="0x40c29d28"/>
        <function-ref name="startAt" scoped="" ref="0x40c27288"/>
        <function-ref name="isRunning" scoped="" ref="0x40c27010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c27840"/>
        <function-ref name="start" scoped="" ref="0x40c29810"/>
        <function-ref name="stop" scoped="" ref="0x40c29ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b86c78" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b86c78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404055d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404055d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b86e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c27b70" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c27b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c26308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c267f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c26580"/>
        <function-ref name="overflow" scoped="" ref="0x40c26a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41150278" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41150278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x41150450"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41150530"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41150610"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x411506f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x411507d0"/>
        <function-ref name="setControl" scoped="" ref="0x411508b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41157448" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41157448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41156908"/>
        <function-ref name="fired" scoped="" ref="0x411560d8"/>
        <function-ref name="startAt" scoped="" ref="0x411565c8"/>
        <function-ref name="isRunning" scoped="" ref="0x41156350"/>
        <function-ref name="getAlarm" scoped="" ref="0x41156b80"/>
        <function-ref name="start" scoped="" ref="0x41157b98"/>
        <function-ref name="stop" scoped="" ref="0x41157e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41157010" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41157010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411571e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41156eb0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41156eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41154610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41154b00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41154888"/>
        <function-ref name="overflow" scoped="" ref="0x41154d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4114e4f0" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4114e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x4114e6c8"/>
        <function-ref name="compareBusy" scoped="" ref="0x4114e7a8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x4114e888"/>
        <function-ref name="countBusy" scoped="" ref="0x4114e968"/>
        <function-ref name="getAssr" scoped="" ref="0x4114ea48"/>
        <function-ref name="setAssr" scoped="" ref="0x4114eb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x41150aa0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41150aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4114e048"/>
        <function-ref name="fired" scoped="" ref="0x4114f638"/>
        <function-ref name="get" scoped="" ref="0x4114f120"/>
        <function-ref name="reset" scoped="" ref="0x4114f8b0"/>
        <function-ref name="isOn" scoped="" ref="0x4114e2c0"/>
        <function-ref name="set" scoped="" ref="0x4114f398"/>
        <function-ref name="start" scoped="" ref="0x4114fb28"/>
        <function-ref name="stop" scoped="" ref="0x4114fda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x411530c0" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411530c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41152b10"/>
        <function-ref name="test" scoped="" ref="0x41152620"/>
        <function-ref name="get" scoped="" ref="0x41153708"/>
        <function-ref name="setScale" scoped="" ref="0x41152d88"/>
        <function-ref name="getScale" scoped="" ref="0x41150048"/>
        <function-ref name="reset" scoped="" ref="0x41153e98"/>
        <function-ref name="overflow" scoped="" ref="0x41153c20"/>
        <function-ref name="isOn" scoped="" ref="0x41152898"/>
        <function-ref name="set" scoped="" ref="0x41153980"/>
        <function-ref name="start" scoped="" ref="0x41152130"/>
        <function-ref name="stop" scoped="" ref="0x411523a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40bcf010" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40bcf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40bcf1e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40bcf2c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40bcf3a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40bcf488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40bcf568"/>
        <function-ref name="setControl" scoped="" ref="0x40bcf648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40bcd4f8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40bcd4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40bcd6d0"/>
        <function-ref name="compareBusy" scoped="" ref="0x40bcd7b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40bcd890"/>
        <function-ref name="countBusy" scoped="" ref="0x40bcd970"/>
        <function-ref name="getAssr" scoped="" ref="0x40bcda50"/>
        <function-ref name="setAssr" scoped="" ref="0x40bcdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40bcf970" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40bcf970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40bcef08"/>
        <function-ref name="fired" scoped="" ref="0x40bce528"/>
        <function-ref name="get" scoped="" ref="0x40bce010"/>
        <function-ref name="reset" scoped="" ref="0x40bce7a0"/>
        <function-ref name="isOn" scoped="" ref="0x40bcd1a0"/>
        <function-ref name="set" scoped="" ref="0x40bce288"/>
        <function-ref name="start" scoped="" ref="0x40bcea18"/>
        <function-ref name="stop" scoped="" ref="0x40bcec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40bd5cb0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bd5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bd1778"/>
        <function-ref name="test" scoped="" ref="0x40bd1288"/>
        <function-ref name="get" scoped="" ref="0x40bd2308"/>
        <function-ref name="setScale" scoped="" ref="0x40bd19f0"/>
        <function-ref name="getScale" scoped="" ref="0x40bd1c90"/>
        <function-ref name="reset" scoped="" ref="0x40bd2a98"/>
        <function-ref name="overflow" scoped="" ref="0x40bd2820"/>
        <function-ref name="isOn" scoped="" ref="0x40bd1500"/>
        <function-ref name="set" scoped="" ref="0x40bd2580"/>
        <function-ref name="start" scoped="" ref="0x40bd2d10"/>
        <function-ref name="stop" scoped="" ref="0x40bd1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40bedaf0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40bedaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40bedcc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40bedda8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40bede88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40bec010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40bec0f0"/>
        <function-ref name="setControl" scoped="" ref="0x40bec1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40be9010" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40be9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40be91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40be9470" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40be9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40be9648"/>
        <function-ref name="compareBusy" scoped="" ref="0x40be9728"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40be9808"/>
        <function-ref name="countBusy" scoped="" ref="0x40be98e8"/>
        <function-ref name="getAssr" scoped="" ref="0x40be99c8"/>
        <function-ref name="setAssr" scoped="" ref="0x40be9aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40bec4f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40bec4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40beba48"/>
        <function-ref name="fired" scoped="" ref="0x40beb068"/>
        <function-ref name="get" scoped="" ref="0x40becb40"/>
        <function-ref name="reset" scoped="" ref="0x40beb2e0"/>
        <function-ref name="isOn" scoped="" ref="0x40bebcc0"/>
        <function-ref name="set" scoped="" ref="0x40becdb8"/>
        <function-ref name="start" scoped="" ref="0x40beb558"/>
        <function-ref name="stop" scoped="" ref="0x40beb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40bcc7e0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bcc7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bed288"/>
        <function-ref name="test" scoped="" ref="0x40befd38"/>
        <function-ref name="get" scoped="" ref="0x40bcce28"/>
        <function-ref name="setScale" scoped="" ref="0x40bed500"/>
        <function-ref name="getScale" scoped="" ref="0x40bed7a0"/>
        <function-ref name="reset" scoped="" ref="0x40bef5d0"/>
        <function-ref name="overflow" scoped="" ref="0x40bef358"/>
        <function-ref name="isOn" scoped="" ref="0x40bed010"/>
        <function-ref name="set" scoped="" ref="0x40bef0b8"/>
        <function-ref name="start" scoped="" ref="0x40bef848"/>
        <function-ref name="stop" scoped="" ref="0x40befac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40c32bd0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40c32bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c32da8"/>
        <function-ref name="runTask" scoped="" ref="0x40c32e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40c33248" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40c33248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c32708"/>
        <function-ref name="fired" scoped="" ref="0x40c33eb0"/>
        <function-ref name="startAt" scoped="" ref="0x40c323c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40c32150"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c32980"/>
        <function-ref name="start" scoped="" ref="0x40c33998"/>
        <function-ref name="stop" scoped="" ref="0x40c33c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b70f08" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b70f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c34a18"/>
        <function-ref name="fired" scoped="" ref="0x40c24cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c343d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c34180"/>
        <function-ref name="getdt" scoped="" ref="0x40c34ec8"/>
        <function-ref name="gett0" scoped="" ref="0x40c34c70"/>
        <function-ref name="isRunning" scoped="" ref="0x40c24f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c24558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c346f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c247d8"/>
        <function-ref name="stop" scoped="" ref="0x40c24a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40c53560" loc="71:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40c53560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c53738"/>
        <function-ref name="runTask" scoped="" ref="0x40c53818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40c56338" loc="49:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40c56338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c55e38"/>
        <function-ref name="fired" scoped="" ref="0x40c550f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c557f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c555a0"/>
        <function-ref name="getdt" scoped="" ref="0x40c53310"/>
        <function-ref name="gett0" scoped="" ref="0x40c530b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40c55348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c56960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c55b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c56be0"/>
        <function-ref name="stop" scoped="" ref="0x40c56e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c2ff00" loc="48:/home/branco/gitspace/Terra/TerraVM/src/system/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c2ff00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c58b40"/>
        <function-ref name="fired" scoped="" ref="0x40c2ece0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c584e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c58278"/>
        <function-ref name="getdt" scoped="" ref="0x40c56048"/>
        <function-ref name="gett0" scoped="" ref="0x40c58da8"/>
        <function-ref name="isRunning" scoped="" ref="0x40c58010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c2e558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c58810"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c2e7e8"/>
        <function-ref name="stop" scoped="" ref="0x40c2ea78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c51940" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c51940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c78010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40c78360" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c78360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c78ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c73010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c78d28"/>
        <function-ref name="overflow" scoped="" ref="0x40c73288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40c69350" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c69350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40c69528"/>
        <function-ref name="changed" scoped="" ref="0x40c69608"/>
        <function-ref name="amGroup" scoped="" ref="0x40c696e8"/>
        <function-ref name="setAddress" scoped="" ref="0x40c697c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40c6fd00" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40c6fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404554e0"/>
            <typename><typedef-ref name="TMicro" ref="0x404556a8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40c89478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c80010" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c80010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c80760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c80c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c809d8"/>
        <function-ref name="overflow" scoped="" ref="0x40c80ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c7f9f8" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c7f9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="TOne" ref="0x40476be0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c7c200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c7c6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c7c478"/>
        <function-ref name="overflow" scoped="" ref="0x40c7c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40c97360" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40c97360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40c97538"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40c97618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40c976f8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40c977d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40c978b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40c97998"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40c97a78"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40c97b58"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40c97c38"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40c97d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40c9c190" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40c9c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40c96c68"/>
        <function-ref name="test" scoped="" ref="0x40c96778"/>
        <function-ref name="get" scoped="" ref="0x40c9c7d8"/>
        <function-ref name="captured" scoped="" ref="0x40c9ccf0"/>
        <function-ref name="reset" scoped="" ref="0x40c96010"/>
        <function-ref name="isOn" scoped="" ref="0x40c969f0"/>
        <function-ref name="set" scoped="" ref="0x40c9ca50"/>
        <function-ref name="start" scoped="" ref="0x40c96288"/>
        <function-ref name="stop" scoped="" ref="0x40c96500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40c923d0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40c923d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40c909f0"/>
        <function-ref name="fired" scoped="" ref="0x40c90010"/>
        <function-ref name="get" scoped="" ref="0x40c92a18"/>
        <function-ref name="reset" scoped="" ref="0x40c90288"/>
        <function-ref name="isOn" scoped="" ref="0x40c90c68"/>
        <function-ref name="set" scoped="" ref="0x40c92c90"/>
        <function-ref name="start" scoped="" ref="0x40c90500"/>
        <function-ref name="stop" scoped="" ref="0x40c90778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c793e0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c793e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40c9fee0"/>
        <function-ref name="test" scoped="" ref="0x40c9f9f0"/>
        <function-ref name="get" scoped="" ref="0x40c79a28"/>
        <function-ref name="setScale" scoped="" ref="0x40c9e170"/>
        <function-ref name="getScale" scoped="" ref="0x40c9e410"/>
        <function-ref name="reset" scoped="" ref="0x40c9f288"/>
        <function-ref name="overflow" scoped="" ref="0x40c9f010"/>
        <function-ref name="isOn" scoped="" ref="0x40c9fc68"/>
        <function-ref name="set" scoped="" ref="0x40c79ca0"/>
        <function-ref name="start" scoped="" ref="0x40c9f500"/>
        <function-ref name="stop" scoped="" ref="0x40c9f778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40cb2e78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40cb2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40cb1070"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40cb1150"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40cb1230"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40cb1310"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40cb13f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40cb14d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40cb15b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40cb1690"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40cb1770"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40cb1850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x40ca8e98" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x40ca8e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40ca70c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40ca71a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40ca7280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40ca7360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40ca7440"/>
        <function-ref name="setControl" scoped="" ref="0x40ca7520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40cafa80" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40cafa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40cac010"/>
        <function-ref name="fired" scoped="" ref="0x40cad610"/>
        <function-ref name="get" scoped="" ref="0x40cad0f8"/>
        <function-ref name="reset" scoped="" ref="0x40cad888"/>
        <function-ref name="isOn" scoped="" ref="0x40cac288"/>
        <function-ref name="set" scoped="" ref="0x40cad370"/>
        <function-ref name="start" scoped="" ref="0x40cadb00"/>
        <function-ref name="stop" scoped="" ref="0x40cadd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40cb1b88" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40cb1b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40caf640"/>
        <function-ref name="test" scoped="" ref="0x40caf150"/>
        <function-ref name="get" scoped="" ref="0x40cb0200"/>
        <function-ref name="captured" scoped="" ref="0x40cb0718"/>
        <function-ref name="reset" scoped="" ref="0x40cb09b8"/>
        <function-ref name="isOn" scoped="" ref="0x40caf3c8"/>
        <function-ref name="set" scoped="" ref="0x40cb0478"/>
        <function-ref name="start" scoped="" ref="0x40cb0c30"/>
        <function-ref name="stop" scoped="" ref="0x40cb0ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40cac6a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40cac6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40cabc90"/>
        <function-ref name="fired" scoped="" ref="0x40cab2b0"/>
        <function-ref name="get" scoped="" ref="0x40cacce8"/>
        <function-ref name="reset" scoped="" ref="0x40cab528"/>
        <function-ref name="isOn" scoped="" ref="0x40cabf08"/>
        <function-ref name="set" scoped="" ref="0x40cab010"/>
        <function-ref name="start" scoped="" ref="0x40cab7a0"/>
        <function-ref name="stop" scoped="" ref="0x40caba18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40ca9340" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40ca9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ca8898"/>
        <function-ref name="fired" scoped="" ref="0x40ca9ea0"/>
        <function-ref name="get" scoped="" ref="0x40ca9988"/>
        <function-ref name="reset" scoped="" ref="0x40ca8130"/>
        <function-ref name="isOn" scoped="" ref="0x40ca8b10"/>
        <function-ref name="set" scoped="" ref="0x40ca9c00"/>
        <function-ref name="start" scoped="" ref="0x40ca83a8"/>
        <function-ref name="stop" scoped="" ref="0x40ca8620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c8fb08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c8fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40cb2600"/>
        <function-ref name="test" scoped="" ref="0x40cb2110"/>
        <function-ref name="get" scoped="" ref="0x40cb4200"/>
        <function-ref name="setScale" scoped="" ref="0x40cb2878"/>
        <function-ref name="getScale" scoped="" ref="0x40cb2b18"/>
        <function-ref name="reset" scoped="" ref="0x40cb4990"/>
        <function-ref name="overflow" scoped="" ref="0x40cb4718"/>
        <function-ref name="isOn" scoped="" ref="0x40cb2388"/>
        <function-ref name="set" scoped="" ref="0x40cb4478"/>
        <function-ref name="start" scoped="" ref="0x40cb4c08"/>
        <function-ref name="stop" scoped="" ref="0x40cb4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cfc630" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cfc630"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404055d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404055d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cfc808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40cfca18" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cfca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d1d500"/>
        <function-ref name="test" scoped="" ref="0x40d1d010"/>
        <function-ref name="get" scoped="" ref="0x40cf4088"/>
        <function-ref name="setScale" scoped="" ref="0x40d1d778"/>
        <function-ref name="getScale" scoped="" ref="0x40d1da18"/>
        <function-ref name="reset" scoped="" ref="0x40cf4818"/>
        <function-ref name="overflow" scoped="" ref="0x40cf45a0"/>
        <function-ref name="isOn" scoped="" ref="0x40d1d288"/>
        <function-ref name="set" scoped="" ref="0x40cf4300"/>
        <function-ref name="start" scoped="" ref="0x40cf4a90"/>
        <function-ref name="stop" scoped="" ref="0x40cf4d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40cff320" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40cff320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="TOne" ref="0x40476be0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cffa70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d11010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40cffce8"/>
        <function-ref name="overflow" scoped="" ref="0x40d11288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40d11568" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d11568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d0f010"/>
        <function-ref name="test" scoped="" ref="0x40d10ad8"/>
        <function-ref name="get" scoped="" ref="0x40d11bb0"/>
        <function-ref name="setScale" scoped="" ref="0x40d0f288"/>
        <function-ref name="getScale" scoped="" ref="0x40d0f528"/>
        <function-ref name="reset" scoped="" ref="0x40d10370"/>
        <function-ref name="overflow" scoped="" ref="0x40d100f8"/>
        <function-ref name="isOn" scoped="" ref="0x40d10d50"/>
        <function-ref name="set" scoped="" ref="0x40d11e28"/>
        <function-ref name="start" scoped="" ref="0x40d105e8"/>
        <function-ref name="stop" scoped="" ref="0x40d10860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40d0cae8" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40d0cae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="TOne" ref="0x40476be0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d26308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d267f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d26580"/>
        <function-ref name="overflow" scoped="" ref="0x40d26a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c7d7f0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c7d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d0c010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d0c500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d0c288"/>
        <function-ref name="overflow" scoped="" ref="0x40d0c778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c826b8" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c826b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c82d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40c810a0" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c810a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404550a0"/>
            <typename><typedef-ref name="T32khz" ref="0x40455268"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c817f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c81ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c81a68"/>
        <function-ref name="overflow" scoped="" ref="0x40d23010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d225c8" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d225c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d1f0d8"/>
        <function-ref name="fired" scoped="" ref="0x40d21368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d21a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d21818"/>
        <function-ref name="getdt" scoped="" ref="0x40d1f588"/>
        <function-ref name="gett0" scoped="" ref="0x40d1f330"/>
        <function-ref name="isRunning" scoped="" ref="0x40d215c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d22bf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d21d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d22e70"/>
        <function-ref name="stop" scoped="" ref="0x40d21110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMAux" ref="0x40d3f570" loc="2:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/AMAuxC.nc">
      <component-ref qname="AMAuxC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMAux" scoped="" ref="0x40d3f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMAux"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40d3f748"/>
        <function-ref name="getPower" scoped="" ref="0x40d3f828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAux" ref="0x40d3fa98" loc="12:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/AMAuxC.nc">
      <component-ref qname="AMAuxC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAux" scoped="" ref="0x40d3fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x40d3fc70"/>
        <function-ref name="biasOn" scoped="" ref="0x40d3fd50"/>
        <function-ref name="getRFPower" scoped="" ref="0x40d3fe30"/>
        <function-ref name="tuneManual" scoped="" ref="0x40d3ff10"/>
        <function-ref name="selectLock" scoped="" ref="0x40d3c010"/>
        <function-ref name="init" scoped="" ref="0x40d3c0f0"/>
        <function-ref name="getLock" scoped="" ref="0x40d3c1d0"/>
        <function-ref name="coreOn" scoped="" ref="0x40d3c2b0"/>
        <function-ref name="txMode" scoped="" ref="0x40d3c390"/>
        <function-ref name="getLOStatus" scoped="" ref="0x40d3c470"/>
        <function-ref name="rxMode" scoped="" ref="0x40d3c550"/>
        <function-ref name="off" scoped="" ref="0x40d3c630"/>
        <function-ref name="setRFPower" scoped="" ref="0x40d3c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d35368" loc="39:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
      <component-ref qname="BasicServicesC.Bitmap"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d35368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d35540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x40d356c0" loc="40:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVectorC.nc">
      <component-ref qname="BasicServicesC.Bitmap"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x40d356c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="vmBitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40d35898"/>
        <function-ref name="clear" scoped="" ref="0x40d35978"/>
        <function-ref name="toggle" scoped="" ref="0x40d35a58"/>
        <function-ref name="resetRange" scoped="" ref="0x40d35b38"/>
        <function-ref name="get" scoped="" ref="0x40d35c18"/>
        <function-ref name="countPend" scoped="" ref="0x40d35cf8"/>
        <function-ref name="assign" scoped="" ref="0x40d35dd8"/>
        <function-ref name="setAll" scoped="" ref="0x40d35eb8"/>
        <function-ref name="set" scoped="" ref="0x40d34010"/>
        <function-ref name="isAllBitSet" scoped="" ref="0x40d340f0"/>
        <function-ref name="size" scoped="" ref="0x40d341d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x40d71ed0" loc="13:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <component-ref qname="BasicServicesC.inQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x40d71ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40d700c0"/>
        <function-ref name="dataReady" scoped="" ref="0x40d708a0"/>
        <function-ref name="element" scoped="" ref="0x40d70280"/>
        <function-ref name="get" scoped="" ref="0x40d70360"/>
        <function-ref name="read" scoped="" ref="0x40d70440"/>
        <function-ref name="remove" scoped="" ref="0x40d70520"/>
        <function-ref name="maxSize" scoped="" ref="0x40d70600"/>
        <function-ref name="put" scoped="" ref="0x40d706e0"/>
        <function-ref name="isFree" scoped="" ref="0x40d707c0"/>
        <function-ref name="size" scoped="" ref="0x40d701a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x411b4240" loc="5:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="BasicServicesC.inQueue.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x411b4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x411b4418"/>
        <function-ref name="size" scoped="" ref="0x411b4bf8"/>
        <function-ref name="element" scoped="" ref="0x411b45d8"/>
        <function-ref name="get" scoped="" ref="0x411b46b8"/>
        <function-ref name="read" scoped="" ref="0x411b4798"/>
        <function-ref name="remove" scoped="" ref="0x411b4878"/>
        <function-ref name="maxSize" scoped="" ref="0x411b4958"/>
        <function-ref name="put" scoped="" ref="0x411b4a38"/>
        <function-ref name="isFree" scoped="" ref="0x411b4b18"/>
        <function-ref name="dataReady" scoped="" ref="0x411b44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dataReady" ref="0x411b4d78" loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="BasicServicesC.inQueue.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataReady" scoped="" ref="0x411b4d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411b3010"/>
        <function-ref name="runTask" scoped="" ref="0x411b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x40d84ec0" loc="13:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <component-ref qname="BasicServicesC.outQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x40d84ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40d820c0"/>
        <function-ref name="dataReady" scoped="" ref="0x40d828a0"/>
        <function-ref name="element" scoped="" ref="0x40d82280"/>
        <function-ref name="get" scoped="" ref="0x40d82360"/>
        <function-ref name="read" scoped="" ref="0x40d82440"/>
        <function-ref name="remove" scoped="" ref="0x40d82520"/>
        <function-ref name="maxSize" scoped="" ref="0x40d82600"/>
        <function-ref name="put" scoped="" ref="0x40d826e0"/>
        <function-ref name="isFree" scoped="" ref="0x40d827c0"/>
        <function-ref name="size" scoped="" ref="0x40d821a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x411a6360" loc="5:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="BasicServicesC.outQueue.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x411a6360"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x411a6538"/>
        <function-ref name="size" scoped="" ref="0x411a6d18"/>
        <function-ref name="element" scoped="" ref="0x411a66f8"/>
        <function-ref name="get" scoped="" ref="0x411a67d8"/>
        <function-ref name="read" scoped="" ref="0x411a68b8"/>
        <function-ref name="remove" scoped="" ref="0x411a6998"/>
        <function-ref name="maxSize" scoped="" ref="0x411a6a78"/>
        <function-ref name="put" scoped="" ref="0x411a6b58"/>
        <function-ref name="isFree" scoped="" ref="0x411a6c38"/>
        <function-ref name="dataReady" scoped="" ref="0x411a6618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dataReady" ref="0x411a6e98" loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="BasicServicesC.outQueue.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataReady" scoped="" ref="0x411a6e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411e20c0"/>
        <function-ref name="runTask" scoped="" ref="0x411e21a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d81980" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.TimerVM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d81980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d7f4c8"/>
        <function-ref name="fired" scoped="" ref="0x40d80768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d80e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d80c18"/>
        <function-ref name="getdt" scoped="" ref="0x40d7f978"/>
        <function-ref name="gett0" scoped="" ref="0x40d7f720"/>
        <function-ref name="isRunning" scoped="" ref="0x40d809c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d80010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d7f1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d80290"/>
        <function-ref name="stop" scoped="" ref="0x40d80510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d7e768" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.TimerAsync"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d7e768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d7b330"/>
        <function-ref name="fired" scoped="" ref="0x40d7d520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d7dc28"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d7d9d0"/>
        <function-ref name="getdt" scoped="" ref="0x40d7b7e0"/>
        <function-ref name="gett0" scoped="" ref="0x40d7b588"/>
        <function-ref name="isRunning" scoped="" ref="0x40d7d778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d7ed90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d7b010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d7d048"/>
        <function-ref name="stop" scoped="" ref="0x40d7d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d7a5c8" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.sendTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d7a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d780d8"/>
        <function-ref name="fired" scoped="" ref="0x40d79368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d79a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d79818"/>
        <function-ref name="getdt" scoped="" ref="0x40d78588"/>
        <function-ref name="gett0" scoped="" ref="0x40d78330"/>
        <function-ref name="isRunning" scoped="" ref="0x40d795c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d7abf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d79d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d7ae70"/>
        <function-ref name="stop" scoped="" ref="0x40d79110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d763b8" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.ProgReqTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d763b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d75e98"/>
        <function-ref name="fired" scoped="" ref="0x40d75150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d75858"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d75600"/>
        <function-ref name="getdt" scoped="" ref="0x40da0368"/>
        <function-ref name="gett0" scoped="" ref="0x40da0110"/>
        <function-ref name="isRunning" scoped="" ref="0x40d753a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d769e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d75b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d76c60"/>
        <function-ref name="stop" scoped="" ref="0x40d76ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d9f1c8" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.SendDataFullTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d9f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d9ed58"/>
        <function-ref name="fired" scoped="" ref="0x40d9e010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d9e718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d9e4c0"/>
        <function-ref name="getdt" scoped="" ref="0x40d9c268"/>
        <function-ref name="gett0" scoped="" ref="0x40d9c010"/>
        <function-ref name="isRunning" scoped="" ref="0x40d9e268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d9f7f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d9ea38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d9fa70"/>
        <function-ref name="stop" scoped="" ref="0x40d9fcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d9b0a0" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="BasicServicesC.DataReqTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d9b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d9ab88"/>
        <function-ref name="fired" scoped="" ref="0x40d9be20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d9a548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d9a2f0"/>
        <function-ref name="getdt" scoped="" ref="0x40d99048"/>
        <function-ref name="gett0" scoped="" ref="0x40d9ade0"/>
        <function-ref name="isRunning" scoped="" ref="0x40d9a098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d9b6c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d9a868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d9b948"/>
        <function-ref name="stop" scoped="" ref="0x40d9bbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VMCustom" ref="0x40d8e350" loc="9:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomC.nc">
      <component-ref qname="VMCustomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VMCustom" scoped="" ref="0x40d8e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="VMCustom"/>
      </instance>
      <interface-functions>
        <function-ref name="evtError" scoped="" ref="0x40d8e528"/>
        <function-ref name="procOutEvt" scoped="" ref="0x40d8e608"/>
        <function-ref name="setMVal" scoped="" ref="0x40d8e6e8"/>
        <function-ref name="getTime" scoped="" ref="0x40d8e7c8"/>
        <function-ref name="getRealAddr" scoped="" ref="0x40d8e8a8"/>
        <function-ref name="callFunction" scoped="" ref="0x40d8e988"/>
        <function-ref name="reset" scoped="" ref="0x40d8ea68"/>
        <function-ref name="push" scoped="" ref="0x40d8eb48"/>
        <function-ref name="pop" scoped="" ref="0x40d8ec28"/>
        <function-ref name="queueEvt" scoped="" ref="0x40d8ed08"/>
        <function-ref name="getMVal" scoped="" ref="0x40d8ede8"/>
        <function-ref name="getHaltedFlag" scoped="" ref="0x40d8eec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VM" ref="0x40dace10" loc="13:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VM" scoped="" ref="0x40dace10"/></type-interface>
      <instance>
        <interfacedef-ref qname="VMCustom"/>
      </instance>
      <interface-functions>
        <function-ref name="evtError" scoped="" ref="0x40dab010"/>
        <function-ref name="procOutEvt" scoped="" ref="0x40dab0f0"/>
        <function-ref name="setMVal" scoped="" ref="0x40dab1d0"/>
        <function-ref name="getTime" scoped="" ref="0x40dab2b0"/>
        <function-ref name="getRealAddr" scoped="" ref="0x40dab390"/>
        <function-ref name="callFunction" scoped="" ref="0x40dab470"/>
        <function-ref name="reset" scoped="" ref="0x40dab550"/>
        <function-ref name="push" scoped="" ref="0x40dab630"/>
        <function-ref name="pop" scoped="" ref="0x40dab710"/>
        <function-ref name="queueEvt" scoped="" ref="0x40dab7f0"/>
        <function-ref name="getMVal" scoped="" ref="0x40dab8d0"/>
        <function-ref name="getHaltedFlag" scoped="" ref="0x40dab9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSRadio" ref="0x40dabb58" loc="14:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSRadio" scoped="" ref="0x40dabb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BSRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dabd30"/>
        <function-ref name="receive" scoped="" ref="0x40dabe10"/>
        <function-ref name="sendDoneAck" scoped="" ref="0x40dabef0"/>
        <function-ref name="source" scoped="" ref="0x40daa010"/>
        <function-ref name="sendDone" scoped="" ref="0x40daa0f0"/>
        <function-ref name="setRFPower" scoped="" ref="0x40daa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="usrDataQ" ref="0x40da95a0" loc="19:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="usrDataQ" scoped="" ref="0x40da95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40da9858"/>
        <function-ref name="size" scoped="" ref="0x40da8010"/>
        <function-ref name="element" scoped="" ref="0x40da9938"/>
        <function-ref name="get" scoped="" ref="0x40da9a18"/>
        <function-ref name="read" scoped="" ref="0x40da9af8"/>
        <function-ref name="remove" scoped="" ref="0x40da9bd8"/>
        <function-ref name="maxSize" scoped="" ref="0x40da9cb8"/>
        <function-ref name="put" scoped="" ref="0x40da9d98"/>
        <function-ref name="isFree" scoped="" ref="0x40da9e78"/>
        <function-ref name="dataReady" scoped="" ref="0x40da9778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40da90a0" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40da90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40da9278"/>
        <function-ref name="rand32" scoped="" ref="0x40da9358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BCRadio_receive" ref="0x40df0cb8" loc="315:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BCRadio_receive" scoped="" ref="0x40df0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40df0e90"/>
        <function-ref name="runTask" scoped="" ref="0x40def010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SA" ref="0x40da4880" loc="15:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/Net/VMCustomP.nc">
      <component-ref qname="VMCustomP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SA" scoped="" ref="0x40da4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensAct"/>
      </instance>
      <interface-functions>
        <function-ref name="reqSensor" scoped="" ref="0x40da4a58"/>
        <function-ref name="readSensor" scoped="" ref="0x40da4b38"/>
        <function-ref name="setActuator" scoped="" ref="0x40da4c18"/>
        <function-ref name="Ready" scoped="" ref="0x40da4cf8"/>
        <function-ref name="reqStreamSensor" scoped="" ref="0x40da4dd8"/>
        <function-ref name="getDatap" scoped="" ref="0x40da4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAinterface" ref="0x40d8bd58" loc="15:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActC.nc">
      <component-ref qname="SensActC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAinterface" scoped="" ref="0x40d8bd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensAct"/>
      </instance>
      <interface-functions>
        <function-ref name="reqSensor" scoped="" ref="0x40e0b010"/>
        <function-ref name="readSensor" scoped="" ref="0x40e0b0f0"/>
        <function-ref name="setActuator" scoped="" ref="0x40e0b1d0"/>
        <function-ref name="Ready" scoped="" ref="0x40e0b2b0"/>
        <function-ref name="reqStreamSensor" scoped="" ref="0x40e0b390"/>
        <function-ref name="getDatap" scoped="" ref="0x40e0b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="S_VOLT" ref="0x40e06b80" loc="22:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="S_VOLT" scoped="" ref="0x40e06b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e041e0"/>
        <function-ref name="readDone" scoped="" ref="0x40e04438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A_INT2" ref="0x40e02528" loc="41:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="A_INT2" scoped="" ref="0x40e02528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e02700"/>
        <function-ref name="fired" scoped="" ref="0x40e027e0"/>
        <function-ref name="disable" scoped="" ref="0x40e028c0"/>
        <function-ref name="edge" scoped="" ref="0x40e029a0"/>
        <function-ref name="enable" scoped="" ref="0x40e02a80"/>
        <function-ref name="getValue" scoped="" ref="0x40e02b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A_PIN1" ref="0x40e047f0" loc="33:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="A_PIN1" scoped="" ref="0x40e047f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e049c8"/>
        <function-ref name="isInput" scoped="" ref="0x40e04aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40e04b88"/>
        <function-ref name="isOutput" scoped="" ref="0x40e04c68"/>
        <function-ref name="get" scoped="" ref="0x40e04d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e04e28"/>
        <function-ref name="set" scoped="" ref="0x40e04f08"/>
        <function-ref name="clr" scoped="" ref="0x40e03010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="S_TEMP" ref="0x40e07188" loc="20:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="S_TEMP" scoped="" ref="0x40e07188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e077b0"/>
        <function-ref name="readDone" scoped="" ref="0x40e07a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sigInt1" ref="0x40e2e388" loc="248:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sigInt1" scoped="" ref="0x40e2e388"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e2e560"/>
        <function-ref name="runTask" scoped="" ref="0x40e2e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A_INT1" ref="0x40dffbd0" loc="40:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="A_INT1" scoped="" ref="0x40dffbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dffda8"/>
        <function-ref name="fired" scoped="" ref="0x40dffe88"/>
        <function-ref name="disable" scoped="" ref="0x40e02010"/>
        <function-ref name="edge" scoped="" ref="0x40e020f0"/>
        <function-ref name="enable" scoped="" ref="0x40e021d0"/>
        <function-ref name="getValue" scoped="" ref="0x40e022b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A_PIN2" ref="0x40e03230" loc="34:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="A_PIN2" scoped="" ref="0x40e03230"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e03408"/>
        <function-ref name="isInput" scoped="" ref="0x40e034e8"/>
        <function-ref name="toggle" scoped="" ref="0x40e035c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e036a8"/>
        <function-ref name="get" scoped="" ref="0x40e03788"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e03868"/>
        <function-ref name="set" scoped="" ref="0x40e03948"/>
        <function-ref name="clr" scoped="" ref="0x40e03a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SA" ref="0x40e0bb78" loc="17:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SA" scoped="" ref="0x40e0bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensAct"/>
      </instance>
      <interface-functions>
        <function-ref name="reqSensor" scoped="" ref="0x40e0bd50"/>
        <function-ref name="readSensor" scoped="" ref="0x40e0be30"/>
        <function-ref name="setActuator" scoped="" ref="0x40e0bf10"/>
        <function-ref name="Ready" scoped="" ref="0x40e08010"/>
        <function-ref name="reqStreamSensor" scoped="" ref="0x40e080f0"/>
        <function-ref name="getDatap" scoped="" ref="0x40e081d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A_LEDS" ref="0x40e083c0" loc="18:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="A_LEDS" scoped="" ref="0x40e083c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e08598"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e08678"/>
        <function-ref name="led1On" scoped="" ref="0x40e08758"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e08838"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e08918"/>
        <function-ref name="get" scoped="" ref="0x40e089f8"/>
        <function-ref name="led1Off" scoped="" ref="0x40e08ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x40e08e58"/>
        <function-ref name="set" scoped="" ref="0x40e08bb8"/>
        <function-ref name="led0On" scoped="" ref="0x40e08c98"/>
        <function-ref name="led2On" scoped="" ref="0x40e08d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sigInt2" ref="0x40e2d558" loc="249:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sigInt2" scoped="" ref="0x40e2d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e2d730"/>
        <function-ref name="runTask" scoped="" ref="0x40e2d810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="S_PHOTO" ref="0x40e07e80" loc="21:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensActP.nc">
      <component-ref qname="SensActP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="S_PHOTO" scoped="" ref="0x40e07e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e064b8"/>
        <function-ref name="readDone" scoped="" ref="0x40e06710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e52cb0" loc="19:/opt/tinyos-2.1.2/tos/sensorboards/mda100/TempC.nc">
      <component-ref qname="SensActC.S_TEMP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e52cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e552e8"/>
        <function-ref name="readDone" scoped="" ref="0x40e55540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e53ce0" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedTempDeviceP.nc">
      <component-ref qname="ArbitratedTempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e53ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e50350"/>
        <function-ref name="readDone" scoped="" ref="0x40e505a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e4cb58" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mda100/cb/TempImplP.nc">
      <component-ref qname="TempImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e4cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e4b1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40e4b438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e4c100" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mda100/cb/TempImplP.nc">
      <component-ref qname="TempImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e4c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e4c2d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e4c3b8"/>
        <function-ref name="request" scoped="" ref="0x40e4c498"/>
        <function-ref name="granted" scoped="" ref="0x40e4c578"/>
        <function-ref name="isOwner" scoped="" ref="0x40e4c658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnablePin" ref="0x40e8c250" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnablePin" scoped="" ref="0x40e8c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e8c428"/>
        <function-ref name="isInput" scoped="" ref="0x40e8c508"/>
        <function-ref name="toggle" scoped="" ref="0x40e8c5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e8c6c8"/>
        <function-ref name="get" scoped="" ref="0x40e8c7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e8c888"/>
        <function-ref name="set" scoped="" ref="0x40e8c968"/>
        <function-ref name="clr" scoped="" ref="0x40e8ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e8d118" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e8d118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e8d750"/>
        <function-ref name="readDone" scoped="" ref="0x40e8d9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e8f940" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e8f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e8fb28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e8fc08"/>
        <function-ref name="request" scoped="" ref="0x40e8fce8"/>
        <function-ref name="granted" scoped="" ref="0x40e8fdc8"/>
        <function-ref name="isOwner" scoped="" ref="0x40e8fea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfig" ref="0x40e8dcf0" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcConfig" scoped="" ref="0x40e8dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40e8dec8"/>
        <function-ref name="getChannel" scoped="" ref="0x40e8c010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40e8c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411c5ee8" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411c5ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4120a0e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4120a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4120ae48" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4120ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41209050"/>
        <function-ref name="configure" scoped="" ref="0x41209130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4120a300" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4120a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4120a4d8"/>
        <function-ref name="requested" scoped="" ref="0x4120a5b8"/>
        <function-ref name="granted" scoped="" ref="0x4120a698"/>
        <function-ref name="isOwner" scoped="" ref="0x4120a778"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4120a858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411c57a8" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411c57a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411c5990"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411c5a70"/>
        <function-ref name="request" scoped="" ref="0x411c5b50"/>
        <function-ref name="granted" scoped="" ref="0x411c5c30"/>
        <function-ref name="isOwner" scoped="" ref="0x411c5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4120a998" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4120a998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4120ab70"/>
        <function-ref name="userId" scoped="" ref="0x4120ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411f3208" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411f3208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411f33e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x411f3540" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x411f3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411f3718"/>
        <function-ref name="isEmpty" scoped="" ref="0x411f37f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411f38d8"/>
        <function-ref name="dequeue" scoped="" ref="0x411f39b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411f1e28" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411f1e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411f0050"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411f0130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411f0dc8" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411f0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411ef010"/>
        <function-ref name="configure" scoped="" ref="0x411ef0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x411ef250" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x411ef250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411ef428"/>
        <function-ref name="isEmpty" scoped="" ref="0x411ef508"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411ef5e8"/>
        <function-ref name="dequeue" scoped="" ref="0x411ef6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x411f0270" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411f0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411f0448"/>
        <function-ref name="requested" scoped="" ref="0x411f0528"/>
        <function-ref name="granted" scoped="" ref="0x411f0608"/>
        <function-ref name="isOwner" scoped="" ref="0x411f06e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411f07c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x411ef808" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x411ef808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411ef9e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411efac0"/>
        <function-ref name="led1On" scoped="" ref="0x411efba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411efc80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411efd60"/>
        <function-ref name="get" scoped="" ref="0x411efe40"/>
        <function-ref name="led1Off" scoped="" ref="0x411eff20"/>
        <function-ref name="led0On" scoped="" ref="0x411ee2b8"/>
        <function-ref name="set" scoped="" ref="0x411ee0f8"/>
        <function-ref name="led2On" scoped="" ref="0x411ee018"/>
        <function-ref name="led2Off" scoped="" ref="0x411ee1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411f16e8" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411f16e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411f18d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411f19b0"/>
        <function-ref name="request" scoped="" ref="0x411f1a90"/>
        <function-ref name="granted" scoped="" ref="0x411f1b70"/>
        <function-ref name="isOwner" scoped="" ref="0x411f1c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411f0908" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411f0908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411f0ae0"/>
        <function-ref name="userId" scoped="" ref="0x411f0bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x411ee438" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x411ee438"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411ee610"/>
        <function-ref name="runTask" scoped="" ref="0x411ee6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x41209e60" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41209e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41208050"/>
        <function-ref name="stopDone" scoped="" ref="0x41208130"/>
        <function-ref name="start" scoped="" ref="0x41208210"/>
        <function-ref name="stop" scoped="" ref="0x412082f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41208430" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41208430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41208608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41208748" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41208748"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41208920"/>
        <function-ref name="requested" scoped="" ref="0x41208a00"/>
        <function-ref name="granted" scoped="" ref="0x41208ae0"/>
        <function-ref name="isOwner" scoped="" ref="0x41208bc0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41208ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41208de0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41208de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41207010"/>
        <function-ref name="userId" scoped="" ref="0x412070f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x41211230" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41211230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41211408"/>
        <function-ref name="stopDone" scoped="" ref="0x412114e8"/>
        <function-ref name="start" scoped="" ref="0x412115c8"/>
        <function-ref name="stop" scoped="" ref="0x412116a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x412117e8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x412117e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x412119c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x41210668" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x41210668"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41210840"/>
        <function-ref name="runTask" scoped="" ref="0x41210920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41211b00" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41211b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41211cd8"/>
        <function-ref name="requested" scoped="" ref="0x41211db8"/>
        <function-ref name="granted" scoped="" ref="0x41211e98"/>
        <function-ref name="isOwner" scoped="" ref="0x41210010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412100f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x41210aa0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x41210aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41210c78"/>
        <function-ref name="runTask" scoped="" ref="0x41210d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x41212dc8" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41212dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41211010"/>
        <function-ref name="stop" scoped="" ref="0x412110f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41210230" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41210230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41210408"/>
        <function-ref name="userId" scoped="" ref="0x412104e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41207e28" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41207e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41206050"/>
        <function-ref name="stopDone" scoped="" ref="0x41206130"/>
        <function-ref name="start" scoped="" ref="0x41206210"/>
        <function-ref name="stop" scoped="" ref="0x412062f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnablePin" ref="0x41202a48" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnablePin" scoped="" ref="0x41202a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41202c20"/>
        <function-ref name="isInput" scoped="" ref="0x41202d00"/>
        <function-ref name="toggle" scoped="" ref="0x41202de0"/>
        <function-ref name="isOutput" scoped="" ref="0x41202ec0"/>
        <function-ref name="get" scoped="" ref="0x41201010"/>
        <function-ref name="makeOutput" scoped="" ref="0x412010f0"/>
        <function-ref name="set" scoped="" ref="0x412011d0"/>
        <function-ref name="clr" scoped="" ref="0x412012b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AnalogDeviceResource" ref="0x41205138" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AnalogDeviceResource" scoped="" ref="0x41205138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41205310"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412053f0"/>
        <function-ref name="request" scoped="" ref="0x412054d0"/>
        <function-ref name="granted" scoped="" ref="0x412055b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41205690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDoneTask" ref="0x41200090" loc="108:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDoneTask" scoped="" ref="0x41200090"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41200268"/>
        <function-ref name="runTask" scoped="" ref="0x41200348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41206538" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41206538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41206b70"/>
        <function-ref name="readDone" scoped="" ref="0x41206dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x412004c8" loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x412004c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412006a0"/>
        <function-ref name="runTask" scoped="" ref="0x41200780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x412014a0" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x412014a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41201ae8"/>
        <function-ref name="readDone" scoped="" ref="0x41201d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41205860" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41205860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41202368"/>
        <function-ref name="fired" scoped="" ref="0x41204608"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41204d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x41204ab8"/>
        <function-ref name="getdt" scoped="" ref="0x41202818"/>
        <function-ref name="gett0" scoped="" ref="0x412025c0"/>
        <function-ref name="isRunning" scoped="" ref="0x41204860"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41205e88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41202048"/>
        <function-ref name="startOneShot" scoped="" ref="0x41204130"/>
        <function-ref name="stop" scoped="" ref="0x412043b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411fd230" loc="28:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411fd230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411fd408"/>
        <function-ref name="configure" scoped="" ref="0x411fd4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x411fe108" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x411fe108"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411fe750"/>
        <function-ref name="readDone" scoped="" ref="0x411fe9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x411fecd0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x411fecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x411feea8"/>
        <function-ref name="getChannel" scoped="" ref="0x411fd010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x411fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411ff9c8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411ff9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411ffba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411ffc80"/>
        <function-ref name="request" scoped="" ref="0x411ffd60"/>
        <function-ref name="granted" scoped="" ref="0x411ffe40"/>
        <function-ref name="isOwner" scoped="" ref="0x411fff20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411fb130" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="TempImplP.SharedAnalogDeviceC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411fb130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411fac20"/>
        <function-ref name="fired" scoped="" ref="0x411fbeb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411fa5e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x411fa388"/>
        <function-ref name="getdt" scoped="" ref="0x411f90f0"/>
        <function-ref name="gett0" scoped="" ref="0x411fae78"/>
        <function-ref name="isRunning" scoped="" ref="0x411fa130"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411fb758"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411fa900"/>
        <function-ref name="startOneShot" scoped="" ref="0x411fb9d8"/>
        <function-ref name="stop" scoped="" ref="0x411fbc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x40eb00c0" loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x40eb00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40eb0298"/>
        <function-ref name="disable" scoped="" ref="0x40eb0378"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40eb0458"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40eb0538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40eabd00" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40eabd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40eabed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x40eb7650" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x40eb7650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb7828"/>
        <function-ref name="isInput" scoped="" ref="0x40eb7908"/>
        <function-ref name="toggle" scoped="" ref="0x40eb79e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb7ac8"/>
        <function-ref name="get" scoped="" ref="0x40eb7ba8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb7c88"/>
        <function-ref name="set" scoped="" ref="0x40eb7d68"/>
        <function-ref name="clr" scoped="" ref="0x40eb7e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x40eb5490" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x40eb5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb5668"/>
        <function-ref name="isInput" scoped="" ref="0x40eb5748"/>
        <function-ref name="toggle" scoped="" ref="0x40eb5828"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb5908"/>
        <function-ref name="get" scoped="" ref="0x40eb59e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb5ac8"/>
        <function-ref name="set" scoped="" ref="0x40eb5ba8"/>
        <function-ref name="clr" scoped="" ref="0x40eb5c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40eaa8b8" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40eaa8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40eaaa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40ea9090" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40ea9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea9368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40eb32e0" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40eb32e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb34b8"/>
        <function-ref name="isInput" scoped="" ref="0x40eb3598"/>
        <function-ref name="toggle" scoped="" ref="0x40eb3678"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb3758"/>
        <function-ref name="get" scoped="" ref="0x40eb3838"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb3918"/>
        <function-ref name="set" scoped="" ref="0x40eb39f8"/>
        <function-ref name="clr" scoped="" ref="0x40eb3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x40eaca30" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x40eaca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eacc08"/>
        <function-ref name="isInput" scoped="" ref="0x40eacce8"/>
        <function-ref name="toggle" scoped="" ref="0x40eacdc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eacea8"/>
        <function-ref name="get" scoped="" ref="0x40eab010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eab0f0"/>
        <function-ref name="set" scoped="" ref="0x40eab1d0"/>
        <function-ref name="clr" scoped="" ref="0x40eab2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x40eb81f0" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x40eb81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb83c8"/>
        <function-ref name="isInput" scoped="" ref="0x40eb84a8"/>
        <function-ref name="toggle" scoped="" ref="0x40eb8588"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb8668"/>
        <function-ref name="get" scoped="" ref="0x40eb8748"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb8828"/>
        <function-ref name="set" scoped="" ref="0x40eb8908"/>
        <function-ref name="clr" scoped="" ref="0x40eb89e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x40eb6050" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x40eb6050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb6228"/>
        <function-ref name="isInput" scoped="" ref="0x40eb6308"/>
        <function-ref name="toggle" scoped="" ref="0x40eb63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb64c8"/>
        <function-ref name="get" scoped="" ref="0x40eb65a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb6688"/>
        <function-ref name="set" scoped="" ref="0x40eb6768"/>
        <function-ref name="clr" scoped="" ref="0x40eb6848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x40eb0ea0" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x40eb0ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40eaf0c0"/>
        <function-ref name="disable" scoped="" ref="0x40eaf1a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40eaf280"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40eaf360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40eaa118" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40eaa118"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40eaa2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x40eac010" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x40eac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eac1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40eac2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40eac3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eac488"/>
        <function-ref name="get" scoped="" ref="0x40eac568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eac648"/>
        <function-ref name="set" scoped="" ref="0x40eac728"/>
        <function-ref name="clr" scoped="" ref="0x40eac808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x40eb5e68" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x40eb5e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb4050"/>
        <function-ref name="isInput" scoped="" ref="0x40eb4130"/>
        <function-ref name="toggle" scoped="" ref="0x40eb4210"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb42f0"/>
        <function-ref name="get" scoped="" ref="0x40eb43d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb44b0"/>
        <function-ref name="set" scoped="" ref="0x40eb4590"/>
        <function-ref name="clr" scoped="" ref="0x40eb4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x40eae8e0" loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x40eae8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40eaeb38"/>
        <function-ref name="disable" scoped="" ref="0x40eaec18"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40eaecf8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40eaedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40ea9560" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40ea9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea9738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40eb3cc8" loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40eb3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb3ea0"/>
        <function-ref name="isInput" scoped="" ref="0x40eb2010"/>
        <function-ref name="toggle" scoped="" ref="0x40eb20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb21d0"/>
        <function-ref name="get" scoped="" ref="0x40eb22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb2390"/>
        <function-ref name="set" scoped="" ref="0x40eb2470"/>
        <function-ref name="clr" scoped="" ref="0x40eb2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x40eb8bc8" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x40eb8bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb8da0"/>
        <function-ref name="isInput" scoped="" ref="0x40eb8e80"/>
        <function-ref name="toggle" scoped="" ref="0x40eb7010"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb70f0"/>
        <function-ref name="get" scoped="" ref="0x40eb71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb72b0"/>
        <function-ref name="set" scoped="" ref="0x40eb7390"/>
        <function-ref name="clr" scoped="" ref="0x40eb7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x40eb6a28" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x40eb6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb6c00"/>
        <function-ref name="isInput" scoped="" ref="0x40eb6ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40eb6dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb6ea0"/>
        <function-ref name="get" scoped="" ref="0x40eb5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb50f0"/>
        <function-ref name="set" scoped="" ref="0x40eb51d0"/>
        <function-ref name="clr" scoped="" ref="0x40eb52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40eaa4e8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40eaa4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40eaa6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40eaac88" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40eaac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40eaae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40eb4860" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40eb4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb4a38"/>
        <function-ref name="isInput" scoped="" ref="0x40eb4b18"/>
        <function-ref name="toggle" scoped="" ref="0x40eb4bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb4cd8"/>
        <function-ref name="get" scoped="" ref="0x40eb4db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb4e98"/>
        <function-ref name="set" scoped="" ref="0x40eb3010"/>
        <function-ref name="clr" scoped="" ref="0x40eb30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x40eb07b0" loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x40eb07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40eb0988"/>
        <function-ref name="disable" scoped="" ref="0x40eb0a68"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40eb0b48"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40eb0c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x40eaf588" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x40eaf588"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eaf760"/>
        <function-ref name="isInput" scoped="" ref="0x40eaf840"/>
        <function-ref name="toggle" scoped="" ref="0x40eaf920"/>
        <function-ref name="isOutput" scoped="" ref="0x40eafa00"/>
        <function-ref name="get" scoped="" ref="0x40eafae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eafbc0"/>
        <function-ref name="set" scoped="" ref="0x40eafca0"/>
        <function-ref name="clr" scoped="" ref="0x40eafd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40ea9930" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40ea9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea9b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x40e8b7e8" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x40e8b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e8b9c0"/>
        <function-ref name="isInput" scoped="" ref="0x40e8baa0"/>
        <function-ref name="toggle" scoped="" ref="0x40e8bb80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e8bc60"/>
        <function-ref name="get" scoped="" ref="0x40e8bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e8be20"/>
        <function-ref name="set" scoped="" ref="0x40e8bf00"/>
        <function-ref name="clr" scoped="" ref="0x40eb8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40eb2740" loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40eb2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb2918"/>
        <function-ref name="isInput" scoped="" ref="0x40eb29f8"/>
        <function-ref name="toggle" scoped="" ref="0x40eb2ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb2bb8"/>
        <function-ref name="get" scoped="" ref="0x40eb2c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb2d78"/>
        <function-ref name="set" scoped="" ref="0x40eb2e58"/>
        <function-ref name="clr" scoped="" ref="0x40eb1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40ea84b8" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40ea84b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea8690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40ea5060" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40ea5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea5238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40ea5800" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40ea5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea59d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40ea8888" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40ea8888"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea8a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40ea5bd0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40ea5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea5da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40ea8c58" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40ea8c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40ea5430" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40ea5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea5608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40ea4010" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40ea4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40ea41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x40eca010" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x40eca010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eca1e8"/>
        <function-ref name="fired" scoped="" ref="0x40eca2c8"/>
        <function-ref name="disable" scoped="" ref="0x40eca3a8"/>
        <function-ref name="edge" scoped="" ref="0x40eca488"/>
        <function-ref name="enable" scoped="" ref="0x40eca568"/>
        <function-ref name="getValue" scoped="" ref="0x40eca648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40ecd338" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40ecd338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecd510"/>
        <function-ref name="fired" scoped="" ref="0x40ecd5f0"/>
        <function-ref name="disable" scoped="" ref="0x40ecd6d0"/>
        <function-ref name="edge" scoped="" ref="0x40ecd7b0"/>
        <function-ref name="enable" scoped="" ref="0x40ecd890"/>
        <function-ref name="getValue" scoped="" ref="0x40ecd970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x40eccd78" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x40eccd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecb010"/>
        <function-ref name="fired" scoped="" ref="0x40ecb0f0"/>
        <function-ref name="disable" scoped="" ref="0x40ecb1d0"/>
        <function-ref name="edge" scoped="" ref="0x40ecb2b0"/>
        <function-ref name="enable" scoped="" ref="0x40ecb390"/>
        <function-ref name="getValue" scoped="" ref="0x40ecb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x40eca890" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x40eca890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecaa68"/>
        <function-ref name="fired" scoped="" ref="0x40ecab48"/>
        <function-ref name="disable" scoped="" ref="0x40ecac28"/>
        <function-ref name="edge" scoped="" ref="0x40ecad08"/>
        <function-ref name="enable" scoped="" ref="0x40ecade8"/>
        <function-ref name="getValue" scoped="" ref="0x40ecaec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40ecdbb8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40ecdbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecdd90"/>
        <function-ref name="fired" scoped="" ref="0x40ecde70"/>
        <function-ref name="disable" scoped="" ref="0x40ecc010"/>
        <function-ref name="edge" scoped="" ref="0x40ecc0f0"/>
        <function-ref name="enable" scoped="" ref="0x40ecc1d0"/>
        <function-ref name="getValue" scoped="" ref="0x40ecc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x40ecb6b8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x40ecb6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecb890"/>
        <function-ref name="fired" scoped="" ref="0x40ecb970"/>
        <function-ref name="disable" scoped="" ref="0x40ecba50"/>
        <function-ref name="edge" scoped="" ref="0x40ecbb30"/>
        <function-ref name="enable" scoped="" ref="0x40ecbc10"/>
        <function-ref name="getValue" scoped="" ref="0x40ecbcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40ea7aa0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40ea7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ea7c78"/>
        <function-ref name="fired" scoped="" ref="0x40ea7d58"/>
        <function-ref name="disable" scoped="" ref="0x40ea7e38"/>
        <function-ref name="edge" scoped="" ref="0x40ea7f18"/>
        <function-ref name="enable" scoped="" ref="0x40ecd010"/>
        <function-ref name="getValue" scoped="" ref="0x40ecd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40ecc4f8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40ecc4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ecc6d0"/>
        <function-ref name="fired" scoped="" ref="0x40ecc7b0"/>
        <function-ref name="disable" scoped="" ref="0x40ecc890"/>
        <function-ref name="edge" scoped="" ref="0x40ecc970"/>
        <function-ref name="enable" scoped="" ref="0x40ecca50"/>
        <function-ref name="getValue" scoped="" ref="0x40eccb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x40ec6f08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x40ec6f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ec50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40ec4850" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40ec4850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ec4a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x40ec6618" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x40ec6618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ec67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40ec5390" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40ec5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ec5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x40ec4cc8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x40ec4cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ec4ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40ec6a90" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40ec6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ec6c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x40ec43d8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x40ec43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ec45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40ec61a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40ec61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ec6378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40ee63b0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40ee63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ee6588"/>
        <function-ref name="fired" scoped="" ref="0x40ee6668"/>
        <function-ref name="disable" scoped="" ref="0x40ee6748"/>
        <function-ref name="edge" scoped="" ref="0x40ee6828"/>
        <function-ref name="enable" scoped="" ref="0x40ee6908"/>
        <function-ref name="getValue" scoped="" ref="0x40ee69e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40ee6b68" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40ee6b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ee6d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40eda538" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40eda538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eda710"/>
        <function-ref name="fired" scoped="" ref="0x40eda7f0"/>
        <function-ref name="disable" scoped="" ref="0x40eda8d0"/>
        <function-ref name="edge" scoped="" ref="0x40eda9b0"/>
        <function-ref name="enable" scoped="" ref="0x40edaa90"/>
        <function-ref name="getValue" scoped="" ref="0x40edab70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40edacf0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40edacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40edaec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40ed86c0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40ed86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ed8898"/>
        <function-ref name="fired" scoped="" ref="0x40ed8978"/>
        <function-ref name="disable" scoped="" ref="0x40ed8a58"/>
        <function-ref name="edge" scoped="" ref="0x40ed8b38"/>
        <function-ref name="enable" scoped="" ref="0x40ed8c18"/>
        <function-ref name="getValue" scoped="" ref="0x40ed8cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40ed8e78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40ed8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ed6070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40ed57a8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40ed57a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ed5980"/>
        <function-ref name="fired" scoped="" ref="0x40ed5a60"/>
        <function-ref name="disable" scoped="" ref="0x40ed5b40"/>
        <function-ref name="edge" scoped="" ref="0x40ed5c20"/>
        <function-ref name="enable" scoped="" ref="0x40ed5d00"/>
        <function-ref name="getValue" scoped="" ref="0x40ed5de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40ed4010" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40ed4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ed41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40ed3a08" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40ed3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ed3be0"/>
        <function-ref name="fired" scoped="" ref="0x40ed3cc0"/>
        <function-ref name="disable" scoped="" ref="0x40ed3da0"/>
        <function-ref name="edge" scoped="" ref="0x40ed3e80"/>
        <function-ref name="enable" scoped="" ref="0x40ed2010"/>
        <function-ref name="getValue" scoped="" ref="0x40ed20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40ed2270" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40ed2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ed2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40f03c70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40f03c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f03e48"/>
        <function-ref name="fired" scoped="" ref="0x40f03f28"/>
        <function-ref name="disable" scoped="" ref="0x40f02018"/>
        <function-ref name="edge" scoped="" ref="0x40f020f8"/>
        <function-ref name="enable" scoped="" ref="0x40f021d8"/>
        <function-ref name="getValue" scoped="" ref="0x40f022b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40f02438" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40f02438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f02610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40f01e68" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40f01e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f00050"/>
        <function-ref name="fired" scoped="" ref="0x40f00130"/>
        <function-ref name="disable" scoped="" ref="0x40f00210"/>
        <function-ref name="edge" scoped="" ref="0x40f002f0"/>
        <function-ref name="enable" scoped="" ref="0x40f003d0"/>
        <function-ref name="getValue" scoped="" ref="0x40f004b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40f00630" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40f00630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f00808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40efd050" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40efd050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40efd228"/>
        <function-ref name="fired" scoped="" ref="0x40efd308"/>
        <function-ref name="disable" scoped="" ref="0x40efd3e8"/>
        <function-ref name="edge" scoped="" ref="0x40efd4c8"/>
        <function-ref name="enable" scoped="" ref="0x40efd5a8"/>
        <function-ref name="getValue" scoped="" ref="0x40efd688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40efd808" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40efd808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40efd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40ef5050" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40ef5050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ef5228"/>
        <function-ref name="fired" scoped="" ref="0x40ef5308"/>
        <function-ref name="disable" scoped="" ref="0x40ef53e8"/>
        <function-ref name="edge" scoped="" ref="0x40ef54c8"/>
        <function-ref name="enable" scoped="" ref="0x40ef55a8"/>
        <function-ref name="getValue" scoped="" ref="0x40ef5688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40ef6a28" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40ef6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ef6c00"/>
        <function-ref name="disable" scoped="" ref="0x40ef6ce0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40ef6dc0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40ef6ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40eed190" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40eed190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eed368"/>
        <function-ref name="fired" scoped="" ref="0x40eed448"/>
        <function-ref name="disable" scoped="" ref="0x40eed528"/>
        <function-ref name="edge" scoped="" ref="0x40eed608"/>
        <function-ref name="enable" scoped="" ref="0x40eed6e8"/>
        <function-ref name="getValue" scoped="" ref="0x40eed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40eeeae0" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40eeeae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40eeecb8"/>
        <function-ref name="disable" scoped="" ref="0x40eeed98"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40eeee78"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40eed010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40eeb270" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40eeb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eeb448"/>
        <function-ref name="fired" scoped="" ref="0x40eeb528"/>
        <function-ref name="disable" scoped="" ref="0x40eeb608"/>
        <function-ref name="edge" scoped="" ref="0x40eeb6e8"/>
        <function-ref name="enable" scoped="" ref="0x40eeb7c8"/>
        <function-ref name="getValue" scoped="" ref="0x40eeb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40eecc30" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40eecc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40eece08"/>
        <function-ref name="disable" scoped="" ref="0x40eecee8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40eeb010"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40eeb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40f1a358" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40f1a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f1a530"/>
        <function-ref name="fired" scoped="" ref="0x40f1a610"/>
        <function-ref name="disable" scoped="" ref="0x40f1a6f0"/>
        <function-ref name="edge" scoped="" ref="0x40f1a7d0"/>
        <function-ref name="enable" scoped="" ref="0x40f1a8b0"/>
        <function-ref name="getValue" scoped="" ref="0x40f1a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40f1bd48" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40f1bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f1bf20"/>
        <function-ref name="disable" scoped="" ref="0x40f1a018"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40f1a0f8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40f1a1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40f129c0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoTempConfigC.nc">
      <component-ref qname="PhotoTempConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f129c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f12b98"/>
        <function-ref name="getChannel" scoped="" ref="0x40f12c78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f12d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x40f0fb38" loc="17:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoTempConfigP.nc">
      <component-ref qname="PhotoTempConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x40f0fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40f0fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40f0f538" loc="16:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoTempConfigP.nc">
      <component-ref qname="PhotoTempConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f0f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f0f710"/>
        <function-ref name="getChannel" scoped="" ref="0x40f0f7f0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f0f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f10580" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f10580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f10bb8"/>
        <function-ref name="readDone" scoped="" ref="0x40f10e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40f0d2a0" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40f0d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f0d8d8"/>
        <function-ref name="readDone" scoped="" ref="0x40f0db40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40f0dec0" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f0dec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f090c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f091a0"/>
        <function-ref name="request" scoped="" ref="0x40f09280"/>
        <function-ref name="granted" scoped="" ref="0x40f09360"/>
        <function-ref name="isOwner" scoped="" ref="0x40f09440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e548e0" loc="19:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoC.nc">
      <component-ref qname="SensActC.S_PHOTO"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e548e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e54f08"/>
        <function-ref name="readDone" scoped="" ref="0x40e51180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f066b8" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f066b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f06ce0"/>
        <function-ref name="readDone" scoped="" ref="0x40f35010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f325f0" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoImplP.nc">
      <component-ref qname="PhotoImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f325f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f32c18"/>
        <function-ref name="readDone" scoped="" ref="0x40f32e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f35b00" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mda100/PhotoImplP.nc">
      <component-ref qname="PhotoImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f35b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f35cd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f35db8"/>
        <function-ref name="request" scoped="" ref="0x40f35e98"/>
        <function-ref name="granted" scoped="" ref="0x40f32010"/>
        <function-ref name="isOwner" scoped="" ref="0x40f320f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnablePin" ref="0x40f2e840" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnablePin" scoped="" ref="0x40f2e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f2ea18"/>
        <function-ref name="isInput" scoped="" ref="0x40f2eaf8"/>
        <function-ref name="toggle" scoped="" ref="0x40f2ebd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f2ecb8"/>
        <function-ref name="get" scoped="" ref="0x40f2ed98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f2ee78"/>
        <function-ref name="set" scoped="" ref="0x40f2d010"/>
        <function-ref name="clr" scoped="" ref="0x40f2d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f2f6d8" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f2f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f2fd10"/>
        <function-ref name="readDone" scoped="" ref="0x40f2e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f30f10" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f30f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f2f110"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f2f1f0"/>
        <function-ref name="request" scoped="" ref="0x40f2f2d0"/>
        <function-ref name="granted" scoped="" ref="0x40f2f3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f2f490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfig" ref="0x40f2e348" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcConfig" scoped="" ref="0x40f2e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f2e520"/>
        <function-ref name="getChannel" scoped="" ref="0x40f2e600"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f2e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4127a010" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4127a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4127a1f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4127a2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41279010" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41279010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412791f8"/>
        <function-ref name="configure" scoped="" ref="0x412792d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4127a418" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4127a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4127a5f0"/>
        <function-ref name="requested" scoped="" ref="0x4127a6d0"/>
        <function-ref name="granted" scoped="" ref="0x4127a7b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4127a890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4127a970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4127b820" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4127b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4127ba08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4127bae8"/>
        <function-ref name="request" scoped="" ref="0x4127bbc8"/>
        <function-ref name="granted" scoped="" ref="0x4127bca8"/>
        <function-ref name="isOwner" scoped="" ref="0x4127bd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4127aab0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4127aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4127ac88"/>
        <function-ref name="userId" scoped="" ref="0x4127ad68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412a23c8" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412a23c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412a25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x412a2700" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x412a2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412a28d8"/>
        <function-ref name="isEmpty" scoped="" ref="0x412a29b8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412a2a98"/>
        <function-ref name="dequeue" scoped="" ref="0x412a2b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412a0010" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412a01f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412a02d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4129e010" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4129e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4129e1f8"/>
        <function-ref name="configure" scoped="" ref="0x4129e2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4129e438" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4129e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4129e610"/>
        <function-ref name="isEmpty" scoped="" ref="0x4129e6f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4129e7d0"/>
        <function-ref name="dequeue" scoped="" ref="0x4129e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x412a0418" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412a0418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412a05f0"/>
        <function-ref name="requested" scoped="" ref="0x412a06d0"/>
        <function-ref name="granted" scoped="" ref="0x412a07b0"/>
        <function-ref name="isOwner" scoped="" ref="0x412a0890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412a0970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4129e9f0" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4129e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4129ebc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4129eca8"/>
        <function-ref name="led1On" scoped="" ref="0x4129ed88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4129ee68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4129d010"/>
        <function-ref name="get" scoped="" ref="0x4129d0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x4129d1d0"/>
        <function-ref name="led0On" scoped="" ref="0x4129d550"/>
        <function-ref name="set" scoped="" ref="0x4129d390"/>
        <function-ref name="led2On" scoped="" ref="0x4129d2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4129d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412a1860" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412a1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412a1a48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412a1b28"/>
        <function-ref name="request" scoped="" ref="0x412a1c08"/>
        <function-ref name="granted" scoped="" ref="0x412a1ce8"/>
        <function-ref name="isOwner" scoped="" ref="0x412a1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412a0ab0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412a0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412a0c88"/>
        <function-ref name="userId" scoped="" ref="0x412a0d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4129d6d0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4129d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4129d8a8"/>
        <function-ref name="runTask" scoped="" ref="0x4129d988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x41278030" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41278030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41278208"/>
        <function-ref name="stopDone" scoped="" ref="0x412782e8"/>
        <function-ref name="start" scoped="" ref="0x412783c8"/>
        <function-ref name="stop" scoped="" ref="0x412784a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x412785e8" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x412785e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x412787c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41278900" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41278900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41278ad8"/>
        <function-ref name="requested" scoped="" ref="0x41278bb8"/>
        <function-ref name="granted" scoped="" ref="0x41278c98"/>
        <function-ref name="isOwner" scoped="" ref="0x41278d78"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41278e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41276010" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41276010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412761e8"/>
        <function-ref name="userId" scoped="" ref="0x412762c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x412c2660" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412c2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412c2838"/>
        <function-ref name="stopDone" scoped="" ref="0x412c2918"/>
        <function-ref name="start" scoped="" ref="0x412c29f8"/>
        <function-ref name="stop" scoped="" ref="0x412c2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x412c2c18" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x412c2c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x412c2df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x412c1ae0" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x412c1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412c1cb8"/>
        <function-ref name="runTask" scoped="" ref="0x412c1d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x412c1010" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x412c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412c11e8"/>
        <function-ref name="requested" scoped="" ref="0x412c12c8"/>
        <function-ref name="granted" scoped="" ref="0x412c13a8"/>
        <function-ref name="isOwner" scoped="" ref="0x412c1488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412c1568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x412c1f18" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x412c1f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412c0108"/>
        <function-ref name="runTask" scoped="" ref="0x412c01e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x412c2268" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x412c2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412c2440"/>
        <function-ref name="stop" scoped="" ref="0x412c2520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x412c16a8" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412c16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412c1880"/>
        <function-ref name="userId" scoped="" ref="0x412c1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41275030" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41275030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41275208"/>
        <function-ref name="stopDone" scoped="" ref="0x412752e8"/>
        <function-ref name="start" scoped="" ref="0x412753c8"/>
        <function-ref name="stop" scoped="" ref="0x412754a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnablePin" ref="0x41272c50" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnablePin" scoped="" ref="0x41272c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41272e28"/>
        <function-ref name="isInput" scoped="" ref="0x41272f08"/>
        <function-ref name="toggle" scoped="" ref="0x41270010"/>
        <function-ref name="isOutput" scoped="" ref="0x412700f0"/>
        <function-ref name="get" scoped="" ref="0x412701d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412702b0"/>
        <function-ref name="set" scoped="" ref="0x41270390"/>
        <function-ref name="clr" scoped="" ref="0x41270470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AnalogDeviceResource" ref="0x41274348" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AnalogDeviceResource" scoped="" ref="0x41274348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41274520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41274600"/>
        <function-ref name="request" scoped="" ref="0x412746e0"/>
        <function-ref name="granted" scoped="" ref="0x412747c0"/>
        <function-ref name="isOwner" scoped="" ref="0x412748a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDoneTask" ref="0x4126f250" loc="108:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDoneTask" scoped="" ref="0x4126f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4126f428"/>
        <function-ref name="runTask" scoped="" ref="0x4126f508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x412756f0" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x412756f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41275d28"/>
        <function-ref name="readDone" scoped="" ref="0x41274010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x4126f688" loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x4126f688"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4126f860"/>
        <function-ref name="runTask" scoped="" ref="0x4126f940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x41270660" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x41270660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41270ca8"/>
        <function-ref name="readDone" scoped="" ref="0x41270f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41274a70" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41274a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41272570"/>
        <function-ref name="fired" scoped="" ref="0x41273810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41273f18"/>
        <function-ref name="isOneShot" scoped="" ref="0x41273cc0"/>
        <function-ref name="getdt" scoped="" ref="0x41272a20"/>
        <function-ref name="gett0" scoped="" ref="0x412727c8"/>
        <function-ref name="isRunning" scoped="" ref="0x41273a68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x412730b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41272250"/>
        <function-ref name="startOneShot" scoped="" ref="0x41273338"/>
        <function-ref name="stop" scoped="" ref="0x412735b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4126c380" loc="28:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4126c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4126c558"/>
        <function-ref name="configure" scoped="" ref="0x4126c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x4126d2c8" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x4126d2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4126d910"/>
        <function-ref name="readDone" scoped="" ref="0x4126db88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4126de90" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4126de90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4126c080"/>
        <function-ref name="getChannel" scoped="" ref="0x4126c160"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4126c240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4126eb88" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4126eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4126ed60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4126ee40"/>
        <function-ref name="request" scoped="" ref="0x4126ef20"/>
        <function-ref name="granted" scoped="" ref="0x4126d018"/>
        <function-ref name="isOwner" scoped="" ref="0x4126d0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4126b2c0" loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/TimerMilliC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4126b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40456c50"/>
            <typename><typedef-ref name="TMilli" ref="0x40456e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4126adb0"/>
        <function-ref name="fired" scoped="" ref="0x4126a068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4126a770"/>
        <function-ref name="isOneShot" scoped="" ref="0x4126a518"/>
        <function-ref name="getdt" scoped="" ref="0x412a82a0"/>
        <function-ref name="gett0" scoped="" ref="0x412a8048"/>
        <function-ref name="isRunning" scoped="" ref="0x4126a2c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4126b8e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4126aa90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4126bb68"/>
        <function-ref name="stop" scoped="" ref="0x4126bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f330a8" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f330a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f336e0"/>
        <function-ref name="readDone" scoped="" ref="0x40f33948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40f33da8" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40f33da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f2a3f0"/>
        <function-ref name="readDone" scoped="" ref="0x40f2a658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40f2a9d8" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f2a9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f2abc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f2aca0"/>
        <function-ref name="request" scoped="" ref="0x40f2ad80"/>
        <function-ref name="granted" scoped="" ref="0x40f2ae60"/>
        <function-ref name="isOwner" scoped="" ref="0x40f28010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f04360" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="SensActC.S_VOLT"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f04360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f04988"/>
        <function-ref name="readDone" scoped="" ref="0x40f04be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x412e4a80" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_VOLT.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x412e4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412e4c58"/>
        <function-ref name="configure" scoped="" ref="0x412e4d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x412e59e8" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_VOLT.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x412e59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412e4048"/>
        <function-ref name="readDone" scoped="" ref="0x412e42a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x412e45a8" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SensActC.S_VOLT.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x412e45a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x412e4780"/>
        <function-ref name="getChannel" scoped="" ref="0x412e4860"/>
        <function-ref name="getPrescaler" scoped="" ref="0x412e4940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40f1e830" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f1e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f1ea08"/>
        <function-ref name="getChannel" scoped="" ref="0x40f1eae8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f1ebc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40f27c38" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f27c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f27e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f27ef0"/>
        <function-ref name="led1On" scoped="" ref="0x40f4a010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f4a0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f4a1d0"/>
        <function-ref name="get" scoped="" ref="0x40f4a2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40f4a390"/>
        <function-ref name="led2Off" scoped="" ref="0x40f4a710"/>
        <function-ref name="set" scoped="" ref="0x40f4a470"/>
        <function-ref name="led0On" scoped="" ref="0x40f4a550"/>
        <function-ref name="led2On" scoped="" ref="0x40f4a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40f46030" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40f46030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f46208"/>
        <function-ref name="isInput" scoped="" ref="0x40f462e8"/>
        <function-ref name="toggle" scoped="" ref="0x40f463c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f464a8"/>
        <function-ref name="get" scoped="" ref="0x40f46588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f46668"/>
        <function-ref name="set" scoped="" ref="0x40f46748"/>
        <function-ref name="clr" scoped="" ref="0x40f46828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f47010" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f47010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f471e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40f46a18" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40f46a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f46bf0"/>
        <function-ref name="isInput" scoped="" ref="0x40f46cd0"/>
        <function-ref name="toggle" scoped="" ref="0x40f46db0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f46e90"/>
        <function-ref name="get" scoped="" ref="0x40f45010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f450f0"/>
        <function-ref name="set" scoped="" ref="0x40f451d0"/>
        <function-ref name="clr" scoped="" ref="0x40f452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40f47358" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f47358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f47530"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f47610"/>
        <function-ref name="led1On" scoped="" ref="0x40f476f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f477d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f478b0"/>
        <function-ref name="get" scoped="" ref="0x40f47990"/>
        <function-ref name="led1Off" scoped="" ref="0x40f47a70"/>
        <function-ref name="led2Off" scoped="" ref="0x40f47df0"/>
        <function-ref name="set" scoped="" ref="0x40f47b50"/>
        <function-ref name="led0On" scoped="" ref="0x40f47c30"/>
        <function-ref name="led2On" scoped="" ref="0x40f47d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40f454a0" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40f454a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f45678"/>
        <function-ref name="isInput" scoped="" ref="0x40f45758"/>
        <function-ref name="toggle" scoped="" ref="0x40f45838"/>
        <function-ref name="isOutput" scoped="" ref="0x40f45918"/>
        <function-ref name="get" scoped="" ref="0x40f459f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f45ad8"/>
        <function-ref name="set" scoped="" ref="0x40f45bb8"/>
        <function-ref name="clr" scoped="" ref="0x40f45c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40f49e30" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40f49e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f69050"/>
        <function-ref name="isInput" scoped="" ref="0x40f69130"/>
        <function-ref name="toggle" scoped="" ref="0x40f69210"/>
        <function-ref name="isOutput" scoped="" ref="0x40f692f0"/>
        <function-ref name="get" scoped="" ref="0x40f693d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f694b0"/>
        <function-ref name="set" scoped="" ref="0x40f69590"/>
        <function-ref name="clr" scoped="" ref="0x40f69670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40f69880" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40f69880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f69a58"/>
        <function-ref name="isInput" scoped="" ref="0x40f69b38"/>
        <function-ref name="toggle" scoped="" ref="0x40f69c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40f69cf8"/>
        <function-ref name="get" scoped="" ref="0x40f69dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f69eb8"/>
        <function-ref name="set" scoped="" ref="0x40f68010"/>
        <function-ref name="clr" scoped="" ref="0x40f680f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40f68c88" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f68c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f68e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40f68300" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40f68300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f684d8"/>
        <function-ref name="isInput" scoped="" ref="0x40f685b8"/>
        <function-ref name="toggle" scoped="" ref="0x40f68698"/>
        <function-ref name="isOutput" scoped="" ref="0x40f68778"/>
        <function-ref name="get" scoped="" ref="0x40f68858"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f68938"/>
        <function-ref name="set" scoped="" ref="0x40f68a18"/>
        <function-ref name="clr" scoped="" ref="0x40f68af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x40f64910" loc="13:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueC.nc">
      <component-ref qname="VMCustomC.usrDataQ"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x40f64910"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x40f64ae8"/>
        <function-ref name="dataReady" scoped="" ref="0x40f63390"/>
        <function-ref name="element" scoped="" ref="0x40f64ca8"/>
        <function-ref name="get" scoped="" ref="0x40f64d88"/>
        <function-ref name="read" scoped="" ref="0x40f64e68"/>
        <function-ref name="remove" scoped="" ref="0x40f63010"/>
        <function-ref name="maxSize" scoped="" ref="0x40f630f0"/>
        <function-ref name="put" scoped="" ref="0x40f631d0"/>
        <function-ref name="isFree" scoped="" ref="0x40f632b0"/>
        <function-ref name="size" scoped="" ref="0x40f64bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dataQueue" ref="0x412dd060" loc="5:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="VMCustomC.usrDataQ.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataQueue" scoped="" ref="0x412dd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="dataQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x412dd238"/>
        <function-ref name="size" scoped="" ref="0x412dda18"/>
        <function-ref name="element" scoped="" ref="0x412dd3f8"/>
        <function-ref name="get" scoped="" ref="0x412dd4d8"/>
        <function-ref name="read" scoped="" ref="0x412dd5b8"/>
        <function-ref name="remove" scoped="" ref="0x412dd698"/>
        <function-ref name="maxSize" scoped="" ref="0x412dd778"/>
        <function-ref name="put" scoped="" ref="0x412dd858"/>
        <function-ref name="isFree" scoped="" ref="0x412dd938"/>
        <function-ref name="dataReady" scoped="" ref="0x412dd318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dataReady" ref="0x412ddb98" loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueueP.nc">
      <component-ref qname="VMCustomC.usrDataQ.dQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dataReady" scoped="" ref="0x412ddb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412ddd70"/>
        <function-ref name="runTask" scoped="" ref="0x412dde50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40f62058" loc="43:/home/branco/gitspace/Terra/TerraVM/src/system/QueueC.nc">
      <component-ref qname="TerraVMAppC.evtQ"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f62058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="evtData" ref="0x404ae1f8"/>
            <typename><typedef-ref name="evtData_t" ref="0x404ae820"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40f62d88"/>
        <function-ref name="enqueue" scoped="" ref="0x40f604a0"/>
        <function-ref name="element" scoped="" ref="0x40f607f0"/>
        <function-ref name="maxSize" scoped="" ref="0x40f62b30"/>
        <function-ref name="dequeue" scoped="" ref="0x40f60130"/>
        <function-ref name="empty" scoped="" ref="0x40f62680"/>
        <function-ref name="size" scoped="" ref="0x40f628d8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="TaskBasic" loc="55:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4040ac58" loc="67:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4040e1a8" loc="75:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/branco/gitspace/Terra/TerraVM/src/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="VMCustom" loc="12:VMCustom.nc">
      <documentation loc="7:VMCustom.nc">
        <short>&#10; Interface: VMCustom&#10; Virtual Machine custom component interface&#10; &#10;</short>
      </documentation>
      <function event="" provided="0" name="evtError" ref="0x404ccec0" loc="23:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ecode" ref="0x404ccd68" loc="23:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="procOutEvt" ref="0x404c61e8" loc="13:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x404ade50" loc="13:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x404c6088" loc="13:VMCustom.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setMVal" ref="0x404cc010" loc="20:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x404cd7d0" loc="20:VMCustom.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
          <variable name="Maddr" ref="0x404cd9d8" loc="20:VMCustom.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
          <variable name="fromTp" ref="0x404cdbd8" loc="20:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="tpTp" ref="0x404cddc8" loc="20:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getTime" ref="0x404cb2d0" loc="24:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getRealAddr" ref="0x404cc588" loc="21:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Maddr" ref="0x404cc410" loc="21:VMCustom.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="callFunction" ref="0x404c6720" loc="14:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x404c65c8" loc="14:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x404c6aa8" loc="15:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="push" ref="0x404c5390" loc="17:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404c5238" loc="17:VMCustom.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="pop" ref="0x404c6e70" loc="16:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="queueEvt" ref="0x404c5c90" loc="18:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="evtId" ref="0x404c5768" loc="18:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="auxId" ref="0x404c5960" loc="18:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x404c5b28" loc="18:VMCustom.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getMVal" ref="0x404cd3f8" loc="19:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x400f4500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Maddr" ref="0x404cd0c0" loc="19:VMCustom.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
          <variable name="tp" ref="0x404cd298" loc="19:VMCustom.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getHaltedFlag" ref="0x404cc990" loc="22:VMCustom.nc">
        <interfacedef-ref qname="VMCustom"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BSTimer" loc="13:BSTimer.nc">
      <documentation loc="1:BSTimer.nc">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x404d6390" loc="18:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404d6718" loc="19:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404d6010" loc="17:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404cf828" loc="15:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404cf6d0" loc="15:BSTimer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x404cfc10" loc="16:BSTimer.nc">
        <interfacedef-ref qname="BSTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BSUpload" loc="18:BSUpload.nc">
      <function event="" provided="0" name="getEnv" ref="0x404c05f8" loc="26:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:24" alignment="I:1"><nx_struct-ref name="newProgVersion" ref="0x404b6a88"/>
                <typename><typedef-ref name="newProgVersion_t" ref="0x404be1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404c04a0" loc="26:BSUpload.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:24" alignment="I:1"><nx_struct-ref name="newProgVersion" ref="0x404b6a88"/>
                <typename><typedef-ref name="newProgVersion_t" ref="0x404be1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setEnv" ref="0x404c0058" loc="23:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:24" alignment="I:1"><nx_struct-ref name="newProgVersion" ref="0x404b6a88"/>
                <typename><typedef-ref name="newProgVersion_t" ref="0x404be1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404c1ee8" loc="23:BSUpload.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:24" alignment="I:1"><nx_struct-ref name="newProgVersion" ref="0x404b6a88"/>
                <typename><typedef-ref name="newProgVersion_t" ref="0x404be1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="loadSection" ref="0x404bf880" loc="35:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Addr" ref="0x404bf318" loc="35:BSUpload.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
          <variable name="Size" ref="0x404bf508" loc="35:BSUpload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="Data" ref="0x404bf718" loc="35:BSUpload.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getSection" ref="0x404bfe40" loc="38:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Addr" ref="0x404bfcc8" loc="38:BSUpload.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetMemory" ref="0x404c0ef8" loc="32:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x404c0b28" loc="29:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="resetFlag" ref="0x404c09d0" loc="29:BSUpload.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x404c1aa0" loc="20:BSUpload.nc">
        <interfacedef-ref qname="BSUpload"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Boot.nc">
      <documentation loc="42:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404b3250" loc="60:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Boot.nc">
        <documentation loc="51:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
      <documentation loc="33:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404b4508" loc="43:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404b4508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x404c96f0" loc="73:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="67:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404b4508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x404d05c0" loc="90:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="83:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404b4508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x404d0468" loc="90:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404b4508"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x400f1840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x400f1840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x404d0eb8" loc="101:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="92:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404b4508"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x404d0d60" loc="101:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x404c92c0" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="60:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x404c9d98" loc="81:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="75:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404b4508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x404b49a8" loc="50:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="45:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x404b4df0" loc="58:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
        <documentation loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BSRadio" loc="8:BSRadio.nc">
      <function command="" provided="0" name="send" ref="0x40660a40" loc="9:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="am_id" ref="0x406600c0" loc="9:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="target" ref="0x406602d0" loc="9:BSRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
          <variable name="dataMsg" ref="0x406604b0" loc="9:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dataSize" ref="0x406606c8" loc="9:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="reqAck" ref="0x406608c8" loc="9:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x4065de98" loc="12:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="am_id" ref="0x4065d750" loc="12:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4065d968" loc="12:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4065db48" loc="12:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4065dd28" loc="12:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDoneAck" ref="0x4065d388" loc="11:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="am_id" ref="0x4065f9a0" loc="11:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4065fbb8" loc="11:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataMsg" ref="0x4065fd98" loc="11:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4065d010" loc="11:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </variable>
          <variable name="wasAcked" ref="0x4065d210" loc="11:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4065c470" loc="13:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4065c318" loc="13:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4065f5b0" loc="10:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="am_id" ref="0x40660e18" loc="10:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4065f068" loc="10:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataMsg" ref="0x4065f248" loc="10:BSRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4065f440" loc="10:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x4065c9d0" loc="14:BSRadio.nc">
        <interfacedef-ref qname="BSRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="powerIdx" ref="0x4065c878" loc="14:BSRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x406681a8" loc="62:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Init.nc">
        <documentation loc="53:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x406724e8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40672390" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x40666a78" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40673168" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40673010" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40673830" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x406736d8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40673d88" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x406779a0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40677d88" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40677210" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x406765a0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406775d0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x406761a8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4067aaa0" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4067ae30" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x406b5138" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406aac20" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x406b5628" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000" loc="59:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <short>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.</short>
        <long>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x406abaa0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Initialize CC1K pins&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x406a8820" loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read a value from a CC1000 register.</short>
          <long>&#10; Read a value from a CC1000 register.&#10; @param addr Which CC1000 register&#10; @return Value of register&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406a86c8" loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x406a8218" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Write a value to a CC1000 register.</short>
          <long>&#10; Write a value to a CC1000 register.&#10; @param addr Which CC1000 register&#10; @param data Value to write&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406abe98" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x406a80b8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOCK" ref="0x406a8ca8" loc="83:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read the state of the CHP_OUT pin&#10; </short>
          <long>&#10; Read the state of the CHP_OUT pin&#10; @return State of CHP_OUT as a boolean (TRUE for high)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000Spi" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <short>&#10; Interface to the CC1000 chip's serial bus.</short>
        <long>&#10; Interface to the CC1000 chip's serial bus. This isn't really an SPI,&#10; but the mica2 interface was done using the Atmega128 SPI hardware. Hence&#10; the name.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <function command="" provided="0" name="isBufBusy" ref="0x406c20c8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Is write buffer busy with the last transmission?&#10; </short>
          <long>&#10; Is write buffer busy with the last transmission?&#10; @return TRUE if the buffer is busy, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initSlave" ref="0x406c1338" loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Initialise the interface to the CC1000 bus.</short>
          <long>&#10; Initialise the interface to the CC1000 bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x406c2ee8" loc="80:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Disable CC1000 bus interrupts.</short>
          <long>&#10; Disable CC1000 bus interrupts.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x406c6c18" loc="56:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Write a byte to the CC1000 bus.</short>
          <long>&#10; Write a byte to the CC1000 bus.&#10; @param data Byte to write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406c6ac0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x406c2a00" loc="75:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus.</short>
          <long>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus. After this is called, dataReady events will be signaled every&#10; 8 CC1000 data clocks.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x406c1758" loc="90:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readByte" ref="0x406c2590" loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Get the last byte received from the CC1000 bus.</short>
          <long>&#10; Get the last byte received from the CC1000 bus.&#10; @return Last byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x406c1b98" loc="95:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406c0188" loc="103:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks.</short>
          <long>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks. &#10; @param data In &#34;receive&#34; mode, the last value received from the CC1000 &#10;   bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406c0030" loc="103:/opt/tinyos-2.1.2/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
      <documentation loc="42:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404083f0" loc="57:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
        <documentation loc="54:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40408cf8" loc="72:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
        <documentation loc="67:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40408830" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
        <documentation loc="59:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuSleep.nc">
      <documentation loc="63:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4047d138" loc="76:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuSleep.nc">
        <documentation loc="75:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40494548" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40446470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4048f648" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/branco/gitspace/Terra/TerraVM/src/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
      <documentation loc="36:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407f15b0" loc="53:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407f15b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x407fef00" loc="136:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="132:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407eab48" loc="83:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="80:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x407e9cc0" loc="114:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="100:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407e9978" loc="114:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x407e9b60" loc="114:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x407e94d0" loc="98:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="94:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x407fc888" loc="151:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="146:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x407fc358" loc="144:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="138:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x407e9010" loc="92:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="86:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x407f1c08" loc="64:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="56:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407f1ab0" loc="64:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x407fe8e0" loc="129:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="116:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407fe598" loc="129:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x407fe780" loc="129:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x407ea2b0" loc="73:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="66:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407ea158" loc="73:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407ea780" loc="78:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
        <documentation loc="75:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x407cf9e8" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4064f370"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407cf890" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x407be168" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407be010" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x407bf010" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x407bf6a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407bf550" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x407bdbd8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407bd870" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x407bda78" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x407bed50" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407be9e8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x407bebf0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x407d1310" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407d11b8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x407d1e48" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407d1b18" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x407d1ce8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4064f118"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x407d07c0" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407d0668" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x407cd688" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4064f370"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407cd328" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x407cd528" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4064f370"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x407cdf00" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4064f370"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMAux" loc="1:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
      <function command="" provided="0" name="setPower" ref="0x407d6ca8" loc="2:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
        <interfacedef-ref qname="AMAux"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407d6950" loc="2:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x407d6b48" loc="2:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x407e12b8" loc="3:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
        <interfacedef-ref qname="AMAux"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407e1160" loc="3:/home/branco/gitspace/Terra/TerraVM/src/interfaces/AMAux.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x407d5178" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x407c0b88" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x407c0da0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407d5010" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x407e7dd0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407e7a70" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407e7c50" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x407e7510" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407d5e18" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407d5cc0" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407d3bf8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407d38a0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x407d3a98" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x407cbed0" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x407cbd78" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x407cac78" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x407cab20" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407cb690" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407ca440" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407c1d70" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407c1c18" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x407dc758" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407dc600" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x407db828" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407db4c8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407db6a8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x407ddd80" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x407dd3e8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407dd0a8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407dd288" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
      <documentation loc="34:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40805b60" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
        <documentation loc="48:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x408056b8" loc="46:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
        <documentation loc="42:/home/branco/gitspace/Terra/TerraVM/src/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x407c9df0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
              <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407c98a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x407c9a88" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407c9c68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="dataQueue" loc="7:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
      <documentation loc="3:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <short>&#10; dataQueue interface&#10;</short>
      </documentation>
      <function event="" provided="0" name="dataReady" ref="0x407efb60" loc="15:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x407ed010" loc="16:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x407ed728" loc="17:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407ed400" loc="17:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="Data" ref="0x407ed5c8" loc="17:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407f0290" loc="9:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Data" ref="0x407f0138" loc="9:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x407f0b88" loc="11:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Data" ref="0x407f0a30" loc="11:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x407f0668" loc="10:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x407ef3f0" loc="13:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x407e6d30" loc="8:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Data" ref="0x407e6bd8" loc="8:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x407ef7b0" loc="14:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x407ef010" loc="12:/home/branco/gitspace/Terra/TerraVM/src/system/dataQueue.nc">
        <interfacedef-ref qname="dataQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x407da420" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407da2c8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x407daf18" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407dadc0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x407d79b8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407d7860" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="vmBitVector" loc="33:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
      <documentation loc="28:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <short>&#10; WDVM project: Adapted to check if all bits are set&#10; </short>
        <long>&#10; WDVM project: Adapted to check if all bits are set&#10; @author A.Branco &#60;branco@inf.puc-rio.br>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x407e1f20" loc="38:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="35:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x407df468" loc="62:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="58:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x407df310" loc="62:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x407dfa28" loc="68:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="64:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x407df8d0" loc="68:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRange" ref="0x407f2358" loc="94:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="89:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; reset bits from 'from' to 'to'&#10; </short>
          <long>&#10; reset bits from 'from' to 'to'&#10; @param from&#10; @param to&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x407f2010" loc="94:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x407f21f8" loc="94:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407e08f0" loc="50:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="45:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x407e0798" loc="50:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countPend" ref="0x407f27f8" loc="100:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="96:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Count not set bits.</short>
          <long>&#10; Count not set bits.&#10; @return counter.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x407de1e8" loc="75:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="70:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x407dfe90" loc="75:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x407de088" loc="75:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x407e0340" loc="43:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="40:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407e0ea0" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="52:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x407e0d48" loc="56:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAllBitSet" ref="0x407deae8" loc="87:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="83:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Check if all bits are set.</short>
          <long>&#10; Check if all bits are set.&#10; @return Check result.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x407de668" loc="81:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
        <documentation loc="77:/home/branco/gitspace/Terra/TerraVM/src/system/vmBitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="vmBitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x408a86d0" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408a86d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x408a8838" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a8838"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x408a5a78" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a8838"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a5920" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x408a3528" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a33d0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x408a8ec0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a8d68" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408a2010" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a8838"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a3c78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x408a3e88" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a8838"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x408b3090" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b4cc0" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x408b4ef8" loc="65:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x408b3b50" loc="71:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b39f8" loc="71:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x408b47e8" loc="57:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x408b4168" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x408b4010" loc="52:/home/branco/gitspace/Terra/TerraVM/src/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x408beb28" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408be9d0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x408be220" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408be0c8" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408bcd00" loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bcba8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408bc418" loc="65:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bc2c0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x408c6ce8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c6b90" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408ce408" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ce0c8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408ce2a8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408cc010" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cbbd0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408cbdb0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408cb670" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408cd088" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ceef0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408cdd20" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cd9c8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408cdbc0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaControl" loc="40:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
        <short>&#10; Interface for activating/deactivating congestion control.</short>
        <long>&#10; Interface for activating/deactivating congestion control.&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   August 31 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableCca" ref="0x408f0b00" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Disable congestion control.</short>
          <long>&#10; Disable congestion control.&#10; @return SUCCESS if congestion control disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x408f0650" loc="45:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Enable congestion control.</short>
          <long>&#10; Enable congestion control.&#10; @return SUCCESS if congestion control enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="40:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x40906360" loc="56:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @param 'message_t* ONE m'&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40906208" loc="56:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x408ef9a0" loc="48:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @param 'message_t* ONE m'&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x408ef848" loc="48:/opt/tinyos-2.1.2/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409276e8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409276e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40927850" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40927850"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40927e68" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40927850"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40927d10" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40927850"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40923348" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40923348"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40923818" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40922010" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40923348"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40923cb8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40923e88" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40923348"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Squelch" loc="45:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
        <short>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; </short>
        <long>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x40918c78" loc="57:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Return current estimated noise floor&#10; </short>
          <long>&#10; Return current estimated noise floor&#10; @return Noise floor value&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="settled" ref="0x409290f8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; </short>
          <long>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; @return TRUE if noise floor estimate considered stable, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="adjust" ref="0x409187f0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Adjust noise floor based on new noise measurement&#10; </short>
          <long>&#10; Adjust noise floor based on new noise measurement&#10; @param data noise measurement&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40918698" loc="51:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Squelch.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Control" loc="45:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <short>&#10; CC1000 internal radio control interface.</short>
        <long>&#10; CC1000 internal radio control interface.&#10; @author Philip Buonadonna&#10; @aythor Jaein Jeong&#10;</long>
      </documentation>
      <function command="" provided="0" name="tunePreset" ref="0x40916418" loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.</short>
          <long>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.  Calling Tune will allso reset the rfpower and LockVal&#10; selections to the table values.&#10; &#10; @param freq The index into the CC1K_Params table that holds the&#10; desired preset frequency parameters.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="freq" ref="0x409162c0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="biasOn" ref="0x4092e250" loc="104:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the bias power on.</short>
          <long>&#10; Turn the bias power on. This function must be followed by a call to&#10; either rxMode() or txMode() to place the radio in a recieve/transmit&#10; state respectively. There is approximately a 200us delay when&#10; restoring bias power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRFPower" ref="0x4092edf0" loc="121:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the present RF power index.</short>
          <long>&#10; Get the present RF power index.&#10;&#10; @return The power index value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tuneManual" ref="0x40916b70" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to a given frequency.</short>
          <long>&#10; Tune the radio to a given frequency. Since the CC1000 uses a digital&#10; frequency synthesizer, it cannot tune to just an arbitrary frequency.&#10; This routine will determine the closest achievable channel, compute&#10; the necessary parameters and tune the radio.&#10; &#10; @param The desired channel frequency, in Hz.&#10; &#10; @return The actual computed channel frequency, in Hz.  A return value&#10; of '0' indicates that no frequency was computed and the radio was not&#10; tuned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DesiredFreq" ref="0x40916a18" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="selectLock" ref="0x4092d410" loc="129:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.</short>
          <long> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.  See&#10; the CC1000 data sheet for the available signals.&#10; &#10; @param LockVal The index of the signal to monitor at the CHP_OUT pin&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="LockVal" ref="0x4092d2b8" loc="129:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40920e50" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Initialise the radio to its default state.</short>
          <long>&#10; Initialise the radio to its default state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLock" ref="0x4092d910" loc="137:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="131:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the binary value from the CHP_OUT pin.</short>
          <long>&#10; Get the binary value from the CHP_OUT pin.  Analog signals cannot be&#10; read using function.&#10;&#10; @return 1 - Pin is high or 0 - Pin is low&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="coreOn" ref="0x40915d50" loc="96:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.</short>
          <long>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.  This will result in approximately a 750&#10; uA power savings.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x40915510" loc="84:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio into transmit mode.</short>
          <long>&#10; Shift the CC1000 Radio into transmit mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOStatus" ref="0x4092ddd0" loc="147:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="139:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.</short>
          <long>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.  This information is used to determine if the data&#10; from the CC1000 needs to be inverted or not.&#10;&#10; @return TRUE if high-side LO injection is being used (i.e. data does NOT need to be inverted&#10; at the receiver.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x40915930" loc="89:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio in receive mode.</short>
          <long>&#10; Shift the CC1000 Radio in receive mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40915138" loc="79:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the CC1000 off&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x4092e8a8" loc="114:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Set the transmit RF power value.</short>
          <long>&#10; Set the transmit RF power value.  The input value is simply an&#10; arbitrary index that is programmed into the CC1000 registers.  Consult&#10; the CC1000 datasheet for the resulting power output/current&#10; consumption values.&#10;&#10; @param power A power index between 1 and 255.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="power" ref="0x4092e750" loc="114:/opt/tinyos-2.1.2/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40921a28" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40921ef0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ByteRadio" loc="19:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <short>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission).</short>
        <long>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). This interface specifies the interaction between these&#10; two components.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="rts" ref="0x4091d168" loc="25:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="21:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive wants to send a packet.</short>
          <long>&#10; SendReceive wants to send a packet.&#10; @param msg Message to be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4091d010" loc="25:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
                <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x4091a010" loc="61:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Enable listening for incoming packets.</short>
          <long>&#10; Enable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncing" ref="0x40919010" loc="85:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Detect if SendReceive is attempting to sync with an incoming packet.</short>
          <long>&#10; Detect if SendReceive is attempting to sync with an incoming packet.&#10; During sync, idleByte events are not signaled. If sync is successful,&#10; an rx() event will be signaled, if it fails, idleByte events will&#10; resume. If syncing() returns TRUE, the last idleByte() event must&#10; have had preamble = TRUE.&#10;&#10; @return TRUE if a sync attempt is in progress, FALSE if not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40919940" loc="95:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Message reception is complete.</short>
          <long>&#10; Message reception is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreambleLength" ref="0x4091bb08" loc="56:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Get message preamble length.</short>
          <long>&#10; Get message preamble length.&#10; @return Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleByte" ref="0x4091a9d8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.</short>
          <long>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.&#10; @param preamble TRUE if a message preamble byte has been received&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="preamble" ref="0x4091a880" loc="74:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cts" ref="0x4091d578" loc="32:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Access to the media granted.</short>
          <long>&#10; Access to the media granted. Start sending. SendReceive must signal&#10; sendDone when transmission is complete. Note: the media-access-contro&#10; layer must have enabled listening before calling cts().&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPreambleLength" ref="0x4091b618" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Set message preamble length.</short>
          <long>&#10; Set message preamble length.&#10; @param bytes Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bytes" ref="0x4091b4c0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4091b010" loc="44:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Transmission complete.</short>
          <long>&#10; Transmission complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x4091a410" loc="66:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Disable listening for incoming packets.</short>
          <long>&#10; Disable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxMessage" ref="0x4091dae0" loc="39:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.</short>
          <long>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.&#10; @return Message being transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40662e00"/>
              <typename><typedef-ref name="message_t" ref="0x40661c08"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rx" ref="0x40919560" loc="90:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; A message is being received&#10;</short>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4098ba80" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4098ba80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40987010" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40a1e6e8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40a21db8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40a217b8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40a1e278" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40a1ede0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40a7d730" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40a7d270" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40a7f780" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40a7f780"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40a7fc30" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40a793f8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40a7f780"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40a790c8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40a79298" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40a7f780"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40a8e5c8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40a73d90" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40a8e010" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40a8e238" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40a8e458" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a8c930" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a8eee8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40a8c0f0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x40a8c2f8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40a8c550" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x40a8c7b8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40a917f0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40a91010" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40a91238" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40a91460" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40a91680" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a908e8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a90360" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a90010" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40a90200" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40aa15a8" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x40a89c90" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x404518f0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x40451b78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x40aa0a58" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40aa0900" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40aa1a68" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40a83740" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x40a852c0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x404518f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40451b78"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40a85168" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x404518f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40451b78"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40a82010" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40aa03b0" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40aa0f00" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40a83b40" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40a82898" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40a82468" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40a82cd0" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40aa1ed8" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40a85dd8" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40457bc0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40456010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40a85c80" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40457bc0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40456010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40aa11a8" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40a857a8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40457bc0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40456010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40a832e0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a9e680" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a9e528" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40a8ae10" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a87328" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40adf558" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40adfb30" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40adc1f0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40adcbd8" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40ae1ca0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40adc700" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40adb1c8" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40ada4e8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40ada9e8" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40af58c0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40ad8200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40af5768" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40ad8200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40ad4550" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40ad4c10" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40ad8200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40ad4ab8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40ad8200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40af51d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40ad8200"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40b03ee0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40b02360" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40b027e0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40b01070" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40b01d60" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40aff230" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40b02c08" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40aff970" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40aff818" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40b03ab8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40b014f0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40b01918" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40b1aaf8" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40b6a328" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b6a328"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40b6a978" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b6a328"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40b6a820" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b6a328"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b8b3c8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b8b3c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40b8b530" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b8b530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40b8ba18" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b8b530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40b89510" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40b89010" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40b89910" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b91478" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b91478"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40b915e0" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b915e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40b8f8c8" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b915e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40b90598" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40b8f280" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b915e0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b915e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40b90f10" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b915e0"/></type-var>
          </variable>
          <variable name="dt" ref="0x40b8f120" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b915e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40b90a08" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40b8fd58" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b915e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b91c10" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b915e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40b91ab8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b915e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b90138" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x40b96bb8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4045e010"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4045e238"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40bb61a8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40468040"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40468268"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40bb76e0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40463900"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40463b28"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40bb7ce8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40463900"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40463b28"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40bb7b90" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40463900"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40463b28"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40bb67b0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40468040"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40468268"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40bb6658" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40468040"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40468268"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40bb7228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4045e010"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4045e238"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40bb70d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4045e010"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4045e238"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x40baece8" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x40bad1c8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x40bae8d0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40bad688" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40bb1dd0" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404641a8"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x404643d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40bae3f0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404641a8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x404643d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40bae298" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404641a8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x404643d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40b955b0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b955b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40bb24f0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40bb3498" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b95aa8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b955b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40bb38a0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40bb2950" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40bb3058" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b955b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b95ed8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b955b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40bb3ca8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40bb20c8" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b9ebd8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b9ebd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40b98438" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40b99b08" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b9b0f8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b9ebd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40b989c8" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40b98870" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40b98e58" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b9bec0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40b9baa0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40b98010" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b9b670" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b9ebd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b9b518" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b9ebd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b992e8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b996e0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40c6b8e0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40c69168" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40c6bd50" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4064f370"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40c6b3f0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4064f370"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40c6b088" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4064f370"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40c6b290" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4064f5d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40c98b00" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40477b10"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40477d38"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x40c9a528" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40469e80"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x404700c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c9a3d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40469e80"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x404700c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40c98038" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404785e8"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40478810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x40c9ee80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40465e20"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x4046c068"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40c98648" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404785e8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40478810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40c984f0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404785e8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40478810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40c97168" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40477b10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40477d38"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40c97010" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40477b10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40477d38"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x40c9b888" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4046f4c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4046f6e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x40c9b3b8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40469e80"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x404700c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x40c9bed0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40465e20"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x4046c068"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c9bd78" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40465e20"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x4046c068"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x40c9ab48" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4046f4c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4046f6e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40c9a9f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4046f4c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4046f6e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40c9d2f0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c9d2f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40c93e18" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40c93cc0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40c93430" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40c9d7e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c9d2f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40c95350" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c9d2f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40c951f8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c9d2f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40c95790" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40c93890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c9dd60" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c9d2f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40c9dc08" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c9d2f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40c95b98" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40c93010" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensAct" loc="13:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
      <documentation loc="1:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <short>*********************************************&#10; TerraVM - Terra virtual machine project&#10; March, 2014&#10; Author: A.Branco&#10; abranco at inf.puc-rio.br&#10; *********************************************</short>
      </documentation>
      <function command="" provided="0" name="reqSensor" ref="0x40daac98" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqSource" ref="0x40daa960" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="id" ref="0x40daab38" loc="16:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readSensor" ref="0x40da79f8" loc="22:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40da78a0" loc="22:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setActuator" ref="0x40da5170" loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40da7dd8" loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40da5010" loc="25:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="Ready" ref="0x40da7470" loc="19:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqSource" ref="0x40da70e8" loc="19:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="codeEvt_id" ref="0x40da7310" loc="19:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reqStreamSensor" ref="0x40da46d0" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqSource" ref="0x40da5af0" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="id" ref="0x40da5cc8" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40da5ed8" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x40da4138" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400f41e8"/></typename>
            </type-int>
          </variable>
          <variable name="usPeriod" ref="0x40da4360" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x400f4848"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x40da4550" loc="30:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDatap" ref="0x40da56a0" loc="27:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
        <interfacedef-ref qname="SensAct"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40da5528" loc="27:/home/branco/gitspace/Terra/TerraVM/src/platforms/TinyOS/common/SensAct.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40e00a50" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40dff9c8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40e00658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x40dff500" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x40dff3a8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40e00250" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40e00ea0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404006e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40eae628" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40eae1c8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40eb1da0" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40eb1838" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4040b748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x40eabaa8" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400f3b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40ec41c8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>

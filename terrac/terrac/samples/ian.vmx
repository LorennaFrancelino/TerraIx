332 1198 7 6 0 0 48 7 48
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0 track 2
00 | 00009 0
00 | 00010 0
00 | 00011 0
00 | 00012 0 track 3
00 | 00013 0
00 | 00014 0
00 | 00015 0
00 | 00016 0 track 4
00 | 00017 0
00 | 00018 0
00 | 00019 0
00 | 00020 0 track 5
00 | 00021 0
00 | 00022 0
00 | 00023 0
00 | 00024 0 track 6
00 | 00025 0
00 | 00026 0
00 | 00027 0
00 | 00028 0 track 7
00 | 00029 0
00 | 00030 0
00 | 00031 0
00 | 00032 0000 wClock 0
00 | 00033 0001
00 | 00034 0002
00 | 00035 0003
00 | 00036 0004
00 | 00037 0005
00 | 00038 0006
00 | 00039 0007
00 | 00040 0008 wClock 1
00 | 00041 0009
00 | 00042 0010
00 | 00043 0011
00 | 00044 0012
00 | 00045 0013
00 | 00046 0014
00 | 00047 0015
00 | 00048 0016 wClock 2
00 | 00049 0017
00 | 00050 0018
00 | 00051 0019
00 | 00052 0020
00 | 00053 0021
00 | 00054 0022
00 | 00055 0023
00 | 00056 0024 wClock 3
00 | 00057 0025
00 | 00058 0026
00 | 00059 0027
00 | 00060 0028
00 | 00061 0029
00 | 00062 0030
00 | 00063 0031
00 | 00064 0032 wClock 4
00 | 00065 0033
00 | 00066 0034
00 | 00067 0035
00 | 00068 0036
00 | 00069 0037
00 | 00070 0038
00 | 00071 0039
00 | 00072 0040 wClock 5
00 | 00073 0041
00 | 00074 0042
00 | 00075 0043
00 | 00076 0044
00 | 00077 0045
00 | 00078 0046
00 | 00079 0047
00 | 00080 0048 inEvt 005 : TEMP
00 | 00081 0049           : 01 gates
00 | 00082 0050
00 | 00083 0051
00 | 00084 0052 inEvt 013 : CUSTOM_A
00 | 00085 0053           : 01 gates
00 | 00086 0054
00 | 00087 0055
00 | 00088 0056 inEvt 040 : SEND_DONE()
00 | 00089 0057           : 03 gates
00 | 00090 0058
00 | 00091 0059
00 | 00092 0060
00 | 00093 0061
00 | 00094 0062
00 | 00095 0063
00 | 00096 0064
00 | 00097 0065
00 | 00098 0066
00 | 00099 0067 inEvt 041 : SEND_DONE
00 | 00100 0068           : 01 gates
00 | 00101 0069
00 | 00102 0070
00 | 00103 0071 inEvt 042 : SEND_DONE_ACK()
00 | 00104 0072           : 01 gates
00 | 00105 0073
00 | 00106 0074
00 | 00107 0075
00 | 00108 0076 inEvt 044 : RECEIVE()
00 | 00109 0077           : 04 gates
00 | 00110 0078
00 | 00111 0079
00 | 00112 0080
00 | 00113 0081
00 | 00114 0082
00 | 00115 0083
00 | 00116 0084
00 | 00117 0085
00 | 00118 0086
00 | 00119 0087
00 | 00120 0088
00 | 00121 0089
00 | 00122 0090 inEvt 046 : Q_READY
00 | 00123 0091           : 01 gates
00 | 00124 0092
00 | 00125 0093
00 | 00126 0094 $ret:1, 
00 | 00127 0095 nodeid:2, 
00 | 00128 0096 
00 | 00129 0097 tempMsg:25, 
00 | 00130 0098 
00 | 00131 0099 
00 | 00132 0100 
00 | 00133 0101 
00 | 00134 0102 
00 | 00135 0103 
00 | 00136 0104 
00 | 00137 0105 
00 | 00138 0106 
00 | 00139 0107 
00 | 00140 0108 
00 | 00141 0109 
00 | 00142 0110 
00 | 00143 0111 
00 | 00144 0112 
00 | 00145 0113 
00 | 00146 0114 
00 | 00147 0115 
00 | 00148 0116 
00 | 00149 0117 
00 | 00150 0118 
00 | 00151 0119 
00 | 00152 0120 
00 | 00153 0121 
00 | 00154 0122 stat:1, 
00 | 00155 0123 father:2, 
00 | 00156 0124 
00 | 00157 0125 jump:1, 
00 | 00158 0126 send_seq:2, 
00 | 00159 0127 
00 | 00160 0128 childID:20, 
00 | 00161 0129 
00 | 00162 0130 
00 | 00163 0131 
00 | 00164 0132 
00 | 00165 0133 
00 | 00166 0134 
00 | 00167 0135 
00 | 00168 0136 
00 | 00169 0137 
00 | 00170 0138 
00 | 00171 0139 
00 | 00172 0140 
00 | 00173 0141 
00 | 00174 0142 
00 | 00175 0143 
00 | 00176 0144 
00 | 00177 0145 
00 | 00178 0146 
00 | 00179 0147 
00 | 00180 0148 seq:20, 
00 | 00181 0149 
00 | 00182 0150 
00 | 00183 0151 
00 | 00184 0152 
00 | 00185 0153 
00 | 00186 0154 
00 | 00187 0155 
00 | 00188 0156 
00 | 00189 0157 
00 | 00190 0158 
00 | 00191 0159 
00 | 00192 0160 
00 | 00193 0161 
00 | 00194 0162 
00 | 00195 0163 
00 | 00196 0164 
00 | 00197 0165 
00 | 00198 0166 
00 | 00199 0167 
00 | 00200 0168 rqMsg:25, reqMsg:25, 
00 | 00201 0169 
00 | 00202 0170 
00 | 00203 0171 
00 | 00204 0172 
00 | 00205 0173 
00 | 00206 0174 
00 | 00207 0175 
00 | 00208 0176 
00 | 00209 0177 
00 | 00210 0178 
00 | 00211 0179 
00 | 00212 0180 
00 | 00213 0181 
00 | 00214 0182 
00 | 00215 0183 
00 | 00216 0184 
00 | 00217 0185 
00 | 00218 0186 
00 | 00219 0187 
00 | 00220 0188 
00 | 00221 0189 
00 | 00222 0190 
00 | 00223 0191 
00 | 00224 0192 
00 | 00225 0193 topMsg:25, topoMsg:25, 
00 | 00226 0194 
00 | 00227 0195 
00 | 00228 0196 
00 | 00229 0197 
00 | 00230 0198 
00 | 00231 0199 
00 | 00232 0200 
00 | 00233 0201 
00 | 00234 0202 
00 | 00235 0203 
00 | 00236 0204 
00 | 00237 0205 
00 | 00238 0206 
00 | 00239 0207 
00 | 00240 0208 
00 | 00241 0209 
00 | 00242 0210 
00 | 00243 0211 
00 | 00244 0212 
00 | 00245 0213 
00 | 00246 0214 
00 | 00247 0215 
00 | 00248 0216 
00 | 00249 0217 
00 | 00250 0218 topMsg:25, 
00 | 00251 0219 
00 | 00252 0220 
00 | 00253 0221 
00 | 00254 0222 
00 | 00255 0223 
00 | 00256 0224 
00 | 00257 0225 
00 | 00258 0226 
00 | 00259 0227 
00 | 00260 0228 
00 | 00261 0229 
00 | 00262 0230 
00 | 00263 0231 
00 | 00264 0232 
00 | 00265 0233 
00 | 00266 0234 
00 | 00267 0235 
00 | 00268 0236 
00 | 00269 0237 
00 | 00270 0238 
00 | 00271 0239 
00 | 00272 0240 
00 | 00273 0241 
00 | 00274 0242 
00 | 00275 0243 msgRadio:25, 
00 | 00276 0244 
00 | 00277 0245 
00 | 00278 0246 
00 | 00279 0247 
00 | 00280 0248 
00 | 00281 0249 
00 | 00282 0250 
00 | 00283 0251 
00 | 00284 0252 
00 | 00285 0253 
00 | 00286 0254 
00 | 00287 0255 
00 | 00288 0256 
00 | 00289 0257 
00 | 00290 0258 
00 | 00291 0259 
00 | 00292 0260 
00 | 00293 0261 
00 | 00294 0262 
00 | 00295 0263 
00 | 00296 0264 
00 | 00297 0265 
00 | 00298 0266 
00 | 00299 0267 
00 | 00300 0268 ack:1, 
00 | 00301 0269 ParAnd_flag[2], 
00 | 00302 0270 
00 | 00303 0271 temp:2, 
00 | 00304 0272 
00 | 00305 0273 rMsg:25, 
00 | 00306 0274 
00 | 00307 0275 
00 | 00308 0276 
00 | 00309 0277 
00 | 00310 0278 
00 | 00311 0279 
00 | 00312 0280 
00 | 00313 0281 
00 | 00314 0282 
00 | 00315 0283 
00 | 00316 0284 
00 | 00317 0285 
00 | 00318 0286 
00 | 00319 0287 
00 | 00320 0288 
00 | 00321 0289 
00 | 00322 0290 
00 | 00323 0291 
00 | 00324 0292 
00 | 00325 0293 
00 | 00326 0294 
00 | 00327 0295 
00 | 00328 0296 
00 | 00329 0297 
00 | 00330 0298 i:1, 
00 | 00331 0299 __i_0x88f1668:1, 
d1 | 00332 d1 set_c ushort 48 1281          | config gate TEMP with 1 await(s) - 0x0501 = 1281
30 | 00333 30 
05 | 00334 05 
01 | 00335 01 
d1 | 00336 d1 set_c ushort 52 3329          | config gate CUSTOM_A with 1 await(s) - 0x0d01 = 3329
34 | 00337 34 
0d | 00338 0d 
01 | 00339 01 
d1 | 00340 d1 set_c ushort 56 10371         | config gate SEND_DONE() with 3 await(s) - 0x2883 = 10371
38 | 00341 38 
28 | 00342 28 
83 | 00343 83 
d1 | 00344 d1 set_c ushort 67 10497         | config gate SEND_DONE with 1 await(s) - 0x2901 = 10497
43 | 00345 43 
29 | 00346 29 
01 | 00347 01 
d1 | 00348 d1 set_c ushort 71 10881         | config gate SEND_DONE_ACK() with 1 await(s) - 0x2a81 = 10881
47 | 00349 47 
2a | 00350 2a 
81 | 00351 81 
d1 | 00352 d1 set_c ushort 76 11396         | config gate RECEIVE() with 4 await(s) - 0x2c84 = 11396
4c | 00353 4c 
2c | 00354 2c 
84 | 00355 84 
d1 | 00356 d1 set_c ushort 90 11777         | config gate Q_READY with 1 await(s) - 0x2e01 = 11777
5a | 00357 5a 
2e | 00358 2e 
01 | 00359 01 
24 | 00360 24 func 0                        | func getNodeId
00 | 00361 00 
a1 | 00362 a1 pop ushort 95                 | pop nodeid
5f | 00363 5f 
c1 | 00364 c1 set_c ushort 126 0            | send_seq = 0
7e | 00365 7e 
00 | 00366 00 
40 | 00367 40 push_c 11                     | push 11
0b | 00368 0b 
91 | 00369 91 push_v ushort 95              | push nodeid:ushort
5f | 00370 5f 
0f | 00371 0f eq                            | eq
4f | 00372 4f ifelse 8 9                    | ifelse True_8 EndIf_9
01 | 00373 .00 addr:377
79 | 00374 .08 
01 | 00375 .00 addr:386
82 | 00376 .09 
c1 | 00377 c1 set_c ushort 123 1            | father = 1
7b | 00378 7b 
01 | 00379 01 
c0 | 00380 c0 set_c ubyte 125 1             | jump = 1
7d | 00381 7d 
01 | 00382 01 
39 | 00383 39 exec 9                        | goto  9
01 | 00384 .00 addr:386
82 | 00385 .09 
58 | 00386 58 outevt_c 7 1                  | emit LED1 len=1 const=1
07 | 00387 07 
01 | 00388 01 
40 | 00389 40 push_c 11                     | push 11
0b | 00390 0b 
91 | 00391 91 push_v ushort 95              | push nodeid:ushort
5f | 00392 5f 
10 | 00393 10 neq                           | neq
4f | 00394 4f ifelse 44 45                  | ifelse True_44 EndIf_45
01 | 00395 .00 addr:399
8f | 00396 .2c 
02 | 00397 .00 addr:542
1e | 00398 .2d 
89 | 00399 89 tkins_max 0 19                | insert track ParOr_sub_1_19
01 | 00400 .00 addr:406
96 | 00401 .13 
89 | 00402 89 tkins_max 0 20                | insert track ParOr_sub_2_20
01 | 00403 .00 addr:506
fa | 00404 .14 
01 | 00405 01 end                           | end
c1 | 00406 c1 set_c ushort 123 0            | father = 0
7b | 00407 7b 
00 | 00408 00 
2a | 00409 2a set_v ushort 169 ushort 95    | rqMsg.source = nodeid
11 | 00410 11 
a9 | 00411 a9 
5f | 00412 5f 
d1 | 00413 d1 set_c ushort 171 0xffff       | rqMsg.target = 0xffff
ab | 00414 ab 
ff | 00415 ff 
ff | 00416 ff 
c0 | 00417 c0 set_c ubyte 168 3             | rqMsg.type = 3
a8 | 00418 a8 
03 | 00419 03 
2a | 00420 2a set_v ushort 177 ushort 95    | rqMsg.d16[0] = nodeid
11 | 00421 11 
b1 | 00422 b1 
5f | 00423 5f 
b1 | 00424 b1 outevt_v 40 168               | emit SEND len=25 var=rqMsg
28 | 00425 28 
a8 | 00426 a8 
40 | 00427 40 push_c 3                      | push 3
03 | 00428 03 
a0 | 00429 a0 pop ubyte 58                  | evt SEND_DONE() auxId = pop
3a | 00430 3a 
d1 | 00431 d1 set_c ushort 59 27            | await SEND_DONE()[0]
3b | 00432 3b 
01 | 00433 .00 addr:436
b4 | 00434 .1b 
01 | 00435 01 end                           | end
40 | 00436 40 push_c 2                      | push 2
02 | 00437 02 
a0 | 00438 a0 pop ubyte 78                  | evt RECEIVE() auxId = pop
4e | 00439 4e 
d1 | 00440 d1 set_c ushort 79 29            | await RECEIVE()[0]
4f | 00441 4f 
01 | 00442 .00 addr:445
bd | 00443 .1d 
01 | 00444 01 end                           | end
5c | 00445 5c getextdt_v 193 25             | getExtData topMsg 25
c1 | 00446 c1 
19 | 00447 19 
2a | 00448 2a set_v ushort 123 ushort 194   | father = topMsg.source
11 | 00449 11 
7b | 00450 7b 
c2 | 00451 c2 
2a | 00452 2a set_v ubyte 125 ubyte 198     | jump = topMsg.d8[0]
00 | 00453 00 
7d | 00454 7d 
c6 | 00455 c6 
2a | 00456 2a set_v ushort 194 ushort 95    | topMsg.source = nodeid
11 | 00457 11 
c2 | 00458 c2 
5f | 00459 5f 
d1 | 00460 d1 set_c ushort 196 0xffff       | topMsg.target = 0xffff
c4 | 00461 c4 
ff | 00462 ff 
ff | 00463 ff 
40 | 00464 40 push_c 1                      | push 1
01 | 00465 01 
90 | 00466 90 push_v ubyte 125              | push jump:ubyte
7d | 00467 7d 
06 | 00468 06 add                           | add
a0 | 00469 a0 pop ubyte 198                 | pop topMsg.d8[0]
c6 | 00470 c6 
b1 | 00471 b1 outevt_v 40 193               | emit SEND len=25 var=topMsg
28 | 00472 28 
c1 | 00473 c1 
40 | 00474 40 push_c 2                      | push 2
02 | 00475 02 
a0 | 00476 a0 pop ubyte 61                  | evt SEND_DONE() auxId = pop
3d | 00477 3d 
d1 | 00478 d1 set_c ushort 62 37            | await SEND_DONE()[1]
3e | 00479 3e 
01 | 00480 .00 addr:483
e3 | 00481 .25 
01 | 00482 01 end                           | end
58 | 00483 58 outevt_c 8 2                  | emit LED2 len=1 const=2
08 | 00484 08 
02 | 00485 02 
29 | 00486 29 clken_c 0 5000 40             | clock enable Awake_5000_40 5000msec
03 | 00487 03 
00 | 00488 00 
13 | 00489 13 
88 | 00490 88 
01 | 00491 .00 addr:494
ee | 00492 .28 
01 | 00493 01 end                           | end
58 | 00494 58 outevt_c 8 2                  | emit LED2 len=1 const=2
08 | 00495 08 
02 | 00496 02 
3d | 00497 3d tkins_z 1 10 18               | insert track Loop_out_18 tree 10
8a | 00498 8a 
02 | 00499 .00 addr:530
12 | 00500 .12 
01 | 00501 01 end                           | end
89 | 00502 89 tkins_max 0 21                | insert track ParOr_out_21
02 | 00503 .00 addr:518
06 | 00504 .15 
01 | 00505 01 end                           | end
29 | 00506 29 clken_c 1 10000 43            | clock enable Awake_10000_43 10000msec
03 | 00507 03 
01 | 00508 01 
27 | 00509 27 
10 | 00510 10 
02 | 00511 .00 addr:514
02 | 00512 .2b 
01 | 00513 01 end                           | end
89 | 00514 89 tkins_max 0 21                | insert track ParOr_out_21
02 | 00515 .00 addr:518
06 | 00516 .15 
01 | 00517 01 end                           | end
48 | 00518 48 memclr 0 16                   | clear WClocks gates from 0 to 2
00 | 00519 00 
10 | 00520 10 
48 | 00521 48 memclr 58 4                   | clear EXT gates for SEND_DONE()
3a | 00522 3a 
04 | 00523 04 
48 | 00524 48 memclr 78 2                   | clear EXT gates for RECEIVE()
4e | 00525 4e 
02 | 00526 02 
39 | 00527 39 exec 16                       | goto  16
01 | 00528 .00 addr:399
8f | 00529 .10 
48 | 00530 48 memclr 0 16                   | clear WClocks gates from 0 to 2
00 | 00531 00 
10 | 00532 10 
48 | 00533 48 memclr 58 4                   | clear EXT gates for SEND_DONE()
3a | 00534 3a 
04 | 00535 04 
48 | 00536 48 memclr 78 2                   | clear EXT gates for RECEIVE()
4e | 00537 4e 
02 | 00538 02 
39 | 00539 39 exec 45                       | goto  45
02 | 00540 .00 addr:542
1e | 00541 .2d 
58 | 00542 58 outevt_c 6 1                  | emit LED0 len=1 const=1
06 | 00543 06 
01 | 00544 01 
58 | 00545 58 outevt_c 7 0                  | emit LED1 len=1 const=0
07 | 00546 07 
00 | 00547 00 
89 | 00548 89 tkins_max 0 50                | insert track ParOr_sub_1_50
02 | 00549 .00 addr:564
34 | 00550 .32 
89 | 00551 89 tkins_max 0 51                | insert track ParOr_sub_2_51
02 | 00552 .00 addr:670
9e | 00553 .33 
89 | 00554 89 tkins_max 0 52                | insert track ParOr_sub_3_52
02 | 00555 .00 addr:753
f1 | 00556 .34 
89 | 00557 89 tkins_max 0 53                | insert track ParOr_sub_4_53
03 | 00558 .00 addr:865
61 | 00559 .35 
89 | 00560 89 tkins_max 0 54                | insert track ParOr_sub_5_54
03 | 00561 .00 addr:983
d7 | 00562 .36 
01 | 00563 01 end                           | end
89 | 00564 89 tkins_max 0 56                | insert track ParOr_sub_1_56
02 | 00565 .00 addr:571
3b | 00566 .38 
89 | 00567 89 tkins_max 0 57                | insert track ParOr_sub_2_57
02 | 00568 .00 addr:580
44 | 00569 .39 
01 | 00570 01 end                           | end
d1 | 00571 d1 set_c ushort 54 59            | await CUSTOM_A[0]
36 | 00572 36 
02 | 00573 .00 addr:576
40 | 00574 .3b 
01 | 00575 01 end                           | end
89 | 00576 89 tkins_max 0 58                | insert track ParOr_out_58
02 | 00577 .00 addr:648
88 | 00578 .3a 
01 | 00579 01 end                           | end
40 | 00580 40 push_c 3                      | push 3
03 | 00581 03 
a0 | 00582 a0 pop ubyte 81                  | evt RECEIVE() auxId = pop
51 | 00583 51 
d1 | 00584 d1 set_c ushort 82 61            | await RECEIVE()[1]
52 | 00585 52 
02 | 00586 .00 addr:589
4d | 00587 .3d 
01 | 00588 01 end                           | end
5c | 00589 5c getextdt_v 168 25             | getExtData reqMsg 25
a8 | 00590 a8 
19 | 00591 19 
40 | 00592 40 push_c 11                     | push 11
0b | 00593 0b 
91 | 00594 91 push_v ushort 95              | push nodeid:ushort
5f | 00595 5f 
0f | 00596 0f eq                            | eq
4f | 00597 4f ifelse 75 76                  | ifelse True_75 EndIf_76
02 | 00598 .00 addr:602
5a | 00599 .4b 
02 | 00600 .00 addr:644
84 | 00601 .4c 
58 | 00602 58 outevt_c 6 2                  | emit LED0 len=1 const=2
06 | 00603 06 
02 | 00604 02 
2a | 00605 2a set_v ushort 194 ushort 95    | topoMsg.source = nodeid
11 | 00606 11 
c2 | 00607 c2 
5f | 00608 5f 
d1 | 00609 d1 set_c ushort 196 0xffff       | topoMsg.target = 0xffff
c4 | 00610 c4 
ff | 00611 ff 
ff | 00612 ff 
c0 | 00613 c0 set_c ubyte 193 2             | topoMsg.type = 2
c1 | 00614 c1 
02 | 00615 02 
c0 | 00616 c0 set_c ubyte 198 1             | topoMsg.d8[0] = 1
c6 | 00617 c6 
01 | 00618 01 
b1 | 00619 b1 outevt_v 40 193               | emit SEND len=25 var=topoMsg
28 | 00620 28 
c1 | 00621 c1 
d1 | 00622 d1 set_c ushort 69 69            | await SEND_DONE[0]
45 | 00623 45 
02 | 00624 .00 addr:627
73 | 00625 .45 
01 | 00626 01 end                           | end
58 | 00627 58 outevt_c 8 2                  | emit LED2 len=1 const=2
08 | 00628 08 
02 | 00629 02 
29 | 00630 29 clken_c 2 5000 72             | clock enable Awake_5000_72 5000msec
03 | 00631 03 
02 | 00632 02 
13 | 00633 13 
88 | 00634 88 
02 | 00635 .00 addr:638
7e | 00636 .48 
01 | 00637 01 end                           | end
58 | 00638 58 outevt_c 8 2                  | emit LED2 len=1 const=2
08 | 00639 08 
02 | 00640 02 
39 | 00641 39 exec 76                       | goto  76
02 | 00642 .00 addr:644
84 | 00643 .4c 
89 | 00644 89 tkins_max 0 58                | insert track ParOr_out_58
02 | 00645 .00 addr:648
88 | 00646 .3a 
01 | 00647 01 end                           | end
48 | 00648 48 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 00649 10 
08 | 00650 08 
48 | 00651 48 memclr 54 2                   | clear EXT gates for CUSTOM_A
36 | 00652 36 
02 | 00653 02 
48 | 00654 48 memclr 69 2                   | clear EXT gates for SEND_DONE
45 | 00655 45 
02 | 00656 02 
48 | 00657 48 memclr 78 2                   | clear EXT gates for RECEIVE()
4e | 00658 4e 
02 | 00659 02 
58 | 00660 58 outevt_c 6 0                  | emit LED0 len=1 const=0
06 | 00661 06 
00 | 00662 00 
58 | 00663 58 outevt_c 7 1                  | emit LED1 len=1 const=1
07 | 00664 07 
01 | 00665 01 
89 | 00666 89 tkins_max 0 55                | insert track ParOr_out_55
04 | 00667 .00 addr:1142
76 | 00668 .37 
01 | 00669 01 end                           | end
40 | 00670 40 push_c 11                     | push 11
0b | 00671 0b 
91 | 00672 91 push_v ushort 95              | push nodeid:ushort
5f | 00673 5f 
0f | 00674 0f eq                            | eq
4f | 00675 4f ifelse 98 99                  | ifelse True_98 False_99
02 | 00676 .00 addr:680
a8 | 00677 .62 
02 | 00678 .00 addr:684
ac | 00679 .63 
01 | 00680 01 end                           | end
39 | 00681 39 exec 100                      | goto  100
02 | 00682 .00 addr:749
ed | 00683 .64 
40 | 00684 40 push_c 2                      | push 2
02 | 00685 02 
a0 | 00686 a0 pop ubyte 84                  | evt RECEIVE() auxId = pop
54 | 00687 54 
d1 | 00688 d1 set_c ushort 85 86            | await RECEIVE()[2]
55 | 00689 55 
02 | 00690 .00 addr:693
b5 | 00691 .56 
01 | 00692 01 end                           | end
5c | 00693 5c getextdt_v 218 25             | getExtData topMsg 25
da | 00694 da 
19 | 00695 19 
2a | 00696 2a set_v ushort 123 ushort 219   | father = topMsg.source
11 | 00697 11 
7b | 00698 7b 
db | 00699 db 
2a | 00700 2a set_v ushort 219 ushort 95    | topMsg.source = nodeid
11 | 00701 11 
db | 00702 db 
5f | 00703 5f 
d1 | 00704 d1 set_c ushort 221 0xffff       | topMsg.target = 0xffff
dd | 00705 dd 
ff | 00706 ff 
ff | 00707 ff 
b1 | 00708 b1 outevt_v 40 218               | emit SEND len=25 var=topMsg
28 | 00709 28 
da | 00710 da 
40 | 00711 40 push_c 2                      | push 2
02 | 00712 02 
a0 | 00713 a0 pop ubyte 64                  | evt SEND_DONE() auxId = pop
40 | 00714 40 
d1 | 00715 d1 set_c ushort 65 92            | await SEND_DONE()[2]
41 | 00716 41 
02 | 00717 .00 addr:720
d0 | 00718 .5c 
01 | 00719 01 end                           | end
58 | 00720 58 outevt_c 8 2                  | emit LED2 len=1 const=2
08 | 00721 08 
02 | 00722 02 
29 | 00723 29 clken_c 3 5000 95             | clock enable Awake_5000_95 5000msec
03 | 00724 03 
03 | 00725 03 
13 | 00726 13 
88 | 00727 88 
02 | 00728 .00 addr:731
db | 00729 .5f 
01 | 00730 01 end                           | end
58 | 00731 58 outevt_c 8 2                  | emit LED2 len=1 const=2
08 | 00732 08 
02 | 00733 02 
39 | 00734 39 exec 82                       | goto  82
02 | 00735 .00 addr:684
ac | 00736 .52 
48 | 00737 48 memclr 24 8                   | clear WClocks gates from 3 to 4
18 | 00738 18 
08 | 00739 08 
48 | 00740 48 memclr 58 2                   | clear EXT gates for SEND_DONE()
3a | 00741 3a 
02 | 00742 02 
48 | 00743 48 memclr 78 2                   | clear EXT gates for RECEIVE()
4e | 00744 4e 
02 | 00745 02 
39 | 00746 39 exec 100                      | goto  100
02 | 00747 .00 addr:749
ed | 00748 .64 
89 | 00749 89 tkins_max 0 55                | insert track ParOr_out_55
04 | 00750 .00 addr:1142
76 | 00751 .37 
01 | 00752 01 end                           | end
d1 | 00753 d1 set_c ushort 92 104           | await Q_READY[0]
5c | 00754 5c 
02 | 00755 .00 addr:758
f6 | 00756 .68 
01 | 00757 01 end                           | end
40 | 00758 40 push_c 243                    | push_c &msgRadio:usrMsg
f3 | 00759 f3 
24 | 00760 24 func 11                       | func qGet
0b | 00761 0b 
a0 | 00762 a0 pop ubyte 122                 | pop stat
7a | 00763 7a 
2a | 00764 2a set_v ushort 246 ushort 123   | msgRadio.target = father
11 | 00765 11 
f6 | 00766 f6 
7b | 00767 7b 
2a | 00768 2a set_v ushort 244 ushort 95    | msgRadio.source = nodeid
11 | 00769 11 
f4 | 00770 f4 
5f | 00771 5f 
24 | 00772 24 func 12                       | func qSize
0c | 00773 0c 
a0 | 00774 a0 pop ubyte 250                 | pop msgRadio.d8[2]
fa | 00775 fa 
40 | 00776 40 push_c 126                    | push &send_seq
7e | 00777 7e 
61 | 00778 61 inc ushort                    | inc ushort
2a | 00779 2a set_v ushort 256 ushort 126   | msgRadio.d16[2] = send_seq
91 | 00780 91 
01 | 00781 01 
00 | 00782 00 
7e | 00783 7e 
b1 | 00784 b1 outevt_v 41 243               | emit SEND_ACK len=25 var=msgRadio
29 | 00785 29 
f3 | 00786 f3 
58 | 00787 58 outevt_c 8 2                  | emit LED2 len=1 const=2
08 | 00788 08 
02 | 00789 02 
40 | 00790 40 push_c 1                      | push 1
01 | 00791 01 
a0 | 00792 a0 pop ubyte 73                  | evt SEND_DONE_ACK() auxId = pop
49 | 00793 49 
d1 | 00794 d1 set_c ushort 74 120           | await SEND_DONE_ACK()[0]
4a | 00795 4a 
03 | 00796 .00 addr:799
1f | 00797 .78 
01 | 00798 01 end                           | end
5e | 00799 5e getextdt_v 268 1              | getExtData ack 1
01 | 00800 01 
0c | 00801 0c 
01 | 00802 01 
40 | 00803 40 push_c 0                      | push 0
00 | 00804 00 
98 | 00805 98 push_v ubyte 268              | push ack:ubyte
01 | 00806 01 
0c | 00807 0c 
10 | 00808 10 neq                           | neq
4f | 00809 4f ifelse 122 123                | ifelse True_122 EndIf_123
03 | 00810 .00 addr:814
2e | 00811 .7a 
03 | 00812 .00 addr:822
36 | 00813 .7b 
3d | 00814 3d tkins_z 1 16 118              | insert track Loop_out_118 tree 16
90 | 00815 90 
03 | 00816 .00 addr:828
3c | 00817 .76 
01 | 00818 01 end                           | end
39 | 00819 39 exec 123                      | goto  123
03 | 00820 .00 addr:822
36 | 00821 .7b 
b1 | 00822 b1 outevt_v 41 243               | emit SEND_ACK len=25 var=msgRadio
29 | 00823 29 
f3 | 00824 f3 
39 | 00825 39 exec 116                      | goto  116
03 | 00826 .00 addr:790
16 | 00827 .74 
48 | 00828 48 memclr 73 2                   | clear EXT gates for SEND_DONE_ACK()
49 | 00829 49 
02 | 00830 02 
40 | 00831 40 push_c 0                      | push 0
00 | 00832 00 
24 | 00833 24 func 12                       | func qSize
0c | 00834 0c 
0f | 00835 0f eq                            | eq
4f | 00836 4f ifelse 127 128                | ifelse True_127 EndIf_128
03 | 00837 .00 addr:841
49 | 00838 .7f 
02 | 00839 .00 addr:758
f6 | 00840 .69 
3d | 00841 3d tkins_z 1 13 107              | insert track Loop_out_107 tree 13
8d | 00842 8d 
03 | 00843 .00 addr:849
51 | 00844 .6b 
01 | 00845 01 end                           | end
39 | 00846 39 exec 128                      | goto  128
02 | 00847 .00 addr:758
f6 | 00848 .69 
48 | 00849 48 memclr 73 2                   | clear EXT gates for SEND_DONE_ACK()
49 | 00850 49 
02 | 00851 02 
39 | 00852 39 exec 101                      | goto  101
02 | 00853 .00 addr:753
f1 | 00854 .65 
48 | 00855 48 memclr 73 2                   | clear EXT gates for SEND_DONE_ACK()
49 | 00856 49 
02 | 00857 02 
48 | 00858 48 memclr 92 2                   | clear EXT gates for Q_READY
5c | 00859 5c 
02 | 00860 02 
89 | 00861 89 tkins_max 0 55                | insert track ParOr_out_55
04 | 00862 .00 addr:1142
76 | 00863 .37 
01 | 00864 01 end                           | end
4a | 00865 4a memclr 269 2                  | clear gates from addr 269 to addr 270
01 | 00866 01 
0d | 00867 0d 
02 | 00868 02 
89 | 00869 89 tkins_max 0 132               | insert track ParAnd_sub_1_132
03 | 00870 .00 addr:876
6c | 00871 .84 
89 | 00872 89 tkins_max 0 133               | insert track ParAnd_sub_2_133
03 | 00873 .00 addr:947
b3 | 00874 .85 
01 | 00875 01 end                           | end
26 | 00876 26 outevt_z 9                    | emit REQ_TEMP
09 | 00877 09 
d1 | 00878 d1 set_c ushort 50 139           | await TEMP[0]
32 | 00879 32 
03 | 00880 .00 addr:883
73 | 00881 .8b 
01 | 00882 01 end                           | end
5e | 00883 5e getextdt_v 271 2              | getExtData temp 2
01 | 00884 01 
0f | 00885 0f 
02 | 00886 02 
41 | 00887 41 push_c 530                    | push 530
02 | 00888 02 
12 | 00889 12 
99 | 00890 99 push_v ushort 271             | push temp:ushort
01 | 00891 01 
0f | 00892 0f 
13 | 00893 13 gt                            | gt
4f | 00894 4f ifelse 148 149                | ifelse True_148 False_149
03 | 00895 .00 addr:899
83 | 00896 .94 
03 | 00897 .00 addr:905
89 | 00898 .95 
58 | 00899 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00900 14 
01 | 00901 01 
39 | 00902 39 exec 150                      | goto  150
03 | 00903 .00 addr:940
ac | 00904 .96 
2a | 00905 2a set_v ushort 106 ushort 271   | tempMsg.d16[0] = temp
19 | 00906 19 
6a | 00907 6a 
01 | 00908 01 
0f | 00909 0f 
2a | 00910 2a set_v ushort 98 ushort 95     | tempMsg.source = nodeid
11 | 00911 11 
62 | 00912 62 
5f | 00913 5f 
2a | 00914 2a set_v ushort 108 ushort 95    | tempMsg.d16[1] = nodeid
11 | 00915 11 
6c | 00916 6c 
5f | 00917 5f 
c0 | 00918 c0 set_c ubyte 97 1              | tempMsg.type = 1
61 | 00919 61 
01 | 00920 01 
40 | 00921 40 push_c 102                    | push_c tempMsg.d8[0]
66 | 00922 66 
60 | 00923 60 inc ubyte                     | inc ubyte
28 | 00924 28 clken_v 4 1 ubyte 125 147     | clock enable Awake_jump_147 (jump:ubyte)s
21 | 00925 21 
04 | 00926 04 
7d | 00927 7d 
03 | 00928 .00 addr:931
a3 | 00929 .93 
01 | 00930 01 end                           | end
40 | 00931 40 push_c 97                     | push_c &tempMsg:usrMsg
61 | 00932 61 
24 | 00933 24 func 10                       | func qPut
0a | 00934 0a 
a0 | 00935 a0 pop ubyte 122                 | pop stat
7a | 00936 7a 
39 | 00937 39 exec 150                      | goto  150
03 | 00938 .00 addr:940
ac | 00939 .96 
c8 | 00940 c8 set_c ubyte 269 1             | open gate 1
01 | 00941 01 
0d | 00942 0d 
01 | 00943 01 
39 | 00944 39 exec 134                      | goto  134
03 | 00945 .00 addr:962
c2 | 00946 .86 
29 | 00947 29 clken_c 5 20000 151           | clock enable Awake_20000_151 20000msec
03 | 00948 03 
05 | 00949 05 
4e | 00950 4e 
20 | 00951 20 
03 | 00952 .00 addr:955
bb | 00953 .97 
01 | 00954 01 end                           | end
c8 | 00955 c8 set_c ubyte 270 1             | open gate 2
01 | 00956 01 
0e | 00957 0e 
01 | 00958 01 
39 | 00959 39 exec 134                      | goto  134
03 | 00960 .00 addr:962
c2 | 00961 .86 
3b | 00962 3b chkret 269                    | ParAnd_out_135 -- if (gate 0 == 0) PC=PC+1
01 | 00963 01 
0d | 00964 0d 
01 | 00965 01 end                           | end
3b | 00966 3b chkret 270                    | ParAnd_out_135 -- if (gate 1 == 0) PC=PC+1
01 | 00967 01 
0e | 00968 0e 
01 | 00969 01 end                           | end
39 | 00970 39 exec 129                      | goto  129
03 | 00971 .00 addr:865
61 | 00972 .81 
48 | 00973 48 memclr 32 16                  | clear WClocks gates from 4 to 6
20 | 00974 20 
10 | 00975 10 
48 | 00976 48 memclr 50 2                   | clear EXT gates for TEMP
32 | 00977 32 
02 | 00978 02 
89 | 00979 89 tkins_max 0 55                | insert track ParOr_out_55
04 | 00980 .00 addr:1142
76 | 00981 .37 
01 | 00982 01 end                           | end
40 | 00983 40 push_c 1                      | push 1
01 | 00984 01 
a0 | 00985 a0 pop ubyte 87                  | evt RECEIVE() auxId = pop
57 | 00986 57 
d1 | 00987 d1 set_c ushort 88 156           | await RECEIVE()[3]
58 | 00988 58 
03 | 00989 .00 addr:992
e0 | 00990 .9c 
01 | 00991 01 end                           | end
5e | 00992 5e getextdt_v 273 25             | getExtData rMsg 25
01 | 00993 01 
11 | 00994 11 
19 | 00995 19 
c8 | 00996 c8 set_c ubyte 298 0             | i = 0
01 | 00997 01 
2a | 00998 2a 
00 | 00999 00 
c8 | 01000 c8 set_c ubyte 299 10            | __i_0x88f1668 = 10
01 | 01001 01 
2b | 01002 2b 
0a | 01003 0a 
98 | 01004 98 push_v ubyte 299              | push __i_0x88f1668:ubyte
01 | 01005 01 
2b | 01006 2b 
98 | 01007 98 push_v ubyte 298              | push i:ubyte
01 | 01008 01 
2a | 01009 2a 
11 | 01010 11 gte                           | gte
4f | 01011 4f ifelse 183 184                | ifelse True_183 False_184
03 | 01012 .00 addr:1016
f8 | 01013 .b7 
04 | 01014 .00 addr:1024
00 | 01015 .b8 
3d | 01016 3d tkins_z 1 14 161              | insert track Loop_out_161 tree 14
8e | 01017 8e 
03 | 01018 .00 addr:983
d7 | 01019 .98 
01 | 01020 01 end                           | end
39 | 01021 39 exec 185                      | goto  185
03 | 01022 .00 addr:1004
ec | 01023 .9f 
99 | 01024 99 push_v ushort 274                    | push rMsg.source [Optm:: push_c addr + deref]
01 | 01025 01 
12 | 01026 12 
32 | 01027 32 pusharr_v ushort 128 ubyte 298 10  | pusharr_v &childID[i]
18 | 01028 18 
80 | 01029 80 
01 | 01030 01 
2a | 01031 2a 
0a | 01032 0a 
71 | 01033 71 deref ushort                  | deref ushort
0f | 01034 0f eq                            | eq
4f | 01035 4f ifelse 175 176                | ifelse True_175 EndIf_176
04 | 01036 .00 addr:1040
10 | 01037 .af 
04 | 01038 .00 addr:1080
38 | 01039 .b0 
99 | 01040 99 push_v ushort 286                    | push_v ushort rMsg.d16[2] [Optm:: push_c addr + deref]
01 | 01041 01 
1e | 01042 1e 
32 | 01043 32 pusharr_v ushort 148 ubyte 298 10  | pusharr_v &seq[i]
18 | 01044 18 
94 | 01045 94 
01 | 01046 01 
2a | 01047 2a 
0a | 01048 0a 
71 | 01049 71 deref ushort                  | deref ushort
14 | 01050 14 lt                            | lt
4f | 01051 4f ifelse 173 174                | ifelse True_173 EndIf_174
04 | 01052 .00 addr:1056
20 | 01053 .ad 
04 | 01054 .00 addr:1080
38 | 01055 .b0 
2c | 01056 2c setarr_vv ushort 148 ubyte 298 10 ushort 286  | seq[i] = rMsg.d16[2]
18 | 01057 18 
09 | 01058 09 
94 | 01059 94 
01 | 01060 01 
2a | 01061 2a 
0a | 01062 0a 
01 | 01063 01 
1e | 01064 1e 
41 | 01065 41 push_c 273                    | push_c &rMsg:usrMsg
01 | 01066 01 
11 | 01067 11 
24 | 01068 24 func 10                       | func qPut
0a | 01069 0a 
a0 | 01070 a0 pop ubyte 122                 | pop stat
7a | 01071 7a 
3d | 01072 3d tkins_z 1 14 161              | insert track Loop_out_161 tree 14
8e | 01073 8e 
03 | 01074 .00 addr:983
d7 | 01075 .98 
01 | 01076 01 end                           | end
39 | 01077 39 exec 174                      | goto  174
04 | 01078 .00 addr:1080
38 | 01079 .b0 
40 | 01080 40 push_c 0                      | push 0
00 | 01081 00 
32 | 01082 32 pusharr_v ushort 128 ubyte 298 10  | pusharr_v &childID[i]
18 | 01083 18 
80 | 01084 80 
01 | 01085 01 
2a | 01086 2a 
0a | 01087 0a 
71 | 01088 71 deref ushort                  | deref ushort
0f | 01089 0f eq                            | eq
4f | 01090 4f ifelse 181 182                | ifelse True_181 EndIf_182
04 | 01091 .00 addr:1095
47 | 01092 .b5 
04 | 01093 .00 addr:1128
68 | 01094 .b6 
2c | 01095 2c setarr_vv ushort 128 ubyte 298 10 ushort 274  | childID[i] = rMsg.source
18 | 01096 18 
09 | 01097 09 
80 | 01098 80 
01 | 01099 01 
2a | 01100 2a 
0a | 01101 0a 
01 | 01102 01 
12 | 01103 12 
2c | 01104 2c setarr_vv ushort 148 ubyte 298 10 ushort 286  | seq[i] = rMsg.d16[2]
18 | 01105 18 
09 | 01106 09 
94 | 01107 94 
01 | 01108 01 
2a | 01109 2a 
0a | 01110 0a 
01 | 01111 01 
1e | 01112 1e 
41 | 01113 41 push_c 273                    | push_c &rMsg:usrMsg
01 | 01114 01 
11 | 01115 11 
24 | 01116 24 func 10                       | func qPut
0a | 01117 0a 
a0 | 01118 a0 pop ubyte 122                 | pop stat
7a | 01119 7a 
3d | 01120 3d tkins_z 1 14 161              | insert track Loop_out_161 tree 14
8e | 01121 8e 
03 | 01122 .00 addr:983
d7 | 01123 .98 
01 | 01124 01 end                           | end
39 | 01125 39 exec 182                      | goto  182
04 | 01126 .00 addr:1128
68 | 01127 .b6 
41 | 01128 41 push_c 298                    | push &i
01 | 01129 01 
2a | 01130 2a 
60 | 01131 60 inc ubyte                     | inc ubyte
39 | 01132 39 exec 185                      | goto  185
03 | 01133 .00 addr:1004
ec | 01134 .9f 
48 | 01135 48 memclr 78 2                   | clear EXT gates for RECEIVE()
4e | 01136 4e 
02 | 01137 02 
89 | 01138 89 tkins_max 0 55                | insert track ParOr_out_55
04 | 01139 .00 addr:1142
76 | 01140 .37 
01 | 01141 01 end                           | end
48 | 01142 48 memclr 16 32                  | clear WClocks gates from 2 to 6
10 | 01143 10 
20 | 01144 20 
48 | 01145 48 memclr 50 2                   | clear EXT gates for TEMP
32 | 01146 32 
02 | 01147 02 
48 | 01148 48 memclr 54 2                   | clear EXT gates for CUSTOM_A
36 | 01149 36 
02 | 01150 02 
48 | 01151 48 memclr 58 2                   | clear EXT gates for SEND_DONE()
3a | 01152 3a 
02 | 01153 02 
48 | 01154 48 memclr 69 2                   | clear EXT gates for SEND_DONE
45 | 01155 45 
02 | 01156 02 
48 | 01157 48 memclr 73 2                   | clear EXT gates for SEND_DONE_ACK()
49 | 01158 49 
02 | 01159 02 
48 | 01160 48 memclr 78 6                   | clear EXT gates for RECEIVE()
4e | 01161 4e 
06 | 01162 06 
48 | 01163 48 memclr 92 2                   | clear EXT gates for Q_READY
5c | 01164 5c 
02 | 01165 02 
39 | 01166 39 exec 12                       | goto  12
01 | 01167 .00 addr:389
85 | 01168 .0c 
48 | 01169 48 memclr 0 48                   | clear WClocks gates from 0 to 6
00 | 01170 00 
30 | 01171 30 
48 | 01172 48 memclr 50 2                   | clear EXT gates for TEMP
32 | 01173 32 
02 | 01174 02 
48 | 01175 48 memclr 54 2                   | clear EXT gates for CUSTOM_A
36 | 01176 36 
02 | 01177 02 
48 | 01178 48 memclr 58 6                   | clear EXT gates for SEND_DONE()
3a | 01179 3a 
06 | 01180 06 
48 | 01181 48 memclr 69 2                   | clear EXT gates for SEND_DONE
45 | 01182 45 
02 | 01183 02 
48 | 01184 48 memclr 73 2                   | clear EXT gates for SEND_DONE_ACK()
49 | 01185 49 
02 | 01186 02 
48 | 01187 48 memclr 78 8                   | clear EXT gates for RECEIVE()
4e | 01188 4e 
08 | 01189 08 
48 | 01190 48 memclr 92 2                   | clear EXT gates for Q_READY
5c | 01191 5c 
02 | 01192 02 
01 | 01193 01 end                           | end
48 | 01194 48 memclr 0 48                   | clear WClocks gates from 0 to 6
00 | 01195 00 
30 | 01196 30 
01 | 01197 01 end                           | end

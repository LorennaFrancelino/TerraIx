452 1235 4 9 0 0 72 4 72
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0 track 2
00 | 00009 0
00 | 00010 0
00 | 00011 0
00 | 00012 0 track 3
00 | 00013 0
00 | 00014 0
00 | 00015 0
00 | 00016 0 track 4
00 | 00017 0
00 | 00018 0
00 | 00019 0
00 | 00020 0000 wClock 0
00 | 00021 0001
00 | 00022 0002
00 | 00023 0003
00 | 00024 0004
00 | 00025 0005
00 | 00026 0006
00 | 00027 0007
00 | 00028 0008 wClock 1
00 | 00029 0009
00 | 00030 0010
00 | 00031 0011
00 | 00032 0012
00 | 00033 0013
00 | 00034 0014
00 | 00035 0015
00 | 00036 0016 wClock 2
00 | 00037 0017
00 | 00038 0018
00 | 00039 0019
00 | 00040 0020
00 | 00041 0021
00 | 00042 0022
00 | 00043 0023
00 | 00044 0024 wClock 3
00 | 00045 0025
00 | 00046 0026
00 | 00047 0027
00 | 00048 0028
00 | 00049 0029
00 | 00050 0030
00 | 00051 0031
00 | 00052 0032 wClock 4
00 | 00053 0033
00 | 00054 0034
00 | 00055 0035
00 | 00056 0036
00 | 00057 0037
00 | 00058 0038
00 | 00059 0039
00 | 00060 0040 wClock 5
00 | 00061 0041
00 | 00062 0042
00 | 00063 0043
00 | 00064 0044
00 | 00065 0045
00 | 00066 0046
00 | 00067 0047
00 | 00068 0048 wClock 6
00 | 00069 0049
00 | 00070 0050
00 | 00071 0051
00 | 00072 0052
00 | 00073 0053
00 | 00074 0054
00 | 00075 0055
00 | 00076 0056 wClock 7
00 | 00077 0057
00 | 00078 0058
00 | 00079 0059
00 | 00080 0060
00 | 00081 0061
00 | 00082 0062
00 | 00083 0063
00 | 00084 0064 wClock 8
00 | 00085 0065
00 | 00086 0066
00 | 00087 0067
00 | 00088 0068
00 | 00089 0069
00 | 00090 0070
00 | 00091 0071
00 | 00092 0072 inEvt 005 : TEMP
00 | 00093 0073           : 01 gates
00 | 00094 0074
00 | 00095 0075
00 | 00096 0076 inEvt 041 : SEND_DONE
00 | 00097 0077           : 03 gates
00 | 00098 0078
00 | 00099 0079
00 | 00100 0080
00 | 00101 0081
00 | 00102 0082
00 | 00103 0083
00 | 00104 0084 inEvt 045 : RECEIVE
00 | 00105 0085           : 01 gates
00 | 00106 0086
00 | 00107 0087
00 | 00108 0088 inEvt 046 : Q_READY
00 | 00109 0089           : 01 gates
00 | 00110 0090
00 | 00111 0091
00 | 00112 0092 $ret:1, 
00 | 00113 0093 lastMessageId:2, 
00 | 00114 0094 
00 | 00115 0095 nodeId:2, 
00 | 00116 0096 
00 | 00117 0097 fatherId:2, 
00 | 00118 0098 
00 | 00119 0099 hopWaitTime:2, 
00 | 00120 0100 
00 | 00121 0101 sendMessage:25, 
00 | 00122 0102 
00 | 00123 0103 
00 | 00124 0104 
00 | 00125 0105 
00 | 00126 0106 
00 | 00127 0107 
00 | 00128 0108 
00 | 00129 0109 
00 | 00130 0110 
00 | 00131 0111 
00 | 00132 0112 
00 | 00133 0113 
00 | 00134 0114 
00 | 00135 0115 
00 | 00136 0116 
00 | 00137 0117 
00 | 00138 0118 
00 | 00139 0119 
00 | 00140 0120 
00 | 00141 0121 
00 | 00142 0122 
00 | 00143 0123 
00 | 00144 0124 
00 | 00145 0125 
00 | 00146 0126 receiveMessage:25, 
00 | 00147 0127 
00 | 00148 0128 
00 | 00149 0129 
00 | 00150 0130 
00 | 00151 0131 
00 | 00152 0132 
00 | 00153 0133 
00 | 00154 0134 
00 | 00155 0135 
00 | 00156 0136 
00 | 00157 0137 
00 | 00158 0138 
00 | 00159 0139 
00 | 00160 0140 
00 | 00161 0141 
00 | 00162 0142 
00 | 00163 0143 
00 | 00164 0144 
00 | 00165 0145 
00 | 00166 0146 
00 | 00167 0147 
00 | 00168 0148 
00 | 00169 0149 
00 | 00170 0150 
00 | 00171 0151 sendMessage2:25, 
00 | 00172 0152 
00 | 00173 0153 
00 | 00174 0154 
00 | 00175 0155 
00 | 00176 0156 
00 | 00177 0157 
00 | 00178 0158 
00 | 00179 0159 
00 | 00180 0160 
00 | 00181 0161 
00 | 00182 0162 
00 | 00183 0163 
00 | 00184 0164 
00 | 00185 0165 
00 | 00186 0166 
00 | 00187 0167 
00 | 00188 0168 
00 | 00189 0169 
00 | 00190 0170 
00 | 00191 0171 
00 | 00192 0172 
00 | 00193 0173 
00 | 00194 0174 
00 | 00195 0175 
00 | 00196 0176 receiveMessage2:25, 
00 | 00197 0177 
00 | 00198 0178 
00 | 00199 0179 
00 | 00200 0180 
00 | 00201 0181 
00 | 00202 0182 
00 | 00203 0183 
00 | 00204 0184 
00 | 00205 0185 
00 | 00206 0186 
00 | 00207 0187 
00 | 00208 0188 
00 | 00209 0189 
00 | 00210 0190 
00 | 00211 0191 
00 | 00212 0192 
00 | 00213 0193 
00 | 00214 0194 
00 | 00215 0195 
00 | 00216 0196 
00 | 00217 0197 
00 | 00218 0198 
00 | 00219 0199 
00 | 00220 0200 
00 | 00221 0201 queueError:1, 
00 | 00222 0202 cont:1, 
00 | 00223 0203 cont2:1, 
00 | 00224 0204 loadnodeIds:100, 
00 | 00225 0205 
00 | 00226 0206 
00 | 00227 0207 
00 | 00228 0208 
00 | 00229 0209 
00 | 00230 0210 
00 | 00231 0211 
00 | 00232 0212 
00 | 00233 0213 
00 | 00234 0214 
00 | 00235 0215 
00 | 00236 0216 
00 | 00237 0217 
00 | 00238 0218 
00 | 00239 0219 
00 | 00240 0220 
00 | 00241 0221 
00 | 00242 0222 
00 | 00243 0223 
00 | 00244 0224 
00 | 00245 0225 
00 | 00246 0226 
00 | 00247 0227 
00 | 00248 0228 
00 | 00249 0229 
00 | 00250 0230 
00 | 00251 0231 
00 | 00252 0232 
00 | 00253 0233 
00 | 00254 0234 
00 | 00255 0235 
00 | 00256 0236 
00 | 00257 0237 
00 | 00258 0238 
00 | 00259 0239 
00 | 00260 0240 
00 | 00261 0241 
00 | 00262 0242 
00 | 00263 0243 
00 | 00264 0244 
00 | 00265 0245 
00 | 00266 0246 
00 | 00267 0247 
00 | 00268 0248 
00 | 00269 0249 
00 | 00270 0250 
00 | 00271 0251 
00 | 00272 0252 
00 | 00273 0253 
00 | 00274 0254 
00 | 00275 0255 
00 | 00276 0256 
00 | 00277 0257 
00 | 00278 0258 
00 | 00279 0259 
00 | 00280 0260 
00 | 00281 0261 
00 | 00282 0262 
00 | 00283 0263 
00 | 00284 0264 
00 | 00285 0265 
00 | 00286 0266 
00 | 00287 0267 
00 | 00288 0268 
00 | 00289 0269 
00 | 00290 0270 
00 | 00291 0271 
00 | 00292 0272 
00 | 00293 0273 
00 | 00294 0274 
00 | 00295 0275 
00 | 00296 0276 
00 | 00297 0277 
00 | 00298 0278 
00 | 00299 0279 
00 | 00300 0280 
00 | 00301 0281 
00 | 00302 0282 
00 | 00303 0283 
00 | 00304 0284 
00 | 00305 0285 
00 | 00306 0286 
00 | 00307 0287 
00 | 00308 0288 
00 | 00309 0289 
00 | 00310 0290 
00 | 00311 0291 
00 | 00312 0292 
00 | 00313 0293 
00 | 00314 0294 
00 | 00315 0295 
00 | 00316 0296 
00 | 00317 0297 
00 | 00318 0298 
00 | 00319 0299 
00 | 00320 0300 
00 | 00321 0301 
00 | 00322 0302 
00 | 00323 0303 
00 | 00324 0304 loadValues:100, 
00 | 00325 0305 
00 | 00326 0306 
00 | 00327 0307 
00 | 00328 0308 
00 | 00329 0309 
00 | 00330 0310 
00 | 00331 0311 
00 | 00332 0312 
00 | 00333 0313 
00 | 00334 0314 
00 | 00335 0315 
00 | 00336 0316 
00 | 00337 0317 
00 | 00338 0318 
00 | 00339 0319 
00 | 00340 0320 
00 | 00341 0321 
00 | 00342 0322 
00 | 00343 0323 
00 | 00344 0324 
00 | 00345 0325 
00 | 00346 0326 
00 | 00347 0327 
00 | 00348 0328 
00 | 00349 0329 
00 | 00350 0330 
00 | 00351 0331 
00 | 00352 0332 
00 | 00353 0333 
00 | 00354 0334 
00 | 00355 0335 
00 | 00356 0336 
00 | 00357 0337 
00 | 00358 0338 
00 | 00359 0339 
00 | 00360 0340 
00 | 00361 0341 
00 | 00362 0342 
00 | 00363 0343 
00 | 00364 0344 
00 | 00365 0345 
00 | 00366 0346 
00 | 00367 0347 
00 | 00368 0348 
00 | 00369 0349 
00 | 00370 0350 
00 | 00371 0351 
00 | 00372 0352 
00 | 00373 0353 
00 | 00374 0354 
00 | 00375 0355 
00 | 00376 0356 
00 | 00377 0357 
00 | 00378 0358 
00 | 00379 0359 
00 | 00380 0360 
00 | 00381 0361 
00 | 00382 0362 
00 | 00383 0363 
00 | 00384 0364 
00 | 00385 0365 
00 | 00386 0366 
00 | 00387 0367 
00 | 00388 0368 
00 | 00389 0369 
00 | 00390 0370 
00 | 00391 0371 
00 | 00392 0372 
00 | 00393 0373 
00 | 00394 0374 
00 | 00395 0375 
00 | 00396 0376 
00 | 00397 0377 
00 | 00398 0378 
00 | 00399 0379 
00 | 00400 0380 
00 | 00401 0381 
00 | 00402 0382 
00 | 00403 0383 
00 | 00404 0384 
00 | 00405 0385 
00 | 00406 0386 
00 | 00407 0387 
00 | 00408 0388 
00 | 00409 0389 
00 | 00410 0390 
00 | 00411 0391 
00 | 00412 0392 
00 | 00413 0393 
00 | 00414 0394 
00 | 00415 0395 
00 | 00416 0396 
00 | 00417 0397 
00 | 00418 0398 
00 | 00419 0399 
00 | 00420 0400 
00 | 00421 0401 
00 | 00422 0402 
00 | 00423 0403 
00 | 00424 0404 loadTemperaturePeriod:2, 
00 | 00425 0405 
00 | 00426 0406 loadTemperature:2, 
00 | 00427 0407 
00 | 00428 0408 limitTemperature:2, 
00 | 00429 0409 
00 | 00430 0410 average:2, 
00 | 00431 0411 
00 | 00432 0412 value0:2, 
00 | 00433 0413 
00 | 00434 0414 value1:2, 
00 | 00435 0415 
00 | 00436 0416 value2:2, 
00 | 00437 0417 
00 | 00438 0418 value3:2, 
00 | 00439 0419 
00 | 00440 0420 ParAnd_flag[2], 
00 | 00441 0421 
00 | 00442 0422 i:4, i:4, 
00 | 00443 0423 
00 | 00444 0424 
00 | 00445 0425 
00 | 00446 0426 __i_0x9a4abc0:4, __i_0x9abc600:4, 
00 | 00447 0427 
00 | 00448 0428 
00 | 00449 0429 
00 | 00450 0430 temp:2, temp:2, 
00 | 00451 0431 
d1 | 00452 d1 set_c ushort 72 1281          | config gate TEMP with 1 await(s) - 0x0501 = 1281
48 | 00453 48 
05 | 00454 05 
01 | 00455 01 
d1 | 00456 d1 set_c ushort 76 10499         | config gate SEND_DONE with 3 await(s) - 0x2903 = 10499
4c | 00457 4c 
29 | 00458 29 
03 | 00459 03 
d1 | 00460 d1 set_c ushort 84 11521         | config gate RECEIVE with 1 await(s) - 0x2d01 = 11521
54 | 00461 54 
2d | 00462 2d 
01 | 00463 01 
d1 | 00464 d1 set_c ushort 88 11777         | config gate Q_READY with 1 await(s) - 0x2e01 = 11777
58 | 00465 58 
2e | 00466 2e 
01 | 00467 01 
d1 | 00468 d1 set_c ushort 93 0xffff        | lastMessageId = 0xffff
5d | 00469 5d 
ff | 00470 ff 
ff | 00471 ff 
24 | 00472 24 func 0                        | func getNodeId
00 | 00473 00 
a1 | 00474 a1 pop ushort 95                 | pop nodeId
5f | 00475 5f 
c1 | 00476 c1 set_c ushort 97 0             | fatherId = 0
61 | 00477 61 
00 | 00478 00 
c1 | 00479 c1 set_c ushort 99 0             | hopWaitTime = 0
63 | 00480 63 
00 | 00481 00 
c9 | 00482 c9 set_c ushort 404 10           | loadTemperaturePeriod = 10
01 | 00483 01 
94 | 00484 94 
0a | 00485 0a 
d9 | 00486 d9 set_c ushort 408 515          | limitTemperature = 515
01 | 00487 01 
98 | 00488 98 
02 | 00489 02 
03 | 00490 03 
d9 | 00491 d9 set_c ushort 412 500          | value0 = 500
01 | 00492 01 
9c | 00493 9c 
01 | 00494 01 
f4 | 00495 f4 
d9 | 00496 d9 set_c ushort 414 500          | value1 = 500
01 | 00497 01 
9e | 00498 9e 
01 | 00499 01 
f4 | 00500 f4 
d9 | 00501 d9 set_c ushort 416 500          | value2 = 500
01 | 00502 01 
a0 | 00503 a0 
01 | 00504 01 
f4 | 00505 f4 
d9 | 00506 d9 set_c ushort 418 500          | value3 = 500
01 | 00507 01 
a2 | 00508 a2 
01 | 00509 01 
f4 | 00510 f4 
89 | 00511 89 tkins_max 0 15                | insert track ParEver_sub_1_15
02 | 00512 .00 addr:521
09 | 00513 .0f 
89 | 00514 89 tkins_max 0 16                | insert track ParEver_sub_2_16
02 | 00515 .00 addr:654
8e | 00516 .10 
89 | 00517 89 tkins_max 0 17                | insert track ParEver_sub_3_17
03 | 00518 .00 addr:840
48 | 00519 .11 
01 | 00520 01 end                           | end
4a | 00521 4a memclr 420 2                  | clear gates from addr 420 to addr 421
01 | 00522 01 
a4 | 00523 a4 
02 | 00524 02 
89 | 00525 89 tkins_max 0 24                | insert track ParAnd_sub_1_24
02 | 00526 .00 addr:532
14 | 00527 .18 
89 | 00528 89 tkins_max 0 25                | insert track ParAnd_sub_2_25
02 | 00529 .00 addr:621
6d | 00530 .19 
01 | 00531 01 end                           | end
26 | 00532 26 outevt_z 9                    | emit REQ_TEMP
09 | 00533 09 
d1 | 00534 d1 set_c ushort 74 30            | await TEMP[0]
4a | 00535 4a 
02 | 00536 .00 addr:539
1b | 00537 .1e 
01 | 00538 01 end                           | end
5e | 00539 5e getextdt_v 406 2              | getExtData loadTemperature 2
01 | 00540 01 
96 | 00541 96 
02 | 00542 02 
2a | 00543 2a set_v ushort 412 ushort 414   | value0 = value1
99 | 00544 99 
01 | 00545 01 
9c | 00546 9c 
01 | 00547 01 
9e | 00548 9e 
2a | 00549 2a set_v ushort 414 ushort 416   | value1 = value2
99 | 00550 99 
01 | 00551 01 
9e | 00552 9e 
01 | 00553 01 
a0 | 00554 a0 
2a | 00555 2a set_v ushort 416 ushort 418   | value2 = value3
99 | 00556 99 
01 | 00557 01 
a0 | 00558 a0 
01 | 00559 01 
a2 | 00560 a2 
2a | 00561 2a set_v ushort 418 ushort 406   | value3 = loadTemperature
99 | 00562 99 
01 | 00563 01 
a2 | 00564 a2 
01 | 00565 01 
96 | 00566 96 
40 | 00567 40 push_c 4                      | push 4
04 | 00568 04 
99 | 00569 99 push_v ushort 418             | push value3:ushort
01 | 00570 01 
a2 | 00571 a2 
99 | 00572 99 push_v ushort 416             | push value2:ushort
01 | 00573 01 
a0 | 00574 a0 
99 | 00575 99 push_v ushort 414             | push value1:ushort
01 | 00576 01 
9e | 00577 9e 
99 | 00578 99 push_v ushort 412             | push value0:ushort
01 | 00579 01 
9c | 00580 9c 
06 | 00581 06 add                           | add
06 | 00582 06 add                           | add
06 | 00583 06 add                           | add
09 | 00584 09 div                           | div
a9 | 00585 a9 pop ushort 410                | pop average
01 | 00586 01 
9a | 00587 9a 
99 | 00588 99 push_v ushort 408             | push limitTemperature:ushort
01 | 00589 01 
98 | 00590 98 
99 | 00591 99 push_v ushort 410             | push average:ushort
01 | 00592 01 
9a | 00593 9a 
11 | 00594 11 gte                           | gte
4f | 00595 4f ifelse 44 45                  | ifelse True_44 EndIf_45
02 | 00596 .00 addr:600
58 | 00597 .2c 
02 | 00598 .00 addr:611
63 | 00599 .2d 
58 | 00600 58 outevt_c 8 1                  | emit LED2 len=1 const=1
08 | 00601 08 
01 | 00602 01 
29 | 00603 29 clken_c 0 3000 43             | clock enable Awake_3000_43 3000msec
03 | 00604 03 
00 | 00605 00 
0b | 00606 0b 
b8 | 00607 b8 
02 | 00608 .00 addr:611
63 | 00609 .2d 
01 | 00610 01 end                           | end
58 | 00611 58 outevt_c 8 0                  | emit LED2 len=1 const=0
08 | 00612 08 
00 | 00613 00 
c8 | 00614 c8 set_c ubyte 420 1             | open gate 1
01 | 00615 01 
a4 | 00616 a4 
01 | 00617 01 
39 | 00618 39 exec 26                       | goto  26
02 | 00619 .00 addr:636
7c | 00620 .1a 
28 | 00621 28 clken_v 1 1 ushort 404 49     | clock enable Awake_loadTemperaturePeriod_49 (loadTemperaturePeriod:ushort)s
2b | 00622 2b 
01 | 00623 01 
01 | 00624 01 
94 | 00625 94 
02 | 00626 .00 addr:629
75 | 00627 .31 
01 | 00628 01 end                           | end
c8 | 00629 c8 set_c ubyte 421 1             | open gate 2
01 | 00630 01 
a5 | 00631 a5 
01 | 00632 01 
39 | 00633 39 exec 26                       | goto  26
02 | 00634 .00 addr:636
7c | 00635 .1a 
3b | 00636 3b chkret 420                    | ParAnd_out_27 -- if (gate 0 == 0) PC=PC+1
01 | 00637 01 
a4 | 00638 a4 
01 | 00639 01 end                           | end
3b | 00640 3b chkret 421                    | ParAnd_out_27 -- if (gate 1 == 0) PC=PC+1
01 | 00641 01 
a5 | 00642 a5 
01 | 00643 01 end                           | end
39 | 00644 39 exec 21                       | goto  21
02 | 00645 .00 addr:521
09 | 00646 .15 
48 | 00647 48 memclr 0 16                   | clear WClocks gates from 0 to 2
00 | 00648 00 
10 | 00649 10 
48 | 00650 48 memclr 74 2                   | clear EXT gates for TEMP
4a | 00651 4a 
02 | 00652 02 
01 | 00653 01 end                           | end
d1 | 00654 d1 set_c ushort 86 53            | await RECEIVE[0]
56 | 00655 56 
02 | 00656 .00 addr:659
93 | 00657 .35 
01 | 00658 01 end                           | end
5c | 00659 5c getextdt_v 126 25             | getExtData receiveMessage 25
7e | 00660 7e 
19 | 00661 19 
40 | 00662 40 push_c 0                      | push 0
00 | 00663 00 
90 | 00664 90 push_v ubyte 126                    | push receiveMessage.type [Optm:: push_c addr + deref]
7e | 00665 7e 
0f | 00666 0f eq                            | eq
4f | 00667 4f ifelse 90 91                  | ifelse True_90 False_91
02 | 00668 .00 addr:672
a0 | 00669 .5a 
03 | 00670 .00 addr:811
2b | 00671 .5b 
91 | 00672 91 push_v ushort 93              | push lastMessageId:ushort
5d | 00673 5d 
91 | 00674 91 push_v ushort 144                    | push receiveMessage.id [Optm:: push_c addr + deref]
90 | 00675 90 
13 | 00676 13 gt                            | gt
41 | 00677 41 push_c 0xffff                 | push 0xffff
ff | 00678 ff 
ff | 00679 ff 
91 | 00680 91 push_v ushort 93              | push lastMessageId:ushort
5d | 00681 5d 
0f | 00682 0f eq                            | eq
15 | 00683 15 lor                           | lor
4f | 00684 4f ifelse 84 85                  | ifelse True_84 EndIf_85
02 | 00685 .00 addr:689
b1 | 00686 .54 
02 | 00687 .00 addr:654
8e | 00688 .32 
58 | 00689 58 outevt_c 6 2                  | emit LED0 len=1 const=2
06 | 00690 06 
02 | 00691 02 
2a | 00692 2a set_v ushort 93 ushort 144    | lastMessageId = receiveMessage.id
11 | 00693 11 
5d | 00694 5d 
90 | 00695 90 
2a | 00696 2a set_v ushort 97 ushort 127    | fatherId = receiveMessage.source
11 | 00697 11 
61 | 00698 61 
7f | 00699 7f 
90 | 00700 90 push_v ubyte 149                    | push receiveMessage.hop [Optm:: push_c addr + deref]
95 | 00701 95 
40 | 00702 40 push_c 2                      | push 2
02 | 00703 02 
08 | 00704 08 mult                          | mult
40 | 00705 40 push_c 20                     | push 20
14 | 00706 14 
05 | 00707 05 sub                           | sub
a1 | 00708 a1 pop ushort 99                 | pop hopWaitTime
63 | 00709 63 
c0 | 00710 c0 set_c ubyte 101 0             | sendMessage.type = 0
65 | 00711 65 
00 | 00712 00 
2a | 00713 2a set_v ushort 102 ushort 95    | sendMessage.source = nodeId
11 | 00714 11 
66 | 00715 66 
5f | 00716 5f 
d1 | 00717 d1 set_c ushort 104 0xffff       | sendMessage.target = 0xffff
68 | 00718 68 
ff | 00719 ff 
ff | 00720 ff 
2a | 00721 2a set_v ushort 119 ushort 144   | sendMessage.id = receiveMessage.id
11 | 00722 11 
77 | 00723 77 
90 | 00724 90 
2a | 00725 2a set_v ushort 121 ushort 146   | sendMessage.period = receiveMessage.period
11 | 00726 11 
79 | 00727 79 
92 | 00728 92 
2a | 00729 2a set_v ubyte 123 ubyte 148     | sendMessage.code = receiveMessage.code
00 | 00730 00 
7b | 00731 7b 
94 | 00732 94 
40 | 00733 40 push_c 1                      | push 1
01 | 00734 01 
90 | 00735 90 push_v ubyte 149                    | push receiveMessage.hop [Optm:: push_c addr + deref]
95 | 00736 95 
06 | 00737 06 add                           | add
a0 | 00738 a0 pop ubyte 124                 | pop sendMessage.hop
7c | 00739 7c 
40 | 00740 40 push_c 200                    | push 200
c8 | 00741 c8 
24 | 00742 24 func 1                        | func random
01 | 00743 01 
07 | 00744 07 mod                           | mod
27 | 00745 27 clken_e 2 0 68                | clock enable Awake_exp_68 (stack)ms
01 | 00746 01 
02 | 00747 02 
02 | 00748 .00 addr:751
ef | 00749 .44 
01 | 00750 01 end                           | end
b1 | 00751 b1 outevt_v 40 101               | emit SEND len=25 var=sendMessage
28 | 00752 28 
65 | 00753 65 
d1 | 00754 d1 set_c ushort 78 72            | await SEND_DONE[0]
4e | 00755 4e 
02 | 00756 .00 addr:759
f7 | 00757 .48 
01 | 00758 01 end                           | end
40 | 00759 40 push_c 0                      | push 0
00 | 00760 00 
90 | 00761 90 push_v ubyte 148                    | push receiveMessage.code [Optm:: push_c addr + deref]
94 | 00762 94 
0f | 00763 0f eq                            | eq
4f | 00764 4f ifelse 81 82                  | ifelse True_81 False_82
03 | 00765 .00 addr:769
01 | 00766 .51 
03 | 00767 .00 addr:777
09 | 00768 .52 
2a | 00769 2a set_v ushort 404 ushort 146   | loadTemperaturePeriod = receiveMessage.period
91 | 00770 91 
01 | 00771 01 
94 | 00772 94 
92 | 00773 92 
39 | 00774 39 exec 83                       | goto  83
02 | 00775 .00 addr:654
8e | 00776 .32 
40 | 00777 40 push_c 1                      | push 1
01 | 00778 01 
90 | 00779 90 push_v ubyte 148                    | push receiveMessage.code [Optm:: push_c addr + deref]
94 | 00780 94 
0f | 00781 0f eq                            | eq
4f | 00782 4f ifelse 78 79                  | ifelse True_78 False_79
03 | 00783 .00 addr:787
13 | 00784 .4e 
02 | 00785 .00 addr:654
8e | 00786 .32 
c0 | 00787 c0 set_c ubyte 101 1             | sendMessage.type = 1
65 | 00788 65 
01 | 00789 01 
c0 | 00790 c0 set_c ubyte 106 1             | sendMessage.numPairs = 1
6a | 00791 6a 
01 | 00792 01 
2a | 00793 2a set_v ushort 107 ushort 95    | sendMessage.nodeIds[0] = nodeId
11 | 00794 11 
6b | 00795 6b 
5f | 00796 5f 
2a | 00797 2a set_v ushort 113 ushort 410   | sendMessage.values[0] = average
19 | 00798 19 
71 | 00799 71 
01 | 00800 01 
9a | 00801 9a 
40 | 00802 40 push_c 101                    | push_c &sendMessage:usrMsg
65 | 00803 65 
24 | 00804 24 func 10                       | func qPut
0a | 00805 0a 
a0 | 00806 a0 pop ubyte 201                 | pop queueError
c9 | 00807 c9 
39 | 00808 39 exec 80                       | goto  80
02 | 00809 .00 addr:654
8e | 00810 .32 
40 | 00811 40 push_c 1                      | push 1
01 | 00812 01 
90 | 00813 90 push_v ubyte 126                    | push receiveMessage.type [Optm:: push_c addr + deref]
7e | 00814 7e 
0f | 00815 0f eq                            | eq
4f | 00816 4f ifelse 87 88                  | ifelse True_87 False_88
03 | 00817 .00 addr:821
35 | 00818 .57 
02 | 00819 .00 addr:654
8e | 00820 .32 
40 | 00821 40 push_c 126                    | push_c &receiveMessage:usrMsg
7e | 00822 7e 
24 | 00823 24 func 10                       | func qPut
0a | 00824 0a 
a0 | 00825 a0 pop ubyte 201                 | pop queueError
c9 | 00826 c9 
39 | 00827 39 exec 89                       | goto  89
02 | 00828 .00 addr:654
8e | 00829 .32 
48 | 00830 48 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 00831 10 
08 | 00832 08 
48 | 00833 48 memclr 78 2                   | clear EXT gates for SEND_DONE
4e | 00834 4e 
02 | 00835 02 
48 | 00836 48 memclr 86 2                   | clear EXT gates for RECEIVE
56 | 00837 56 
02 | 00838 02 
01 | 00839 01 end                           | end
d1 | 00840 d1 set_c ushort 90 96            | await Q_READY[0]
5a | 00841 5a 
03 | 00842 .00 addr:845
4d | 00843 .60 
01 | 00844 01 end                           | end
40 | 00845 40 push_c 0                      | push 0
00 | 00846 00 
91 | 00847 91 push_v ushort 99              | push hopWaitTime:ushort
63 | 00848 63 
10 | 00849 10 neq                           | neq
4f | 00850 4f ifelse 176 177                | ifelse True_176 EndIf_177
03 | 00851 .00 addr:855
57 | 00852 .b0 
04 | 00853 .00 addr:1205
b5 | 00854 .b1 
28 | 00855 28 clken_v 3 1 ushort 99 102     | clock enable Awake_hopWaitTime_102 (hopWaitTime:ushort)s
29 | 00856 29 
03 | 00857 03 
63 | 00858 63 
03 | 00859 .00 addr:862
5e | 00860 .66 
01 | 00861 01 end                           | end
c0 | 00862 c0 set_c ubyte 202 0             | cont = 0
ca | 00863 ca 
00 | 00864 00 
40 | 00865 40 push_c 0                      | push 0
00 | 00866 00 
24 | 00867 24 func 12                       | func qSize
0c | 00868 0c 
0f | 00869 0f eq                            | eq
4f | 00870 4f ifelse 106 107                | ifelse True_106 EndIf_107
03 | 00871 .00 addr:875
6b | 00872 .6a 
03 | 00873 .00 addr:883
73 | 00874 .6b 
3d | 00875 3d tkins_z 1 15 105              | insert track Loop_out_105 tree 15
8f | 00876 8f 
03 | 00877 .00 addr:978
d2 | 00878 .69 
01 | 00879 01 end                           | end
39 | 00880 39 exec 107                      | goto  107
03 | 00881 .00 addr:883
73 | 00882 .6b 
40 | 00883 40 push_c 176                    | push_c &receiveMessage2:usrMsg
b0 | 00884 b0 
24 | 00885 24 func 11                       | func qGet
0b | 00886 0b 
a0 | 00887 a0 pop ubyte 201                 | pop queueError
c9 | 00888 c9 
ca | 00889 ca set_c ulong 422 0             | i = 0
01 | 00890 01 
a6 | 00891 a6 
00 | 00892 00 
2a | 00893 2a set_v ulong 426 ubyte 181     | __i_0x9a4abc0 = receiveMessage2.numPairs
a0 | 00894 a0 
01 | 00895 01 
aa | 00896 aa 
b5 | 00897 b5 
9a | 00898 9a push_v ulong 426              | push __i_0x9a4abc0:ulong
01 | 00899 01 
aa | 00900 aa 
9a | 00901 9a push_v ulong 422              | push i:ulong
01 | 00902 01 
a6 | 00903 a6 
11 | 00904 11 gte                           | gte
4f | 00905 4f ifelse 124 125                | ifelse True_124 False_125
03 | 00906 .00 addr:910
8e | 00907 .7c 
03 | 00908 .00 addr:918
96 | 00909 .7d 
3d | 00910 3d tkins_z 1 19 113              | insert track Loop_out_113 tree 19
93 | 00911 93 
03 | 00912 .00 addr:971
cb | 00913 .71 
01 | 00914 01 end                           | end
39 | 00915 39 exec 126                      | goto  126
03 | 00916 .00 addr:898
82 | 00917 .6f 
40 | 00918 40 push_c 182                    | push receiveMessage2.nodeIds
b6 | 00919 b6 
40 | 00920 40 push_c 3                      | push idx max 3
03 | 00921 03 
9a | 00922 9a push_v ulong 422              | push i:ulong
01 | 00923 01 
a6 | 00924 a6 
07 | 00925 07 mod                           | mod: limmit idx
40 | 00926 40 push_c 2                      | push var len ushort
02 | 00927 02 
08 | 00928 08 mult                          | mult: varlen * idx
06 | 00929 06 add                           | add: array base addr + len position
71 | 00930 71 deref ushort                  | deref ushort
30 | 00931 30 poparr_v ushort 204 ubyte 202 50  | pop to loadnodeIds[cont]
10 | 00932 10 
cc | 00933 cc 
ca | 00934 ca 
32 | 00935 32 
40 | 00936 40 push_c 188                    | push receiveMessage2.values
bc | 00937 bc 
40 | 00938 40 push_c 3                      | push idx max 3
03 | 00939 03 
9a | 00940 9a push_v ulong 422              | push i:ulong
01 | 00941 01 
a6 | 00942 a6 
07 | 00943 07 mod                           | mod: limmit idx
40 | 00944 40 push_c 2                      | push var len ushort
02 | 00945 02 
08 | 00946 08 mult                          | mult: varlen * idx
06 | 00947 06 add                           | add: array base addr + len position
71 | 00948 71 deref ushort                  | deref ushort
a9 | 00949 a9 pop ushort 430                | pop temp
01 | 00950 01 
ae | 00951 ae 
2c | 00952 2c setarr_vv ushort 304 ubyte 202 50 ushort 430  | loadValues[cont] = temp
90 | 00953 90 
09 | 00954 09 
01 | 00955 01 
30 | 00956 30 
ca | 00957 ca 
32 | 00958 32 
01 | 00959 01 
ae | 00960 ae 
40 | 00961 40 push_c 202                    | push &cont
ca | 00962 ca 
60 | 00963 60 inc ubyte                     | inc ubyte
41 | 00964 41 push_c 422                    | push &i
01 | 00965 01 
a6 | 00966 a6 
62 | 00967 62 inc ulong                     | inc ulong
39 | 00968 39 exec 126                      | goto  126
03 | 00969 .00 addr:898
82 | 00970 .6f 
29 | 00971 29 clken_c 4 1 127               | clock enable Awake_1_127 1msec
01 | 00972 01 
04 | 00973 04 
01 | 00974 01 
03 | 00975 .00 addr:865
61 | 00976 .67 
01 | 00977 01 end                           | end
48 | 00978 48 memclr 32 8                   | clear WClocks gates from 4 to 5
20 | 00979 20 
08 | 00980 08 
40 | 00981 40 push_c 0                      | push 0
00 | 00982 00 
24 | 00983 24 func 12                       | func qSize
0c | 00984 0c 
0f | 00985 0f eq                            | eq
4f | 00986 4f ifelse 128 129                | ifelse True_128 EndIf_129
03 | 00987 .00 addr:991
df | 00988 .80 
03 | 00989 .00 addr:999
e7 | 00990 .81 
3d | 00991 3d tkins_z 1 10 99               | insert track Loop_out_99 tree 10
8a | 00992 8a 
04 | 00993 .00 addr:1212
bc | 00994 .63 
01 | 00995 01 end                           | end
39 | 00996 39 exec 129                      | goto  129
03 | 00997 .00 addr:999
e7 | 00998 .81 
c0 | 00999 c0 set_c ubyte 151 1             | sendMessage2.type = 1
97 | 01000 97 
01 | 01001 01 
2a | 01002 2a set_v ushort 152 ushort 95    | sendMessage2.source = nodeId
11 | 01003 11 
98 | 01004 98 
5f | 01005 5f 
2a | 01006 2a set_v ushort 154 ushort 97    | sendMessage2.target = fatherId
11 | 01007 11 
9a | 01008 9a 
61 | 01009 61 
2a | 01010 2a set_v ushort 169 ushort 194   | sendMessage2.id = receiveMessage2.id
11 | 01011 11 
a9 | 01012 a9 
c2 | 01013 c2 
c0 | 01014 c0 set_c ubyte 156 3             | sendMessage2.numPairs = 3
9c | 01015 9c 
03 | 01016 03 
c0 | 01017 c0 set_c ubyte 203 0             | cont2 = 0
cb | 01018 cb 
00 | 01019 00 
ca | 01020 ca set_c ulong 422 0             | i = 0
01 | 01021 01 
a6 | 01022 a6 
00 | 01023 00 
2a | 01024 2a set_v ulong 426 ubyte 202     | __i_0x9abc600 = cont
a0 | 01025 a0 
01 | 01026 01 
aa | 01027 aa 
ca | 01028 ca 
9a | 01029 9a push_v ulong 426              | push __i_0x9abc600:ulong
01 | 01030 01 
aa | 01031 aa 
9a | 01032 9a push_v ulong 422              | push i:ulong
01 | 01033 01 
a6 | 01034 a6 
11 | 01035 11 gte                           | gte
4f | 01036 4f ifelse 159 160                | ifelse True_159 False_160
04 | 01037 .00 addr:1041
11 | 01038 .9f 
04 | 01039 .00 addr:1049
19 | 01040 .a0 
3d | 01041 3d tkins_z 1 16 138              | insert track Loop_out_138 tree 16
90 | 01042 90 
04 | 01043 .00 addr:1143
77 | 01044 .8a 
01 | 01045 01 end                           | end
39 | 01046 39 exec 161                      | goto  161
04 | 01047 .00 addr:1029
05 | 01048 .88 
32 | 01049 32 pusharr_v ushort 204 ulong 422 50  | pusharr_v &loadnodeIds[i]
1a | 01050 1a 
cc | 01051 cc 
01 | 01052 01 
a6 | 01053 a6 
32 | 01054 32 
71 | 01055 71 deref ushort                  | deref ushort
40 | 01056 40 push_c 157                    | push sendMessage2.nodeIds
9d | 01057 9d 
40 | 01058 40 push_c 3                      | push idx max 3
03 | 01059 03 
90 | 01060 90 push_v ubyte 203              | push cont2:ubyte
cb | 01061 cb 
07 | 01062 07 mod                           | mod: limmit idx
40 | 01063 40 push_c 2                      | push var len ushort
02 | 01064 02 
08 | 01065 08 mult                          | mult: varlen * idx
06 | 01066 06 add                           | add: array base addr + len position
69 | 01067 69 set_e ushort                  | set (ushort)*(pop1) = pop2
32 | 01068 32 pusharr_v ushort 304 ulong 422 50  | pusharr_v &loadValues[i]
9a | 01069 9a 
01 | 01070 01 
30 | 01071 30 
01 | 01072 01 
a6 | 01073 a6 
32 | 01074 32 
71 | 01075 71 deref ushort                  | deref ushort
41 | 01076 41 push_c 430                    | push_c &temp:ushort
01 | 01077 01 
ae | 01078 ae 
69 | 01079 69 set_e ushort                  | set (ushort)*(pop1) = pop2
99 | 01080 99 push_v ushort 430             | push temp:ushort
01 | 01081 01 
ae | 01082 ae 
40 | 01083 40 push_c 163                    | push sendMessage2.values
a3 | 01084 a3 
40 | 01085 40 push_c 3                      | push idx max 3
03 | 01086 03 
90 | 01087 90 push_v ubyte 203              | push cont2:ubyte
cb | 01088 cb 
07 | 01089 07 mod                           | mod: limmit idx
40 | 01090 40 push_c 2                      | push var len ushort
02 | 01091 02 
08 | 01092 08 mult                          | mult: varlen * idx
06 | 01093 06 add                           | add: array base addr + len position
69 | 01094 69 set_e ushort                  | set (ushort)*(pop1) = pop2
40 | 01095 40 push_c 203                    | push &cont2
cb | 01096 cb 
60 | 01097 60 inc ubyte                     | inc ubyte
40 | 01098 40 push_c 3                      | push 3
03 | 01099 03 
90 | 01100 90 push_v ubyte 203              | push cont2:ubyte
cb | 01101 cb 
0f | 01102 0f eq                            | eq
4f | 01103 4f ifelse 157 158                | ifelse True_157 EndIf_158
04 | 01104 .00 addr:1108
54 | 01105 .9d 
04 | 01106 .00 addr:1136
70 | 01107 .9e 
40 | 01108 40 push_c 200                    | push 200
c8 | 01109 c8 
24 | 01110 24 func 1                        | func random
01 | 01111 01 
07 | 01112 07 mod                           | mod
27 | 01113 27 clken_e 5 0 150               | clock enable Awake_exp_150 (stack)ms
01 | 01114 01 
05 | 01115 05 
04 | 01116 .00 addr:1119
5f | 01117 .96 
01 | 01118 01 end                           | end
b1 | 01119 b1 outevt_v 40 151               | emit SEND len=25 var=sendMessage2
28 | 01120 28 
97 | 01121 97 
d1 | 01122 d1 set_c ushort 80 154           | await SEND_DONE[1]
50 | 01123 50 
04 | 01124 .00 addr:1127
67 | 01125 .9a 
01 | 01126 01 end                           | end
58 | 01127 58 outevt_c 7 1                  | emit LED1 len=1 const=1
07 | 01128 07 
01 | 01129 01 
c0 | 01130 c0 set_c ubyte 203 0             | cont2 = 0
cb | 01131 cb 
00 | 01132 00 
39 | 01133 39 exec 158                      | goto  158
04 | 01134 .00 addr:1136
70 | 01135 .9e 
41 | 01136 41 push_c 422                    | push &i
01 | 01137 01 
a6 | 01138 a6 
62 | 01139 62 inc ulong                     | inc ulong
39 | 01140 39 exec 161                      | goto  161
04 | 01141 .00 addr:1029
05 | 01142 .88 
48 | 01143 48 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 01144 28 
08 | 01145 08 
48 | 01146 48 memclr 78 2                   | clear EXT gates for SEND_DONE
4e | 01147 4e 
02 | 01148 02 
40 | 01149 40 push_c 0                      | push 0
00 | 01150 00 
90 | 01151 90 push_v ubyte 203              | push cont2:ubyte
cb | 01152 cb 
10 | 01153 10 neq                           | neq
4f | 01154 4f ifelse 171 172                | ifelse True_171 EndIf_172
04 | 01155 .00 addr:1159
87 | 01156 .ab 
04 | 01157 .00 addr:1188
a4 | 01158 .ac 
2a | 01159 2a set_v ubyte 156 ubyte 203     | sendMessage2.numPairs = cont2
00 | 01160 00 
9c | 01161 9c 
cb | 01162 cb 
40 | 01163 40 push_c 200                    | push 200
c8 | 01164 c8 
24 | 01165 24 func 1                        | func random
01 | 01166 01 
07 | 01167 07 mod                           | mod
27 | 01168 27 clken_e 6 0 164               | clock enable Awake_exp_164 (stack)ms
01 | 01169 01 
06 | 01170 06 
04 | 01171 .00 addr:1174
96 | 01172 .a4 
01 | 01173 01 end                           | end
b1 | 01174 b1 outevt_v 40 151               | emit SEND len=25 var=sendMessage2
28 | 01175 28 
97 | 01176 97 
d1 | 01177 d1 set_c ushort 82 168           | await SEND_DONE[2]
52 | 01178 52 
04 | 01179 .00 addr:1182
9e | 01180 .a8 
01 | 01181 01 end                           | end
58 | 01182 58 outevt_c 7 1                  | emit LED1 len=1 const=1
07 | 01183 07 
01 | 01184 01 
39 | 01185 39 exec 172                      | goto  172
04 | 01186 .00 addr:1188
a4 | 01187 .ac 
29 | 01188 29 clken_c 7 3000 173            | clock enable Awake_3000_173 3000msec
03 | 01189 03 
07 | 01190 07 
0b | 01191 0b 
b8 | 01192 b8 
04 | 01193 .00 addr:1196
ac | 01194 .ad 
01 | 01195 01 end                           | end
58 | 01196 58 outevt_c 7 0                  | emit LED1 len=1 const=0
07 | 01197 07 
00 | 01198 00 
c1 | 01199 c1 set_c ushort 99 0             | hopWaitTime = 0
63 | 01200 63 
00 | 01201 00 
39 | 01202 39 exec 177                      | goto  177
04 | 01203 .00 addr:1205
b5 | 01204 .b1 
29 | 01205 29 clken_c 8 10 178              | clock enable Awake_10_178 10msec
01 | 01206 01 
08 | 01207 08 
0a | 01208 0a 
03 | 01209 .00 addr:845
4d | 01210 .61 
01 | 01211 01 end                           | end
48 | 01212 48 memclr 24 48                  | clear WClocks gates from 3 to 9
18 | 01213 18 
30 | 01214 30 
48 | 01215 48 memclr 78 4                   | clear EXT gates for SEND_DONE
4e | 01216 4e 
04 | 01217 04 
39 | 01218 39 exec 93                       | goto  93
03 | 01219 .00 addr:840
48 | 01220 .5d 
48 | 01221 48 memclr 24 48                  | clear WClocks gates from 3 to 9
18 | 01222 18 
30 | 01223 30 
48 | 01224 48 memclr 78 4                   | clear EXT gates for SEND_DONE
4e | 01225 4e 
04 | 01226 04 
48 | 01227 48 memclr 90 2                   | clear EXT gates for Q_READY
5a | 01228 5a 
02 | 01229 02 
01 | 01230 01 end                           | end
48 | 01231 48 memclr 0 72                   | clear WClocks gates from 0 to 9
00 | 01232 00 
48 | 01233 48 
01 | 01234 01 end                           | end

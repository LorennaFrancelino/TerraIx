#include "/home/terra/TerraNet_v0.1/terra/TerraNet.defs"

#define RSLEEP 200

#define PROBE 77
#define ECHO  76
#define FROM_BS 30000


// INDICES
#define ITIME 2 // time stamp
#define ILIM 3 // Periodo de coleta
#define ISET 4 // 1 - SET, 2 - GET
#define IHOP 0 
#define MAXIDX 5 // Numero de pares enviados (comeÃ§a do 0)

var ubyte err;
var ubyte enviar=0;
var ubyte idx=0;


var ushort temp,limite,media=0;
var ushort v1,v2,v3,v4;
var ushort rtime;
var ushort hop=0;


pktype usrMsg from radioMsg with
  var ushort[10] d16;
end

var usrMsg msgRadio;
var usrMsg msgRadio2;
var usrMsg sendbuf;

sendbuf.type=0;



var ushort nodeid = getNodeId();


var ushort last = 0;
var ushort pai=0;


// inicializacao
v2=0;v3=0;v4=0;
limite=600;
pai=0;



par do
  // Loop de obter temp e acender LED #2
  loop do
    emit REQ_TEMP();
    temp = await TEMP;
    v1=v2;v2=v3;v3=v4;v4=temp;
    media=(v1+v2+v3+v4)/4;
    if (temp > limite) then
      emit LED2(ON);  
    end
    await 3s;
    emit LED2(OFF);
    await 3s;
  end
with
  // Loop de recebimento de msgs
  loop do
    msgRadio = await RECEIVE;
    // Se eh um probe joga para baixo se ainda nao o fez 
    if msgRadio.type==PROBE then

      // se o probe veio da BASE Station faz ele ficar inedito
      if msgRadio.d16[ITIME] > FROM_BS then
        msgRadio.d16[ITIME] = last+1;
      end

      // se o probe eh inedito
      if msgRadio.d16[ITIME] > last then
        emit LED0(TOGGLE);  

        // Atualiza:
        // indice do pai
        // time stamp da ultima msg
        // hop id
        pai=msgRadio.source;
        last=msgRadio.d16[ITIME];
        hop=msgRadio.d16[IHOP];


        // Se o probe for um set
        if msgRadio.d16[ISET] > 0 then
          limite=msgRadio.d16[ILIM];

        // Senao coloca no send buffer minha media
        // Marca p/ inicio o loop de envio
        else 
          idx=0;
          enviar=1;
          sendbuf.d16[idx]=nodeid; inc idx;
          sendbuf.d16[idx]=media;  inc idx;
          sendbuf.type=idx;
        end

        // Envia o probe com um BROADCAST
        // incrementando o hop
        msgRadio.source=nodeid;
        msgRadio.target=BROADCAST;
        msgRadio.d16[IHOP]=hop+1;

        await (random()%RSLEEP)ms;
        emit SEND(msgRadio);
        await SEND_DONE;

      end

    // Se nao eh um probe coloca essa msg na fila
    else

      // O type da mesnagem contem o numero de itens q ela contem
      // Se a msg jah estiver cheia, coloca na fila
      if msgRadio.type>MAXIDX then
        err=qPut(msgRadio);

      // Se nao, coloca no send buffer
      else
        var ubyte i=0;
        loop do
          await 1ms;

          var ubyte i1=i+1;
          var ushort tmp;
          // Copia a msg recebida p/ o send buffer
          tmp=msgRadio.d16[i];
          sendbuf.d16[idx]=tmp;   inc idx;
          tmp=msgRadio.d16[i1];
          sendbuf.d16[idx]=tmp; inc idx;
          sendbuf.type=idx;

          // Se o send buffer encheu, coloca na fila
          if sendbuf.type>MAXIDX then
            err=qPut(sendbuf);
            idx=0;
            sendbuf.type=idx;

            // zera o send buffer
            loop j,MAXIDX+1 do
              sendbuf.d16[j]=0;
            end
          end

          i=i+2;
          
          // Se varreu toda a msg recebida, sai
          if i>=msgRadio.type then
            break;
          end
        end
      end
    end
  end

with

// Loop de "echo"
loop do
  await (10)ms;
  if enviar > 0 then

    // Os nos proximos da raiz (BStation) dormem mais
    await (15-2*hop)s;

    // Se o send buffer estiver preenchido, coloca na fila
    if sendbuf.type > 0 then
      err=qPut(sendbuf);
    end
    enviar=0;

    // Enquanto a fila nao estah vazia ...
    loop do
      rtime=random()%RSLEEP;
      await (rtime)ms;
      if qSize() > 0 then

        err=qGet(msgRadio2); 
        msgRadio2.source=nodeid;

        if msgRadio2.type < PROBE then
          emit LED1(TOGGLE);  
          msgRadio2.target=pai;
          emit SEND_ACK(msgRadio2);
          await SEND_DONE_ACK;
        end
      else
        break;  // Se a fila estah vazia, sai
      end
    end
  end
end
end
